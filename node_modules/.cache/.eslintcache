[{"C:\\Users\\sam\\final\\camunda-react\\src\\index.js":"1","C:\\Users\\sam\\final\\camunda-react\\src\\store\\configureStore.js":"2","C:\\Users\\sam\\final\\camunda-react\\src\\containers\\Root.js":"3","C:\\Users\\sam\\final\\camunda-react\\src\\containers\\App.js":"4","C:\\Users\\sam\\final\\camunda-react\\src\\containers\\TasklistPage.js":"5","C:\\Users\\sam\\final\\camunda-react\\src\\containers\\StartProcessListPage.js":"6","C:\\Users\\sam\\final\\camunda-react\\src\\containers\\StartProcessPage.js":"7","C:\\Users\\sam\\final\\camunda-react\\src\\middleware\\api.js":"8","C:\\Users\\sam\\final\\camunda-react\\src\\components\\Footer.js":"9","C:\\Users\\sam\\final\\camunda-react\\src\\components\\Header.js":"10","C:\\Users\\sam\\final\\camunda-react\\src\\reducers\\index.js":"11","C:\\Users\\sam\\final\\camunda-react\\src\\components\\DeployProcess.js":"12","C:\\Users\\sam\\final\\camunda-react\\src\\components\\BPMNDiagram.js":"13","C:\\Users\\sam\\final\\camunda-react\\src\\components\\GenericForm.js":"14","C:\\Users\\sam\\final\\camunda-react\\src\\components\\Taskform.js":"15","C:\\Users\\sam\\final\\camunda-react\\src\\components\\List.js":"16","C:\\Users\\sam\\final\\camunda-react\\src\\actions\\index.js":"17","C:\\Users\\sam\\final\\camunda-react\\src\\constants\\ActionTypes.js":"18","C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\index.js":"19","C:\\Users\\sam\\final\\camunda-react\\src\\actions\\camunda-rest\\deployment.js":"20","C:\\Users\\sam\\final\\camunda-react\\src\\actions\\camunda-rest\\task.js":"21","C:\\Users\\sam\\final\\camunda-react\\src\\actions\\camunda-rest\\process-definition.js":"22","C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\LandAllotment_camunda\\index.js":"23","C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\myprocess\\index.js":"24","C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\LandAllotment_camunda\\userTask.js":"25","C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\myprocess\\startNewProcess.js":"26","C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\invoice\\index.js":"27","C:\\Users\\sam\\final\\camunda-react\\src\\constants\\ValidationOptions.js":"28","C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\invoice\\startProcess.js":"29","C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\invoice\\newTask.js":"30","C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\myprocess\\approveDataTask.js":"31","C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\LandAllotment_camunda\\statNewProcess.js":"32"},{"size":420,"mtime":1679389632794,"results":"33","hashOfConfig":"34"},{"size":322,"mtime":1679389632802,"results":"35","hashOfConfig":"34"},{"size":982,"mtime":1679389632794,"results":"36","hashOfConfig":"34"},{"size":1383,"mtime":1679568823587,"results":"37","hashOfConfig":"34"},{"size":1740,"mtime":1679565789956,"results":"38","hashOfConfig":"34"},{"size":1748,"mtime":1679505491283,"results":"39","hashOfConfig":"34"},{"size":1543,"mtime":1679564570700,"results":"40","hashOfConfig":"34"},{"size":4412,"mtime":1679389632794,"results":"41","hashOfConfig":"34"},{"size":197,"mtime":1679389998347,"results":"42","hashOfConfig":"34"},{"size":1122,"mtime":1679568896594,"results":"43","hashOfConfig":"34"},{"size":1096,"mtime":1679389632802,"results":"44","hashOfConfig":"34"},{"size":1256,"mtime":1679389632778,"results":"45","hashOfConfig":"34"},{"size":1186,"mtime":1679389632778,"results":"46","hashOfConfig":"34"},{"size":1756,"mtime":1679506479165,"results":"47","hashOfConfig":"34"},{"size":1423,"mtime":1679389632778,"results":"48","hashOfConfig":"34"},{"size":1420,"mtime":1679389632778,"results":"49","hashOfConfig":"34"},{"size":1972,"mtime":1679389632778,"results":"50","hashOfConfig":"34"},{"size":1840,"mtime":1679389632794,"results":"51","hashOfConfig":"34"},{"size":330,"mtime":1679390215899,"results":"52","hashOfConfig":"34"},{"size":669,"mtime":1679389632778,"results":"53","hashOfConfig":"34"},{"size":1418,"mtime":1679389632778,"results":"54","hashOfConfig":"34"},{"size":1935,"mtime":1679564142093,"results":"55","hashOfConfig":"34"},{"size":112,"mtime":1679483503095,"results":"56","hashOfConfig":"34"},{"size":128,"mtime":1679389632789,"results":"57","hashOfConfig":"34"},{"size":1325,"mtime":1679389968411,"results":"58","hashOfConfig":"34"},{"size":1203,"mtime":1679389632789,"results":"59","hashOfConfig":"34"},{"size":108,"mtime":1679389632787,"results":"60","hashOfConfig":"34"},{"size":536,"mtime":1679389632794,"results":"61","hashOfConfig":"34"},{"size":2593,"mtime":1679389632789,"results":"62","hashOfConfig":"34"},{"size":2593,"mtime":1679389632789,"results":"63","hashOfConfig":"34"},{"size":1220,"mtime":1679389632789,"results":"64","hashOfConfig":"34"},{"size":11649,"mtime":1679569292391,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"json4h",{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"68"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"68"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\sam\\final\\camunda-react\\src\\index.js",[],["133","134"],"C:\\Users\\sam\\final\\camunda-react\\src\\store\\configureStore.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\containers\\Root.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\containers\\App.js",["135"],"C:\\Users\\sam\\final\\camunda-react\\src\\containers\\TasklistPage.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\containers\\StartProcessListPage.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\containers\\StartProcessPage.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\middleware\\api.js",["136"],"import { normalize, schema } from 'normalizr'\r\nimport { camelizeKeys } from 'humps'\r\n\r\nconst API_ROOT = '/engine-rest/'\r\n\r\n// Fetches an API response and normalizes the result JSON according to schema.\r\n// This makes every API response have the same shape, regardless of how nested it was.\r\nconst callApi = (endpoint, schema, settings = {}) => {\r\n  const fullUrl = (endpoint.indexOf(API_ROOT) === -1) ? API_ROOT + endpoint : endpoint\r\n\r\n  return fetch(fullUrl, settings)\r\n    .then(response =>\r\n      response.json().then(json => {\r\n        if (!response.ok) {\r\n          return Promise.reject(json)\r\n        }\r\n\r\n        const camelizedJson = camelizeKeys(json)\r\n          return Object.assign({},\r\n          normalize(camelizedJson, schema),\r\n          {  }\r\n        )\r\n      })\r\n    )\r\n}\r\n\r\n// We use this Normalizr schemas to transform API responses from a nested form\r\n// to a flat form where repos and users are placed in `entities`, and nested\r\n// JSON objects are replaced with their IDs. This is very convenient for\r\n// consumption by reducers, because we can easily build a normalized tree\r\n// and keep it updated as we fetch more data.\r\n\r\n// Read more about Normalizr: https://github.com/paularmstrong/normalizr\r\n\r\nconst processDefinitionSchema = new schema.Entity('processDefinition', {}, {\r\n  id: processDefinition => processDefinition.id,\r\n  name: processDefinition => processDefinition.name\r\n})\r\n\r\nconst processDefinitionXMLSchema = new schema.Entity('processDefinitionXML', {}, {\r\n\r\n});\r\n\r\nconst formKeySchema = new schema.Entity('formKey', {}, {\r\n  idAttribute: 'test',\r\n});\r\n\r\nconst processInstanceStartedSchema = new schema.Entity('processInstanceStarted', {}, {\r\n\r\n});\r\n\r\nconst taskSchema = new schema.Entity('task', {}, {\r\n  id: task => task.id,\r\n});\r\n\r\nconst taskVariableSchema = new schema.Entity('taskVariable', {}, {\r\n  processStrategy: (value, parent, key) => {\r\n    return {\r\n      values: value,\r\n      test: key,\r\n      parent: parent\r\n    }\r\n  }\r\n})\r\nconst taskVariableArraySchema = new schema.Entity('taskVariables', {}, {\r\n  idAttribute: variable => 'variables',\r\n  processStrategy: (value, parent, key) => {\r\n    let values = {};\r\n    Object.keys(value).forEach((item) => {\r\n      values[item] = value[item].value\r\n    })\r\n    return values\r\n  }\r\n})\r\n\r\nconst processDeploymentSchema = new schema.Entity('processDeployment', {}, {})\r\n\r\n// Schemas for Github API responses.\r\nexport const Schemas = {\r\n  PROCESS_DEFINITION: processDefinitionSchema,\r\n  PROCESS_DEFINITION_ARRAY: [processDefinitionSchema],\r\n  PROCESS_DEFINITION_XML: processDefinitionXMLSchema,\r\n  FORM_KEY: formKeySchema,\r\n  TASK: taskSchema,\r\n  TASK_ARRAY: [taskSchema],\r\n  PROCESS_INSTANCE_STARTED: processInstanceStartedSchema,\r\n  TASK_VARIABLE: taskVariableSchema,\r\n  TASK_VARIABLES: taskVariableArraySchema,\r\n  PROCESS_DEPLOYMENT: processDeploymentSchema\r\n}\r\n\r\n// Action key that carries API call info interpreted by this Redux middleware.\r\nexport const CALL_API = 'Call API'\r\n\r\n// A Redux middleware that interprets actions with CALL_API info specified.\r\n// Performs the call and promises when such actions are dispatched.\r\nexport default store => next => action => {\r\n  const callAPI = action[CALL_API]\r\n\r\n  if (typeof callAPI === 'undefined') {\r\n    return next(action)\r\n  }\r\n\r\n  let { endpoint } = callAPI\r\n  const { schema, types, settings } = callAPI\r\n\r\n  if (typeof endpoint === 'function') {\r\n    endpoint = endpoint(store.getState())\r\n  }\r\n\r\n  if (typeof endpoint !== 'string') {\r\n    throw new Error('Specify a string endpoint URL.')\r\n  }\r\n  if (!schema) {\r\n    throw new Error('Specify one of the exported Schemas.')\r\n  }\r\n  if (!Array.isArray(types) || types.length !== 3) {\r\n    throw new Error('Expected an array of three action types.')\r\n  }\r\n  if (!types.every(type => typeof type === 'string')) {\r\n    throw new Error('Expected action types to be strings.')\r\n  }\r\n\r\n  const actionWith = data => {\r\n    const finalAction = Object.assign({}, action, data)\r\n    delete finalAction[CALL_API]\r\n    return finalAction\r\n  }\r\n\r\n  const [ requestType, successType, failureType ] = types\r\n  next(actionWith({ type: requestType }))\r\n\r\n  return callApi(endpoint, schema, settings).then(\r\n    response => next(actionWith({\r\n      response,\r\n      type: successType\r\n    })),\r\n    error => next(actionWith({\r\n      type: failureType,\r\n      error: error.message || 'Something bad happened'\r\n    }))\r\n  )\r\n}\r\n","C:\\Users\\sam\\final\\camunda-react\\src\\components\\Footer.js",["137"],"import React, { Component } from 'react'\r\nimport { Menu } from 'semantic-ui-react'\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div></div>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\sam\\final\\camunda-react\\src\\components\\Header.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\reducers\\index.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\DeployProcess.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\BPMNDiagram.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\GenericForm.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\Taskform.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\List.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\actions\\index.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\constants\\ActionTypes.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\index.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\actions\\camunda-rest\\deployment.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\actions\\camunda-rest\\task.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\actions\\camunda-rest\\process-definition.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\LandAllotment_camunda\\index.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\myprocess\\index.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\LandAllotment_camunda\\userTask.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\myprocess\\startNewProcess.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\invoice\\index.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\constants\\ValidationOptions.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\invoice\\startProcess.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\invoice\\newTask.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\myprocess\\approveDataTask.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\LandAllotment_camunda\\statNewProcess.js",["138"],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":5,"column":8,"nodeType":"145","messageId":"146","endLine":5,"endColumn":21},{"ruleId":"147","severity":1,"message":"148","line":97,"column":1,"nodeType":"149","endLine":143,"endColumn":2},{"ruleId":"143","severity":1,"message":"150","line":2,"column":10,"nodeType":"145","messageId":"146","endLine":2,"endColumn":14},{"ruleId":"143","severity":1,"message":"151","line":18,"column":35,"nodeType":"145","messageId":"146","endLine":18,"endColumn":40},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'DeployProcess' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Menu' is defined but never used.","'reset' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]