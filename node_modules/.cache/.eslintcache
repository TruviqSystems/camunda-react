[{"C:\\Users\\sam\\final\\camunda-react\\src\\index.js":"1","C:\\Users\\sam\\final\\camunda-react\\src\\store\\configureStore.js":"2","C:\\Users\\sam\\final\\camunda-react\\src\\containers\\Root.js":"3","C:\\Users\\sam\\final\\camunda-react\\src\\containers\\App.js":"4","C:\\Users\\sam\\final\\camunda-react\\src\\containers\\TasklistPage.js":"5","C:\\Users\\sam\\final\\camunda-react\\src\\containers\\StartProcessListPage.js":"6","C:\\Users\\sam\\final\\camunda-react\\src\\containers\\StartProcessPage.js":"7","C:\\Users\\sam\\final\\camunda-react\\src\\middleware\\api.js":"8","C:\\Users\\sam\\final\\camunda-react\\src\\components\\Footer.js":"9","C:\\Users\\sam\\final\\camunda-react\\src\\components\\Header.js":"10","C:\\Users\\sam\\final\\camunda-react\\src\\reducers\\index.js":"11","C:\\Users\\sam\\final\\camunda-react\\src\\components\\DeployProcess.js":"12","C:\\Users\\sam\\final\\camunda-react\\src\\components\\BPMNDiagram.js":"13","C:\\Users\\sam\\final\\camunda-react\\src\\components\\GenericForm.js":"14","C:\\Users\\sam\\final\\camunda-react\\src\\components\\Taskform.js":"15","C:\\Users\\sam\\final\\camunda-react\\src\\components\\List.js":"16","C:\\Users\\sam\\final\\camunda-react\\src\\actions\\index.js":"17","C:\\Users\\sam\\final\\camunda-react\\src\\constants\\ActionTypes.js":"18","C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\index.js":"19","C:\\Users\\sam\\final\\camunda-react\\src\\actions\\camunda-rest\\deployment.js":"20","C:\\Users\\sam\\final\\camunda-react\\src\\actions\\camunda-rest\\task.js":"21","C:\\Users\\sam\\final\\camunda-react\\src\\actions\\camunda-rest\\process-definition.js":"22","C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\LandAllotment_camunda\\index.js":"23","C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\myprocess\\index.js":"24","C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\LandAllotment_camunda\\userTask.js":"25","C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\myprocess\\startNewProcess.js":"26","C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\invoice\\index.js":"27","C:\\Users\\sam\\final\\camunda-react\\src\\constants\\ValidationOptions.js":"28","C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\invoice\\startProcess.js":"29","C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\invoice\\newTask.js":"30","C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\myprocess\\approveDataTask.js":"31","C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\LandAllotment_camunda\\statNewProcess.js":"32"},{"size":420,"mtime":1679389632794,"results":"33","hashOfConfig":"34"},{"size":322,"mtime":1679389632802,"results":"35","hashOfConfig":"34"},{"size":982,"mtime":1679389632794,"results":"36","hashOfConfig":"34"},{"size":1254,"mtime":1679389832301,"results":"37","hashOfConfig":"34"},{"size":1789,"mtime":1679389632794,"results":"38","hashOfConfig":"34"},{"size":1746,"mtime":1679389632794,"results":"39","hashOfConfig":"34"},{"size":1341,"mtime":1679389819509,"results":"40","hashOfConfig":"34"},{"size":4412,"mtime":1679389632794,"results":"41","hashOfConfig":"34"},{"size":197,"mtime":1679389998347,"results":"42","hashOfConfig":"34"},{"size":1122,"mtime":1679390014472,"results":"43","hashOfConfig":"34"},{"size":1096,"mtime":1679389632802,"results":"44","hashOfConfig":"34"},{"size":1256,"mtime":1679389632778,"results":"45","hashOfConfig":"34"},{"size":1186,"mtime":1679389632778,"results":"46","hashOfConfig":"34"},{"size":1726,"mtime":1679389632778,"results":"47","hashOfConfig":"34"},{"size":1423,"mtime":1679389632778,"results":"48","hashOfConfig":"34"},{"size":1420,"mtime":1679389632778,"results":"49","hashOfConfig":"34"},{"size":1972,"mtime":1679389632778,"results":"50","hashOfConfig":"34"},{"size":1840,"mtime":1679389632794,"results":"51","hashOfConfig":"34"},{"size":330,"mtime":1679390215899,"results":"52","hashOfConfig":"34"},{"size":669,"mtime":1679389632778,"results":"53","hashOfConfig":"34"},{"size":1418,"mtime":1679389632778,"results":"54","hashOfConfig":"34"},{"size":2127,"mtime":1679390057536,"results":"55","hashOfConfig":"34"},{"size":112,"mtime":1679389932151,"results":"56","hashOfConfig":"34"},{"size":128,"mtime":1679389632789,"results":"57","hashOfConfig":"34"},{"size":1325,"mtime":1679389968411,"results":"58","hashOfConfig":"34"},{"size":1203,"mtime":1679389632789,"results":"59","hashOfConfig":"34"},{"size":108,"mtime":1679389632787,"results":"60","hashOfConfig":"34"},{"size":536,"mtime":1679389632794,"results":"61","hashOfConfig":"34"},{"size":2593,"mtime":1679389632789,"results":"62","hashOfConfig":"34"},{"size":2593,"mtime":1679389632789,"results":"63","hashOfConfig":"34"},{"size":1220,"mtime":1679389632789,"results":"64","hashOfConfig":"34"},{"size":11484,"mtime":1679389943409,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"json4h",{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},"C:\\Users\\sam\\final\\camunda-react\\src\\index.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\store\\configureStore.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\containers\\Root.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\containers\\App.js",["134"],"import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { Container, Header } from 'semantic-ui-react'\r\nimport DeployProcess from '../components/DeployProcess'\r\n\r\n\r\nconst App = ({actions, children}) => (\r\n  <div>\r\n    <Container text>\r\n      <Header as='h2' className='text-primary'>LandAllotment Process</Header>\r\n      <form>\r\n          <div class=\"mb-3\">\r\n            <label for=\"exampleInputEmail1\" class=\"form-label\">Email address</label>\r\n            <input type=\"email\"  class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\"  required/>\r\n            <div id=\"emailHelp\" class=\"form-text\">We'll never share your email with anyone else.</div>\r\n          </div>\r\n          <div class=\"mb-3\">\r\n            <label for=\"exampleInputPassword1\" class=\"form-label\">Password</label>\r\n            <input type=\"password\"  class=\"form-control\" required id=\"exampleInputPassword1\" />\r\n          </div>\r\n          <Link to=\"/startProcess/key/LandAllotment_camunda\"><button type=\"submit\" className='btn btn-primary'>Sign In</button></Link>\r\n      </form>\r\n    </Container>\r\n  </div>\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n})\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n)(App)\r\n","C:\\Users\\sam\\final\\camunda-react\\src\\containers\\TasklistPage.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\containers\\StartProcessListPage.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\containers\\StartProcessPage.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\middleware\\api.js",["135"],"import { normalize, schema } from 'normalizr'\r\nimport { camelizeKeys } from 'humps'\r\n\r\nconst API_ROOT = '/engine-rest/'\r\n\r\n// Fetches an API response and normalizes the result JSON according to schema.\r\n// This makes every API response have the same shape, regardless of how nested it was.\r\nconst callApi = (endpoint, schema, settings = {}) => {\r\n  const fullUrl = (endpoint.indexOf(API_ROOT) === -1) ? API_ROOT + endpoint : endpoint\r\n\r\n  return fetch(fullUrl, settings)\r\n    .then(response =>\r\n      response.json().then(json => {\r\n        if (!response.ok) {\r\n          return Promise.reject(json)\r\n        }\r\n\r\n        const camelizedJson = camelizeKeys(json)\r\n          return Object.assign({},\r\n          normalize(camelizedJson, schema),\r\n          {  }\r\n        )\r\n      })\r\n    )\r\n}\r\n\r\n// We use this Normalizr schemas to transform API responses from a nested form\r\n// to a flat form where repos and users are placed in `entities`, and nested\r\n// JSON objects are replaced with their IDs. This is very convenient for\r\n// consumption by reducers, because we can easily build a normalized tree\r\n// and keep it updated as we fetch more data.\r\n\r\n// Read more about Normalizr: https://github.com/paularmstrong/normalizr\r\n\r\nconst processDefinitionSchema = new schema.Entity('processDefinition', {}, {\r\n  id: processDefinition => processDefinition.id,\r\n  name: processDefinition => processDefinition.name\r\n})\r\n\r\nconst processDefinitionXMLSchema = new schema.Entity('processDefinitionXML', {}, {\r\n\r\n});\r\n\r\nconst formKeySchema = new schema.Entity('formKey', {}, {\r\n  idAttribute: 'test',\r\n});\r\n\r\nconst processInstanceStartedSchema = new schema.Entity('processInstanceStarted', {}, {\r\n\r\n});\r\n\r\nconst taskSchema = new schema.Entity('task', {}, {\r\n  id: task => task.id,\r\n});\r\n\r\nconst taskVariableSchema = new schema.Entity('taskVariable', {}, {\r\n  processStrategy: (value, parent, key) => {\r\n    return {\r\n      values: value,\r\n      test: key,\r\n      parent: parent\r\n    }\r\n  }\r\n})\r\nconst taskVariableArraySchema = new schema.Entity('taskVariables', {}, {\r\n  idAttribute: variable => 'variables',\r\n  processStrategy: (value, parent, key) => {\r\n    let values = {};\r\n    Object.keys(value).forEach((item) => {\r\n      values[item] = value[item].value\r\n    })\r\n    return values\r\n  }\r\n})\r\n\r\nconst processDeploymentSchema = new schema.Entity('processDeployment', {}, {})\r\n\r\n// Schemas for Github API responses.\r\nexport const Schemas = {\r\n  PROCESS_DEFINITION: processDefinitionSchema,\r\n  PROCESS_DEFINITION_ARRAY: [processDefinitionSchema],\r\n  PROCESS_DEFINITION_XML: processDefinitionXMLSchema,\r\n  FORM_KEY: formKeySchema,\r\n  TASK: taskSchema,\r\n  TASK_ARRAY: [taskSchema],\r\n  PROCESS_INSTANCE_STARTED: processInstanceStartedSchema,\r\n  TASK_VARIABLE: taskVariableSchema,\r\n  TASK_VARIABLES: taskVariableArraySchema,\r\n  PROCESS_DEPLOYMENT: processDeploymentSchema\r\n}\r\n\r\n// Action key that carries API call info interpreted by this Redux middleware.\r\nexport const CALL_API = 'Call API'\r\n\r\n// A Redux middleware that interprets actions with CALL_API info specified.\r\n// Performs the call and promises when such actions are dispatched.\r\nexport default store => next => action => {\r\n  const callAPI = action[CALL_API]\r\n\r\n  if (typeof callAPI === 'undefined') {\r\n    return next(action)\r\n  }\r\n\r\n  let { endpoint } = callAPI\r\n  const { schema, types, settings } = callAPI\r\n\r\n  if (typeof endpoint === 'function') {\r\n    endpoint = endpoint(store.getState())\r\n  }\r\n\r\n  if (typeof endpoint !== 'string') {\r\n    throw new Error('Specify a string endpoint URL.')\r\n  }\r\n  if (!schema) {\r\n    throw new Error('Specify one of the exported Schemas.')\r\n  }\r\n  if (!Array.isArray(types) || types.length !== 3) {\r\n    throw new Error('Expected an array of three action types.')\r\n  }\r\n  if (!types.every(type => typeof type === 'string')) {\r\n    throw new Error('Expected action types to be strings.')\r\n  }\r\n\r\n  const actionWith = data => {\r\n    const finalAction = Object.assign({}, action, data)\r\n    delete finalAction[CALL_API]\r\n    return finalAction\r\n  }\r\n\r\n  const [ requestType, successType, failureType ] = types\r\n  next(actionWith({ type: requestType }))\r\n\r\n  return callApi(endpoint, schema, settings).then(\r\n    response => next(actionWith({\r\n      response,\r\n      type: successType\r\n    })),\r\n    error => next(actionWith({\r\n      type: failureType,\r\n      error: error.message || 'Something bad happened'\r\n    }))\r\n  )\r\n}\r\n","C:\\Users\\sam\\final\\camunda-react\\src\\components\\Footer.js",["136"],"import React, { Component } from 'react'\r\nimport { Menu } from 'semantic-ui-react'\r\n\r\nexport default class Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div></div>\r\n    )\r\n  }\r\n}\r\n","C:\\Users\\sam\\final\\camunda-react\\src\\components\\Header.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\reducers\\index.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\DeployProcess.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\BPMNDiagram.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\GenericForm.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\Taskform.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\List.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\actions\\index.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\constants\\ActionTypes.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\index.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\actions\\camunda-rest\\deployment.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\actions\\camunda-rest\\task.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\actions\\camunda-rest\\process-definition.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\LandAllotment_camunda\\index.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\myprocess\\index.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\LandAllotment_camunda\\userTask.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\myprocess\\startNewProcess.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\invoice\\index.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\constants\\ValidationOptions.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\invoice\\startProcess.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\invoice\\newTask.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\myprocess\\approveDataTask.js",[],"C:\\Users\\sam\\final\\camunda-react\\src\\components\\forms\\LandAllotment_camunda\\statNewProcess.js",["137"],"import React,{useState} from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\n\r\nconst SimpleForm = props => {\r\n  const formtodisplay=['FirmDetails','PromoterDetails','ProjectDetails']\r\n\r\n  const [formType, setFormType] = useState(0);\r\n\r\n  const PrevStep=(e)=>{\r\n    setFormType(formType-1)\r\n  }\r\n\r\n  const NextStep=(e)=>{\r\n      setFormType(formType+1)\r\n  }\r\n\r\n  const { handleSubmit, pristine, reset, submitting } = props \r\n  const renderForm=()=>{\r\n          switch(formtodisplay[formType]) {\r\n            case \"FirmDetails\":\r\n              return(\r\n                <form onSubmit={handleSubmit} className=\" container\">\r\n                      <h1 className='fsc-5 mb-4'>Firm Details</h1>\r\n                      <div className='mb-2'>\r\n                        <label><h4>Firm Name</h4></label>\r\n                        <div>\r\n                          <Field\r\n                            name=\"FirmName\"\r\n                            component=\"input\"\r\n                            type=\"text\"\r\n                            placeholder=\"Firm Name\"\r\n                            required\r\n                            className='border rounded form-control'\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className='mb-2'>\r\n                        <label><h4>Contact Person</h4></label>\r\n                        <div>\r\n                          <Field\r\n                            name=\"ContactPerson\"\r\n                            component=\"input\"\r\n                            type=\"text\"\r\n                            placeholder=\"Contact Name\"\r\n                            className='border rounded form-control'\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className='mb-2'>\r\n                      <button className='btn btn-primary mb-2'  type=\"button\" onClick={NextStep} disabled={pristine || submitting}>\r\n                          Next \r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n              )\r\n            case \"PromoterDetails\":\r\n              return(\r\n                   <form onSubmit={handleSubmit} className=\" container \">\r\n                      <h1 className='fsc-5 mb-4'>Promoter Details</h1>\r\n                      <div className='mb-2'>\r\n                        <label><h4>Name of Promoter</h4></label>\r\n                        <div>\r\n                          <Field\r\n                            name=\"nameOfPromoter\"\r\n                            component=\"input\"\r\n                            type=\"text\"\r\n                            placeholder=\"Name of Promoter\"\r\n                            className='border rounded form-control'\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className='mb-2'>\r\n                        <label><h4>Optional Promoter 1</h4></label>\r\n                        <div>\r\n                          <Field\r\n                            name=\"optionalPromotor1\"\r\n                            component=\"input\"\r\n                            type=\"text\"\r\n                            placeholder=\"Optional Promoter 1\"\r\n                            className='border rounded form-control'\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className='mb-2'>\r\n                        <label><h4>Optional Promoter 2</h4></label>\r\n                        <div>\r\n                          <Field\r\n                            name=\"optionalPromotor2\"\r\n                            component=\"input\"\r\n                            type=\"text\"\r\n                            placeholder=\"Optional Promoter 2\"\r\n                            className='border rounded form-control'\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className='mb-2'>\r\n                        <label><h4>Mobile Number</h4></label>\r\n                        <div>\r\n                          <Field\r\n                            name=\"mobilenumber\"\r\n                            component=\"input\"\r\n                            type=\"digit\"\r\n                            placeholder=\"Mobile Number\"\r\n                            className='border rounded form-control'\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className='mb-2'>\r\n                        <label><h4>Email Id</h4></label>\r\n                        <div>\r\n                          <Field\r\n                            name=\"emailId\"\r\n                            component=\"input\"\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            className='border rounded form-control'\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div>\r\n                      <div>\r\n                      <span><button className='btn btn-primary mb-2'  type=\"button\" onClick={PrevStep} disabled={pristine || submitting}>\r\n                          Back \r\n                        </button>\r\n                        &nbsp;&nbsp;\r\n                        <button className='btn btn-primary mb-2'  type=\"button\" onClick={NextStep} disabled={pristine || submitting}>\r\n                          Next \r\n                        </button></span>\r\n                      </div>\r\n                      </div>\r\n                    </form>\r\n                  )\r\n                  case \"ProjectDetails\":\r\n                    return(\r\n                      <form onSubmit={handleSubmit} className=\" container\">\r\n                        <h1 className='fsc-5 mb-4'>Project Details</h1>\r\n                    <div className='mb-2'>\r\n                      <label><h4>Project Status</h4></label>\r\n                        <div>\r\n                          <label><Field \r\n                                  name=\"projectStatus\" \r\n                                  component=\"input\" \r\n                                  type=\"radio\" \r\n                                  value=\"New\"\r\n                                  />\r\n                                  {' '}\r\n                                  New  \r\n                          </label>&nbsp;&nbsp;&nbsp;\r\n                          <label>\r\n                                <Field\r\n                                name=\"projectStatus\" \r\n                                component=\"input\"\r\n                                type=\"radio\"\r\n                                value=\"Existing\"\r\n                                />\r\n                                {' '}\r\n                                Existing\r\n                                </label>\r\n                        </div>\r\n                      </div>\r\n                    <div className='mb-2'>\r\n                      <label><h4>Project Category</h4></label>\r\n                      <div>\r\n                      <Field name=\"ProjetCategory\" \r\n                      component=\"select\"\r\n                      required\r\n                      className='border rounded form-control'>\r\n                      <option value=\"Chemical Industry\">Chemical Industry</option>\r\n                      <option value=\"Agricultural Project\">Agricultural Project</option>\r\n                      <option value=\"Informational Technology\">Informational Technology</option>\r\n                      </Field>\r\n                      </div>\r\n                    </div>\r\n                    <div className='mb-2'>\r\n                        <label><h4>Land in yards</h4></label>\r\n                        <div>\r\n                          <Field\r\n                            name=\"areaOfTheLand\"\r\n                            component=\"input\"\r\n                            type=\"number\"\r\n                            placeholder=\"Land in yards\"\r\n                            className='border rounded form-control'\r\n                            required\r\n                          />\r\n                        </div>\r\n                    </div>\r\n                    <div className='mb-2'>\r\n                        <label><h4>Land Location</h4></label>\r\n                        <div>\r\n                          <Field\r\n                            name=\"landlocation\"\r\n                            component=\"input\"\r\n                            type=\"text\"\r\n                            placeholder=\"Land Location\"\r\n                            className='border rounded form-control'\r\n                            required\r\n                          />\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                    <span><button className='btn btn-primary mb-2'  type=\"button\" onClick={PrevStep} disabled={pristine || submitting}>\r\n                          Back\r\n                    </button>\r\n                    &nbsp;&nbsp;\r\n                      <button className='btn btn-primary mb-2'  type=\"submit\" disabled={pristine || submitting}>\r\n                        Submit\r\n                      </button>\r\n                      </span>\r\n                    </div>\r\n                  </form>\r\n                    )\r\n            default :\r\n            return(\r\n              <form onSubmit={handleSubmit} className=\" container\">\r\n                     <h1 className='fsc-5 mb-4'>Firm Details</h1>\r\n                      <div className='mb-2'>\r\n                        <label><h4>Firm Name</h4></label>\r\n                        <div>\r\n                          <Field\r\n                            name=\"FirmName\"\r\n                            component=\"input\"\r\n                            type=\"text\"\r\n                            placeholder=\"Firm Name\"\r\n                            className='border rounded form-control'\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className='mb-2'>\r\n                        <label><h4>Contact</h4></label>\r\n                        <div>\r\n                          <Field\r\n                            name=\"ContactPerson\"\r\n                            component=\"input\"\r\n                            type=\"text\"\r\n                            placeholder=\"Contact Name\"\r\n                            className='border rounded form-control'\r\n                            required\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                      <div className='mb-2'>\r\n                      <p className='text-warning fsc-3'>Please Fill all the forms displayed in options above!</p>\r\n                      <button className='btn btn-primary mb-2'  type=\"button\" onClick={NextStep} disabled={pristine || submitting}>\r\n                          Next\r\n                        </button>\r\n                      </div>\r\n                    </form>\r\n            )\r\n        }\r\n    }\r\n  return (\r\n   <div className='container d-flex flex-column justify-content-center align-items-center'>\r\n    <div className='container-fluid bg-light border rounded p-3' >\r\n    {renderForm()}\r\n    </div>\r\n   </div>\r\n\r\n  )\r\n}\r\n\r\nexport default reduxForm({\r\n  form: 'simple' // a unique identifier for this form\r\n})(SimpleForm)\r\n",{"ruleId":"138","severity":1,"message":"139","line":5,"column":8,"nodeType":"140","messageId":"141","endLine":5,"endColumn":21},{"ruleId":"142","severity":1,"message":"143","line":97,"column":1,"nodeType":"144","endLine":143,"endColumn":2},{"ruleId":"138","severity":1,"message":"145","line":2,"column":10,"nodeType":"140","messageId":"141","endLine":2,"endColumn":14},{"ruleId":"138","severity":1,"message":"146","line":18,"column":35,"nodeType":"140","messageId":"141","endLine":18,"endColumn":40},"no-unused-vars","'DeployProcess' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Menu' is defined but never used.","'reset' is assigned a value but never used."]