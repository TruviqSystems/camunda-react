{"ast":null,"code":"import { isArray } from 'min-dash';\nvar KEYCODE_C = 67;\nvar KEYCODE_V = 86;\nvar KEYCODE_Y = 89;\nvar KEYCODE_Z = 90;\nvar KEYS_COPY = ['c', 'C', KEYCODE_C];\nvar KEYS_PASTE = ['v', 'V', KEYCODE_V];\nvar KEYS_REDO = ['y', 'Y', KEYCODE_Y];\nvar KEYS_UNDO = ['z', 'Z', KEYCODE_Z];\n\n/**\r\n * Returns true if event was triggered with any modifier\r\n * @param {KeyboardEvent} event\r\n */\nexport function hasModifier(event) {\n  return event.ctrlKey || event.metaKey || event.shiftKey || event.altKey;\n}\n\n/**\r\n * @param {KeyboardEvent} event\r\n */\nexport function isCmd(event) {\n  // ensure we don't react to AltGr\n  // (mapped to CTRL + ALT)\n  if (event.altKey) {\n    return false;\n  }\n  return event.ctrlKey || event.metaKey;\n}\n\n/**\r\n * Checks if key pressed is one of provided keys.\r\n *\r\n * @param {string|Array<string>} keys\r\n * @param {KeyboardEvent} event\r\n */\nexport function isKey(keys, event) {\n  keys = isArray(keys) ? keys : [keys];\n  return keys.indexOf(event.key) !== -1 || keys.indexOf(event.keyCode) !== -1;\n}\n\n/**\r\n * @param {KeyboardEvent} event\r\n */\nexport function isShift(event) {\n  return event.shiftKey;\n}\nexport function isCopy(event) {\n  return isCmd(event) && isKey(KEYS_COPY, event);\n}\nexport function isPaste(event) {\n  return isCmd(event) && isKey(KEYS_PASTE, event);\n}\nexport function isUndo(event) {\n  return isCmd(event) && !isShift(event) && isKey(KEYS_UNDO, event);\n}\nexport function isRedo(event) {\n  return isCmd(event) && (isKey(KEYS_REDO, event) || isKey(KEYS_UNDO, event) && isShift(event));\n}","map":{"version":3,"names":["isArray","KEYCODE_C","KEYCODE_V","KEYCODE_Y","KEYCODE_Z","KEYS_COPY","KEYS_PASTE","KEYS_REDO","KEYS_UNDO","hasModifier","event","ctrlKey","metaKey","shiftKey","altKey","isCmd","isKey","keys","indexOf","key","keyCode","isShift","isCopy","isPaste","isUndo","isRedo"],"sources":["C:/Users/KondalaRaoThota/Truviq_Camunda/camunda-react/node_modules/diagram-js/lib/features/keyboard/KeyboardUtil.js"],"sourcesContent":["import { isArray } from 'min-dash';\r\n\r\nvar KEYCODE_C = 67;\r\nvar KEYCODE_V = 86;\r\nvar KEYCODE_Y = 89;\r\nvar KEYCODE_Z = 90;\r\n\r\nvar KEYS_COPY = [ 'c', 'C', KEYCODE_C ];\r\nvar KEYS_PASTE = [ 'v', 'V', KEYCODE_V ];\r\nvar KEYS_REDO = [ 'y', 'Y', KEYCODE_Y ];\r\nvar KEYS_UNDO = [ 'z', 'Z', KEYCODE_Z ];\r\n\r\n/**\r\n * Returns true if event was triggered with any modifier\r\n * @param {KeyboardEvent} event\r\n */\r\nexport function hasModifier(event) {\r\n  return (event.ctrlKey || event.metaKey || event.shiftKey || event.altKey);\r\n}\r\n\r\n/**\r\n * @param {KeyboardEvent} event\r\n */\r\nexport function isCmd(event) {\r\n\r\n  // ensure we don't react to AltGr\r\n  // (mapped to CTRL + ALT)\r\n  if (event.altKey) {\r\n    return false;\r\n  }\r\n\r\n  return event.ctrlKey || event.metaKey;\r\n}\r\n\r\n/**\r\n * Checks if key pressed is one of provided keys.\r\n *\r\n * @param {string|Array<string>} keys\r\n * @param {KeyboardEvent} event\r\n */\r\nexport function isKey(keys, event) {\r\n  keys = isArray(keys) ? keys : [ keys ];\r\n\r\n  return keys.indexOf(event.key) !== -1 || keys.indexOf(event.keyCode) !== -1;\r\n}\r\n\r\n/**\r\n * @param {KeyboardEvent} event\r\n */\r\nexport function isShift(event) {\r\n  return event.shiftKey;\r\n}\r\n\r\nexport function isCopy(event) {\r\n  return isCmd(event) && isKey(KEYS_COPY, event);\r\n}\r\n\r\nexport function isPaste(event) {\r\n  return isCmd(event) && isKey(KEYS_PASTE, event);\r\n}\r\n\r\nexport function isUndo(event) {\r\n  return isCmd(event) && !isShift(event) && isKey(KEYS_UNDO, event);\r\n}\r\n\r\nexport function isRedo(event) {\r\n  return isCmd(event) && (\r\n    isKey(KEYS_REDO, event) || (\r\n      isKey(KEYS_UNDO, event) && isShift(event)\r\n    )\r\n  );\r\n}"],"mappings":"AAAA,SAASA,OAAO,QAAQ,UAAU;AAElC,IAAIC,SAAS,GAAG,EAAE;AAClB,IAAIC,SAAS,GAAG,EAAE;AAClB,IAAIC,SAAS,GAAG,EAAE;AAClB,IAAIC,SAAS,GAAG,EAAE;AAElB,IAAIC,SAAS,GAAG,CAAE,GAAG,EAAE,GAAG,EAAEJ,SAAS,CAAE;AACvC,IAAIK,UAAU,GAAG,CAAE,GAAG,EAAE,GAAG,EAAEJ,SAAS,CAAE;AACxC,IAAIK,SAAS,GAAG,CAAE,GAAG,EAAE,GAAG,EAAEJ,SAAS,CAAE;AACvC,IAAIK,SAAS,GAAG,CAAE,GAAG,EAAE,GAAG,EAAEJ,SAAS,CAAE;;AAEvC;AACA;AACA;AACA;AACA,OAAO,SAASK,WAAWA,CAACC,KAAK,EAAE;EACjC,OAAQA,KAAK,CAACC,OAAO,IAAID,KAAK,CAACE,OAAO,IAAIF,KAAK,CAACG,QAAQ,IAAIH,KAAK,CAACI,MAAM;AAC1E;;AAEA;AACA;AACA;AACA,OAAO,SAASC,KAAKA,CAACL,KAAK,EAAE;EAE3B;EACA;EACA,IAAIA,KAAK,CAACI,MAAM,EAAE;IAChB,OAAO,KAAK;EACd;EAEA,OAAOJ,KAAK,CAACC,OAAO,IAAID,KAAK,CAACE,OAAO;AACvC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASI,KAAKA,CAACC,IAAI,EAAEP,KAAK,EAAE;EACjCO,IAAI,GAAGjB,OAAO,CAACiB,IAAI,CAAC,GAAGA,IAAI,GAAG,CAAEA,IAAI,CAAE;EAEtC,OAAOA,IAAI,CAACC,OAAO,CAACR,KAAK,CAACS,GAAG,CAAC,KAAK,CAAC,CAAC,IAAIF,IAAI,CAACC,OAAO,CAACR,KAAK,CAACU,OAAO,CAAC,KAAK,CAAC,CAAC;AAC7E;;AAEA;AACA;AACA;AACA,OAAO,SAASC,OAAOA,CAACX,KAAK,EAAE;EAC7B,OAAOA,KAAK,CAACG,QAAQ;AACvB;AAEA,OAAO,SAASS,MAAMA,CAACZ,KAAK,EAAE;EAC5B,OAAOK,KAAK,CAACL,KAAK,CAAC,IAAIM,KAAK,CAACX,SAAS,EAAEK,KAAK,CAAC;AAChD;AAEA,OAAO,SAASa,OAAOA,CAACb,KAAK,EAAE;EAC7B,OAAOK,KAAK,CAACL,KAAK,CAAC,IAAIM,KAAK,CAACV,UAAU,EAAEI,KAAK,CAAC;AACjD;AAEA,OAAO,SAASc,MAAMA,CAACd,KAAK,EAAE;EAC5B,OAAOK,KAAK,CAACL,KAAK,CAAC,IAAI,CAACW,OAAO,CAACX,KAAK,CAAC,IAAIM,KAAK,CAACR,SAAS,EAAEE,KAAK,CAAC;AACnE;AAEA,OAAO,SAASe,MAAMA,CAACf,KAAK,EAAE;EAC5B,OAAOK,KAAK,CAACL,KAAK,CAAC,KACjBM,KAAK,CAACT,SAAS,EAAEG,KAAK,CAAC,IACrBM,KAAK,CAACR,SAAS,EAAEE,KAAK,CAAC,IAAIW,OAAO,CAACX,KAAK,CACzC,CACF;AACH"},"metadata":{},"sourceType":"module"}