{"ast":null,"code":"import _isEqual from 'lodash/isEqual';\nimport _has from 'lodash/has';\nimport _transform from 'lodash/transform';\n\n/**\r\n * Naive and inefficient object difference, intended for development / debugging use only.\r\n * Deleted keys are shown as [DELETED].\r\n * @param {{}} source The source object\r\n * @param {{}} target The target object.\r\n * @returns {{}} A new object containing new/modified/deleted keys.\r\n * @example\r\n * import { objectDiff } from 'src/lib'\r\n *\r\n * const a = { key: 'val', foo: 'bar' }\r\n * const b = { key: 'val', foo: 'baz' }\r\n *\r\n * objectDiff(a, b)\r\n * //=> { foo: 'baz' }\r\n */\nexport default (function (source, target) {\n  return _transform(source, function (res, val, key) {\n    // deleted keys\n    if (!_has(target, key)) res[key] = '[DELETED]';\n    // new keys / changed values\n    // Note, we tolerate isEqual here as this is a dev only utility and not included in production code\n    else if (!_isEqual(val, target[key])) res[key] = target[key];\n  }, {});\n});","map":{"version":3,"names":["_isEqual","_has","_transform","source","target","res","val","key"],"sources":["C:/Users/sam/final/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/lib/objectDiff.js"],"sourcesContent":["import _isEqual from 'lodash/isEqual';\r\nimport _has from 'lodash/has';\r\nimport _transform from 'lodash/transform';\r\n\r\n\r\n/**\r\n * Naive and inefficient object difference, intended for development / debugging use only.\r\n * Deleted keys are shown as [DELETED].\r\n * @param {{}} source The source object\r\n * @param {{}} target The target object.\r\n * @returns {{}} A new object containing new/modified/deleted keys.\r\n * @example\r\n * import { objectDiff } from 'src/lib'\r\n *\r\n * const a = { key: 'val', foo: 'bar' }\r\n * const b = { key: 'val', foo: 'baz' }\r\n *\r\n * objectDiff(a, b)\r\n * //=> { foo: 'baz' }\r\n */\r\nexport default (function (source, target) {\r\n  return _transform(source, function (res, val, key) {\r\n    // deleted keys\r\n    if (!_has(target, key)) res[key] = '[DELETED]';\r\n    // new keys / changed values\r\n    // Note, we tolerate isEqual here as this is a dev only utility and not included in production code\r\n    else if (!_isEqual(val, target[key])) res[key] = target[key];\r\n  }, {});\r\n});"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,UAAU,MAAM,kBAAkB;;AAGzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,UAAUC,MAAM,EAAEC,MAAM,EAAE;EACxC,OAAOF,UAAU,CAACC,MAAM,EAAE,UAAUE,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAE;IACjD;IACA,IAAI,CAACN,IAAI,CAACG,MAAM,EAAEG,GAAG,CAAC,EAAEF,GAAG,CAACE,GAAG,CAAC,GAAG,WAAW;IAC9C;IACA;IAAA,KACK,IAAI,CAACP,QAAQ,CAACM,GAAG,EAAEF,MAAM,CAACG,GAAG,CAAC,CAAC,EAAEF,GAAG,CAACE,GAAG,CAAC,GAAGH,MAAM,CAACG,GAAG,CAAC;EAC9D,CAAC,EAAE,CAAC,CAAC,CAAC;AACR,CAAC"},"metadata":{},"sourceType":"module"}