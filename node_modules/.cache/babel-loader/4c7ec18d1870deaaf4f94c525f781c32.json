{"ast":null,"code":"/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\n\n'use strict';\n\n/**\r\n * Escape and wrap key so it is safe to use as a reactid\r\n *\r\n * @param {string} key to be escaped.\r\n * @return {string} the escaped key.\r\n */\nfunction escape(key) {\n  var escapeRegex = /[=:]/g;\n  var escaperLookup = {\n    '=': '=0',\n    ':': '=2'\n  };\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\n    return escaperLookup[match];\n  });\n  return '$' + escapedString;\n}\n\n/**\r\n * Unescape and unwrap key for human-readable display\r\n *\r\n * @param {string} key to unescape.\r\n * @return {string} the unescaped key.\r\n */\nfunction unescape(key) {\n  var unescapeRegex = /(=0|=2)/g;\n  var unescaperLookup = {\n    '=0': '=',\n    '=2': ':'\n  };\n  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);\n  return ('' + keySubstring).replace(unescapeRegex, function (match) {\n    return unescaperLookup[match];\n  });\n}\nvar KeyEscapeUtils = {\n  escape: escape,\n  unescape: unescape\n};\nmodule.exports = KeyEscapeUtils;","map":{"version":3,"names":["escape","key","escapeRegex","escaperLookup","escapedString","replace","match","unescape","unescapeRegex","unescaperLookup","keySubstring","substring","KeyEscapeUtils","module","exports"],"sources":["C:/Users/sam/final/camunda-react/node_modules/react-semantic-redux-form/node_modules/react/lib/KeyEscapeUtils.js"],"sourcesContent":["/**\r\n * Copyright (c) 2013-present, Facebook, Inc.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n *\r\n * \r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Escape and wrap key so it is safe to use as a reactid\r\n *\r\n * @param {string} key to be escaped.\r\n * @return {string} the escaped key.\r\n */\r\n\r\nfunction escape(key) {\r\n  var escapeRegex = /[=:]/g;\r\n  var escaperLookup = {\r\n    '=': '=0',\r\n    ':': '=2'\r\n  };\r\n  var escapedString = ('' + key).replace(escapeRegex, function (match) {\r\n    return escaperLookup[match];\r\n  });\r\n\r\n  return '$' + escapedString;\r\n}\r\n\r\n/**\r\n * Unescape and unwrap key for human-readable display\r\n *\r\n * @param {string} key to unescape.\r\n * @return {string} the unescaped key.\r\n */\r\nfunction unescape(key) {\r\n  var unescapeRegex = /(=0|=2)/g;\r\n  var unescaperLookup = {\r\n    '=0': '=',\r\n    '=2': ':'\r\n  };\r\n  var keySubstring = key[0] === '.' && key[1] === '$' ? key.substring(2) : key.substring(1);\r\n\r\n  return ('' + keySubstring).replace(unescapeRegex, function (match) {\r\n    return unescaperLookup[match];\r\n  });\r\n}\r\n\r\nvar KeyEscapeUtils = {\r\n  escape: escape,\r\n  unescape: unescape\r\n};\r\n\r\nmodule.exports = KeyEscapeUtils;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,MAAMA,CAACC,GAAG,EAAE;EACnB,IAAIC,WAAW,GAAG,OAAO;EACzB,IAAIC,aAAa,GAAG;IAClB,GAAG,EAAE,IAAI;IACT,GAAG,EAAE;EACP,CAAC;EACD,IAAIC,aAAa,GAAG,CAAC,EAAE,GAAGH,GAAG,EAAEI,OAAO,CAACH,WAAW,EAAE,UAAUI,KAAK,EAAE;IACnE,OAAOH,aAAa,CAACG,KAAK,CAAC;EAC7B,CAAC,CAAC;EAEF,OAAO,GAAG,GAAGF,aAAa;AAC5B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASG,QAAQA,CAACN,GAAG,EAAE;EACrB,IAAIO,aAAa,GAAG,UAAU;EAC9B,IAAIC,eAAe,GAAG;IACpB,IAAI,EAAE,GAAG;IACT,IAAI,EAAE;EACR,CAAC;EACD,IAAIC,YAAY,GAAGT,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,IAAIA,GAAG,CAAC,CAAC,CAAC,KAAK,GAAG,GAAGA,GAAG,CAACU,SAAS,CAAC,CAAC,CAAC,GAAGV,GAAG,CAACU,SAAS,CAAC,CAAC,CAAC;EAEzF,OAAO,CAAC,EAAE,GAAGD,YAAY,EAAEL,OAAO,CAACG,aAAa,EAAE,UAAUF,KAAK,EAAE;IACjE,OAAOG,eAAe,CAACH,KAAK,CAAC;EAC/B,CAAC,CAAC;AACJ;AAEA,IAAIM,cAAc,GAAG;EACnBZ,MAAM,EAAEA,MAAM;EACdO,QAAQ,EAAEA;AACZ,CAAC;AAEDM,MAAM,CAACC,OAAO,GAAGF,cAAc"},"metadata":{},"sourceType":"script"}