{"ast":null,"code":"import { isArray, isString, isObject, assign, forEach, find, filter, matchPattern, isDefined } from 'min-dash';\nimport { domify, classes as domClasses, attr as domAttr, remove as domRemove, clear as domClear } from 'min-dom';\nimport { getBBox } from '../../util/Elements';\nimport Ids from '../../util/IdGenerator';\n\n// document wide unique overlay ids\nvar ids = new Ids('ov');\nvar LOW_PRIORITY = 500;\n\n/**\n * A service that allows users to attach overlays to diagram elements.\n *\n * The overlay service will take care of overlay positioning during updates.\n *\n * @example\n *\n * // add a pink badge on the top left of the shape\n * overlays.add(someShape, {\n *   position: {\n *     top: -5,\n *     left: -5\n *   },\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n * // or add via shape id\n *\n * overlays.add('some-element-id', {\n *   position: {\n *     top: -5,\n *     left: -5\n *   }\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n * // or add with optional type\n *\n * overlays.add(someShape, 'badge', {\n *   position: {\n *     top: -5,\n *     left: -5\n *   }\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n *\n * // remove an overlay\n *\n * var id = overlays.add(...);\n * overlays.remove(id);\n *\n *\n * You may configure overlay defaults during tool by providing a `config` module\n * with `overlays.defaults` as an entry:\n *\n * {\n *   overlays: {\n *     defaults: {\n *       show: {\n *         minZoom: 0.7,\n *         maxZoom: 5.0\n *       },\n *       scale: {\n *         min: 1\n *       }\n *     }\n * }\n *\n * @param {Object} config\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n * @param {ElementRegistry} elementRegistry\n */\nexport default function Overlays(config, eventBus, canvas, elementRegistry) {\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n  this._elementRegistry = elementRegistry;\n  this._ids = ids;\n  this._overlayDefaults = assign({\n    // no show constraints\n    show: null,\n    // always scale\n    scale: true\n  }, config && config.defaults);\n\n  /**\n   * Mapping overlayId -> overlay\n   */\n  this._overlays = {};\n\n  /**\n   * Mapping elementId -> overlay container\n   */\n  this._overlayContainers = [];\n\n  // root html element for all overlays\n  this._overlayRoot = createRoot(canvas.getContainer());\n  this._init();\n}\nOverlays.$inject = ['config.overlays', 'eventBus', 'canvas', 'elementRegistry'];\n\n/**\n * Returns the overlay with the specified id or a list of overlays\n * for an element with a given type.\n *\n * @example\n *\n * // return the single overlay with the given id\n * overlays.get('some-id');\n *\n * // return all overlays for the shape\n * overlays.get({ element: someShape });\n *\n * // return all overlays on shape with type 'badge'\n * overlays.get({ element: someShape, type: 'badge' });\n *\n * // shape can also be specified as id\n * overlays.get({ element: 'element-id', type: 'badge' });\n *\n *\n * @param {Object} search\n * @param {string} [search.id]\n * @param {string|djs.model.Base} [search.element]\n * @param {string} [search.type]\n *\n * @return {Object|Array<Object>} the overlay(s)\n */\nOverlays.prototype.get = function (search) {\n  if (isString(search)) {\n    search = {\n      id: search\n    };\n  }\n  if (isString(search.element)) {\n    search.element = this._elementRegistry.get(search.element);\n  }\n  if (search.element) {\n    var container = this._getOverlayContainer(search.element, true);\n\n    // return a list of overlays when searching by element (+type)\n    if (container) {\n      return search.type ? filter(container.overlays, matchPattern({\n        type: search.type\n      })) : container.overlays.slice();\n    } else {\n      return [];\n    }\n  } else if (search.type) {\n    return filter(this._overlays, matchPattern({\n      type: search.type\n    }));\n  } else {\n    // return single element when searching by id\n    return search.id ? this._overlays[search.id] : null;\n  }\n};\n\n/**\n * Adds a HTML overlay to an element.\n *\n * @param {string|djs.model.Base}   element   attach overlay to this shape\n * @param {string}                  [type]    optional type to assign to the overlay\n * @param {Object}                  overlay   the overlay configuration\n *\n * @param {string|DOMElement}       overlay.html                 html element to use as an overlay\n * @param {Object}                  [overlay.show]               show configuration\n * @param {number}                  [overlay.show.minZoom]       minimal zoom level to show the overlay\n * @param {number}                  [overlay.show.maxZoom]       maximum zoom level to show the overlay\n * @param {Object}                  overlay.position             where to attach the overlay\n * @param {number}                  [overlay.position.left]      relative to element bbox left attachment\n * @param {number}                  [overlay.position.top]       relative to element bbox top attachment\n * @param {number}                  [overlay.position.bottom]    relative to element bbox bottom attachment\n * @param {number}                  [overlay.position.right]     relative to element bbox right attachment\n * @param {boolean|Object}          [overlay.scale=true]         false to preserve the same size regardless of\n *                                                               diagram zoom\n * @param {number}                  [overlay.scale.min]\n * @param {number}                  [overlay.scale.max]\n *\n * @return {string}                 id that may be used to reference the overlay for update or removal\n */\nOverlays.prototype.add = function (element, type, overlay) {\n  if (isObject(type)) {\n    overlay = type;\n    type = null;\n  }\n  if (!element.id) {\n    element = this._elementRegistry.get(element);\n  }\n  if (!overlay.position) {\n    throw new Error('must specifiy overlay position');\n  }\n  if (!overlay.html) {\n    throw new Error('must specifiy overlay html');\n  }\n  if (!element) {\n    throw new Error('invalid element specified');\n  }\n  var id = this._ids.next();\n  overlay = assign({}, this._overlayDefaults, overlay, {\n    id: id,\n    type: type,\n    element: element,\n    html: overlay.html\n  });\n  this._addOverlay(overlay);\n  return id;\n};\n\n/**\n * Remove an overlay with the given id or all overlays matching the given filter.\n *\n * @see Overlays#get for filter options.\n *\n * @param {string} [id]\n * @param {Object} [filter]\n */\nOverlays.prototype.remove = function (filter) {\n  var overlays = this.get(filter) || [];\n  if (!isArray(overlays)) {\n    overlays = [overlays];\n  }\n  var self = this;\n  forEach(overlays, function (overlay) {\n    var container = self._getOverlayContainer(overlay.element, true);\n    if (overlay) {\n      domRemove(overlay.html);\n      domRemove(overlay.htmlContainer);\n      delete overlay.htmlContainer;\n      delete overlay.element;\n      delete self._overlays[overlay.id];\n    }\n    if (container) {\n      var idx = container.overlays.indexOf(overlay);\n      if (idx !== -1) {\n        container.overlays.splice(idx, 1);\n      }\n    }\n  });\n};\nOverlays.prototype.show = function () {\n  setVisible(this._overlayRoot);\n};\nOverlays.prototype.hide = function () {\n  setVisible(this._overlayRoot, false);\n};\nOverlays.prototype.clear = function () {\n  this._overlays = {};\n  this._overlayContainers = [];\n  domClear(this._overlayRoot);\n};\nOverlays.prototype._updateOverlayContainer = function (container) {\n  var element = container.element,\n    html = container.html;\n\n  // update container left,top according to the elements x,y coordinates\n  // this ensures we can attach child elements relative to this container\n\n  var x = element.x,\n    y = element.y;\n  if (element.waypoints) {\n    var bbox = getBBox(element);\n    x = bbox.x;\n    y = bbox.y;\n  }\n  setPosition(html, x, y);\n  domAttr(container.html, 'data-container-id', element.id);\n};\nOverlays.prototype._updateOverlay = function (overlay) {\n  var position = overlay.position,\n    htmlContainer = overlay.htmlContainer,\n    element = overlay.element;\n\n  // update overlay html relative to shape because\n  // it is already positioned on the element\n\n  // update relative\n  var left = position.left,\n    top = position.top;\n  if (position.right !== undefined) {\n    var width;\n    if (element.waypoints) {\n      width = getBBox(element).width;\n    } else {\n      width = element.width;\n    }\n    left = position.right * -1 + width;\n  }\n  if (position.bottom !== undefined) {\n    var height;\n    if (element.waypoints) {\n      height = getBBox(element).height;\n    } else {\n      height = element.height;\n    }\n    top = position.bottom * -1 + height;\n  }\n  setPosition(htmlContainer, left || 0, top || 0);\n};\nOverlays.prototype._createOverlayContainer = function (element) {\n  var html = domify('<div class=\"djs-overlays\" style=\"position: absolute\" />');\n  this._overlayRoot.appendChild(html);\n  var container = {\n    html: html,\n    element: element,\n    overlays: []\n  };\n  this._updateOverlayContainer(container);\n  this._overlayContainers.push(container);\n  return container;\n};\nOverlays.prototype._updateRoot = function (viewbox) {\n  var scale = viewbox.scale || 1;\n  var matrix = 'matrix(' + [scale, 0, 0, scale, -1 * viewbox.x * scale, -1 * viewbox.y * scale].join(',') + ')';\n  setTransform(this._overlayRoot, matrix);\n};\nOverlays.prototype._getOverlayContainer = function (element, raw) {\n  var container = find(this._overlayContainers, function (c) {\n    return c.element === element;\n  });\n  if (!container && !raw) {\n    return this._createOverlayContainer(element);\n  }\n  return container;\n};\nOverlays.prototype._addOverlay = function (overlay) {\n  var id = overlay.id,\n    element = overlay.element,\n    html = overlay.html,\n    htmlContainer,\n    overlayContainer;\n\n  // unwrap jquery (for those who need it)\n  if (html.get && html.constructor.prototype.jquery) {\n    html = html.get(0);\n  }\n\n  // create proper html elements from\n  // overlay HTML strings\n  if (isString(html)) {\n    html = domify(html);\n  }\n  overlayContainer = this._getOverlayContainer(element);\n  htmlContainer = domify('<div class=\"djs-overlay\" data-overlay-id=\"' + id + '\" style=\"position: absolute\">');\n  htmlContainer.appendChild(html);\n  if (overlay.type) {\n    domClasses(htmlContainer).add('djs-overlay-' + overlay.type);\n  }\n  var plane = this._canvas.findPlane(element);\n  var activePlane = this._canvas.getActivePlane();\n  overlay.plane = plane;\n  if (plane !== activePlane) {\n    setVisible(htmlContainer, false);\n  }\n  overlay.htmlContainer = htmlContainer;\n  overlayContainer.overlays.push(overlay);\n  overlayContainer.html.appendChild(htmlContainer);\n  this._overlays[id] = overlay;\n  this._updateOverlay(overlay);\n  this._updateOverlayVisibilty(overlay, this._canvas.viewbox());\n};\nOverlays.prototype._updateOverlayVisibilty = function (overlay, viewbox) {\n  var show = overlay.show,\n    plane = overlay.plane,\n    minZoom = show && show.minZoom,\n    maxZoom = show && show.maxZoom,\n    htmlContainer = overlay.htmlContainer,\n    activePlane = this._canvas.getActivePlane(),\n    visible = true;\n  if (plane !== activePlane) {\n    visible = false;\n  } else if (show) {\n    if (isDefined(minZoom) && minZoom > viewbox.scale || isDefined(maxZoom) && maxZoom < viewbox.scale) {\n      visible = false;\n    }\n  }\n  setVisible(htmlContainer, visible);\n  this._updateOverlayScale(overlay, viewbox);\n};\nOverlays.prototype._updateOverlayScale = function (overlay, viewbox) {\n  var shouldScale = overlay.scale,\n    minScale,\n    maxScale,\n    htmlContainer = overlay.htmlContainer;\n  var scale,\n    transform = '';\n  if (shouldScale !== true) {\n    if (shouldScale === false) {\n      minScale = 1;\n      maxScale = 1;\n    } else {\n      minScale = shouldScale.min;\n      maxScale = shouldScale.max;\n    }\n    if (isDefined(minScale) && viewbox.scale < minScale) {\n      scale = (1 / viewbox.scale || 1) * minScale;\n    }\n    if (isDefined(maxScale) && viewbox.scale > maxScale) {\n      scale = (1 / viewbox.scale || 1) * maxScale;\n    }\n  }\n  if (isDefined(scale)) {\n    transform = 'scale(' + scale + ',' + scale + ')';\n  }\n  setTransform(htmlContainer, transform);\n};\nOverlays.prototype._updateOverlaysVisibilty = function (viewbox) {\n  var self = this;\n  forEach(this._overlays, function (overlay) {\n    self._updateOverlayVisibilty(overlay, viewbox);\n  });\n};\nOverlays.prototype._init = function () {\n  var eventBus = this._eventBus;\n  var self = this;\n\n  // scroll/zoom integration\n\n  function updateViewbox(viewbox) {\n    self._updateRoot(viewbox);\n    self._updateOverlaysVisibilty(viewbox);\n    self.show();\n  }\n  eventBus.on('canvas.viewbox.changing', function (event) {\n    self.hide();\n  });\n  eventBus.on('canvas.viewbox.changed', function (event) {\n    updateViewbox(event.viewbox);\n  });\n\n  // remove integration\n\n  eventBus.on(['shape.remove', 'connection.remove'], function (e) {\n    var element = e.element;\n    var overlays = self.get({\n      element: element\n    });\n    forEach(overlays, function (o) {\n      self.remove(o.id);\n    });\n    var container = self._getOverlayContainer(element);\n    if (container) {\n      domRemove(container.html);\n      var i = self._overlayContainers.indexOf(container);\n      if (i !== -1) {\n        self._overlayContainers.splice(i, 1);\n      }\n    }\n  });\n\n  // move integration\n\n  eventBus.on('element.changed', LOW_PRIORITY, function (e) {\n    var element = e.element;\n    var container = self._getOverlayContainer(element, true);\n    if (container) {\n      forEach(container.overlays, function (overlay) {\n        self._updateOverlay(overlay);\n      });\n      self._updateOverlayContainer(container);\n    }\n  });\n\n  // marker integration, simply add them on the overlays as classes, too.\n\n  eventBus.on('element.marker.update', function (e) {\n    var container = self._getOverlayContainer(e.element, true);\n    if (container) {\n      domClasses(container.html)[e.add ? 'add' : 'remove'](e.marker);\n    }\n  });\n  eventBus.on('plane.set', function (e) {\n    forEach(self._overlays, function (el) {\n      setVisible(el.htmlContainer, el.plane === e.plane);\n    });\n  });\n\n  // clear overlays with diagram\n\n  eventBus.on('diagram.clear', this.clear, this);\n};\n\n// helpers /////////////////////////////\n\nfunction createRoot(parentNode) {\n  var root = domify('<div class=\"djs-overlay-container\" style=\"position: absolute; width: 0; height: 0;\" />');\n  parentNode.insertBefore(root, parentNode.firstChild);\n  return root;\n}\nfunction setPosition(el, x, y) {\n  assign(el.style, {\n    left: x + 'px',\n    top: y + 'px'\n  });\n}\nfunction setVisible(el, visible) {\n  el.style.display = visible === false ? 'none' : '';\n}\nfunction setTransform(el, transform) {\n  el.style['transform-origin'] = 'top left';\n  ['', '-ms-', '-webkit-'].forEach(function (prefix) {\n    el.style[prefix + 'transform'] = transform;\n  });\n}","map":{"version":3,"names":["isArray","isString","isObject","assign","forEach","find","filter","matchPattern","isDefined","domify","classes","domClasses","attr","domAttr","remove","domRemove","clear","domClear","getBBox","Ids","ids","LOW_PRIORITY","Overlays","config","eventBus","canvas","elementRegistry","_eventBus","_canvas","_elementRegistry","_ids","_overlayDefaults","show","scale","defaults","_overlays","_overlayContainers","_overlayRoot","createRoot","getContainer","_init","$inject","prototype","get","search","id","element","container","_getOverlayContainer","type","overlays","slice","add","overlay","position","Error","html","next","_addOverlay","self","htmlContainer","idx","indexOf","splice","setVisible","hide","_updateOverlayContainer","x","y","waypoints","bbox","setPosition","_updateOverlay","left","top","right","undefined","width","bottom","height","_createOverlayContainer","appendChild","push","_updateRoot","viewbox","matrix","join","setTransform","raw","c","overlayContainer","constructor","jquery","plane","findPlane","activePlane","getActivePlane","_updateOverlayVisibilty","minZoom","maxZoom","visible","_updateOverlayScale","shouldScale","minScale","maxScale","transform","min","max","_updateOverlaysVisibilty","updateViewbox","on","event","e","o","i","marker","el","parentNode","root","insertBefore","firstChild","style","display","prefix"],"sources":["C:/Users/KondalaRaoThota/Truviq_Camunda/camunda-react/node_modules/diagram-js/lib/features/overlays/Overlays.js"],"sourcesContent":["import {\n  isArray,\n  isString,\n  isObject,\n  assign,\n  forEach,\n  find,\n  filter,\n  matchPattern,\n  isDefined\n} from 'min-dash';\n\nimport {\n  domify,\n  classes as domClasses,\n  attr as domAttr,\n  remove as domRemove,\n  clear as domClear\n} from 'min-dom';\n\nimport {\n  getBBox\n} from '../../util/Elements';\n\nimport Ids from '../../util/IdGenerator';\n\n// document wide unique overlay ids\nvar ids = new Ids('ov');\n\nvar LOW_PRIORITY = 500;\n\n\n/**\n * A service that allows users to attach overlays to diagram elements.\n *\n * The overlay service will take care of overlay positioning during updates.\n *\n * @example\n *\n * // add a pink badge on the top left of the shape\n * overlays.add(someShape, {\n *   position: {\n *     top: -5,\n *     left: -5\n *   },\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n * // or add via shape id\n *\n * overlays.add('some-element-id', {\n *   position: {\n *     top: -5,\n *     left: -5\n *   }\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n * // or add with optional type\n *\n * overlays.add(someShape, 'badge', {\n *   position: {\n *     top: -5,\n *     left: -5\n *   }\n *   html: '<div style=\"width: 10px; background: fuchsia; color: white;\">0</div>'\n * });\n *\n *\n * // remove an overlay\n *\n * var id = overlays.add(...);\n * overlays.remove(id);\n *\n *\n * You may configure overlay defaults during tool by providing a `config` module\n * with `overlays.defaults` as an entry:\n *\n * {\n *   overlays: {\n *     defaults: {\n *       show: {\n *         minZoom: 0.7,\n *         maxZoom: 5.0\n *       },\n *       scale: {\n *         min: 1\n *       }\n *     }\n * }\n *\n * @param {Object} config\n * @param {EventBus} eventBus\n * @param {Canvas} canvas\n * @param {ElementRegistry} elementRegistry\n */\nexport default function Overlays(config, eventBus, canvas, elementRegistry) {\n\n  this._eventBus = eventBus;\n  this._canvas = canvas;\n  this._elementRegistry = elementRegistry;\n\n  this._ids = ids;\n\n  this._overlayDefaults = assign({\n\n    // no show constraints\n    show: null,\n\n    // always scale\n    scale: true\n  }, config && config.defaults);\n\n  /**\n   * Mapping overlayId -> overlay\n   */\n  this._overlays = {};\n\n  /**\n   * Mapping elementId -> overlay container\n   */\n  this._overlayContainers = [];\n\n  // root html element for all overlays\n  this._overlayRoot = createRoot(canvas.getContainer());\n\n  this._init();\n}\n\n\nOverlays.$inject = [\n  'config.overlays',\n  'eventBus',\n  'canvas',\n  'elementRegistry'\n];\n\n\n/**\n * Returns the overlay with the specified id or a list of overlays\n * for an element with a given type.\n *\n * @example\n *\n * // return the single overlay with the given id\n * overlays.get('some-id');\n *\n * // return all overlays for the shape\n * overlays.get({ element: someShape });\n *\n * // return all overlays on shape with type 'badge'\n * overlays.get({ element: someShape, type: 'badge' });\n *\n * // shape can also be specified as id\n * overlays.get({ element: 'element-id', type: 'badge' });\n *\n *\n * @param {Object} search\n * @param {string} [search.id]\n * @param {string|djs.model.Base} [search.element]\n * @param {string} [search.type]\n *\n * @return {Object|Array<Object>} the overlay(s)\n */\nOverlays.prototype.get = function(search) {\n\n  if (isString(search)) {\n    search = { id: search };\n  }\n\n  if (isString(search.element)) {\n    search.element = this._elementRegistry.get(search.element);\n  }\n\n  if (search.element) {\n    var container = this._getOverlayContainer(search.element, true);\n\n    // return a list of overlays when searching by element (+type)\n    if (container) {\n      return search.type ? filter(container.overlays, matchPattern({ type: search.type })) : container.overlays.slice();\n    } else {\n      return [];\n    }\n  } else\n  if (search.type) {\n    return filter(this._overlays, matchPattern({ type: search.type }));\n  } else {\n\n    // return single element when searching by id\n    return search.id ? this._overlays[search.id] : null;\n  }\n};\n\n/**\n * Adds a HTML overlay to an element.\n *\n * @param {string|djs.model.Base}   element   attach overlay to this shape\n * @param {string}                  [type]    optional type to assign to the overlay\n * @param {Object}                  overlay   the overlay configuration\n *\n * @param {string|DOMElement}       overlay.html                 html element to use as an overlay\n * @param {Object}                  [overlay.show]               show configuration\n * @param {number}                  [overlay.show.minZoom]       minimal zoom level to show the overlay\n * @param {number}                  [overlay.show.maxZoom]       maximum zoom level to show the overlay\n * @param {Object}                  overlay.position             where to attach the overlay\n * @param {number}                  [overlay.position.left]      relative to element bbox left attachment\n * @param {number}                  [overlay.position.top]       relative to element bbox top attachment\n * @param {number}                  [overlay.position.bottom]    relative to element bbox bottom attachment\n * @param {number}                  [overlay.position.right]     relative to element bbox right attachment\n * @param {boolean|Object}          [overlay.scale=true]         false to preserve the same size regardless of\n *                                                               diagram zoom\n * @param {number}                  [overlay.scale.min]\n * @param {number}                  [overlay.scale.max]\n *\n * @return {string}                 id that may be used to reference the overlay for update or removal\n */\nOverlays.prototype.add = function(element, type, overlay) {\n\n  if (isObject(type)) {\n    overlay = type;\n    type = null;\n  }\n\n  if (!element.id) {\n    element = this._elementRegistry.get(element);\n  }\n\n  if (!overlay.position) {\n    throw new Error('must specifiy overlay position');\n  }\n\n  if (!overlay.html) {\n    throw new Error('must specifiy overlay html');\n  }\n\n  if (!element) {\n    throw new Error('invalid element specified');\n  }\n\n  var id = this._ids.next();\n\n  overlay = assign({}, this._overlayDefaults, overlay, {\n    id: id,\n    type: type,\n    element: element,\n    html: overlay.html\n  });\n\n  this._addOverlay(overlay);\n\n  return id;\n};\n\n\n/**\n * Remove an overlay with the given id or all overlays matching the given filter.\n *\n * @see Overlays#get for filter options.\n *\n * @param {string} [id]\n * @param {Object} [filter]\n */\nOverlays.prototype.remove = function(filter) {\n\n  var overlays = this.get(filter) || [];\n\n  if (!isArray(overlays)) {\n    overlays = [ overlays ];\n  }\n\n  var self = this;\n\n  forEach(overlays, function(overlay) {\n\n    var container = self._getOverlayContainer(overlay.element, true);\n\n    if (overlay) {\n      domRemove(overlay.html);\n      domRemove(overlay.htmlContainer);\n\n      delete overlay.htmlContainer;\n      delete overlay.element;\n\n      delete self._overlays[overlay.id];\n    }\n\n    if (container) {\n      var idx = container.overlays.indexOf(overlay);\n      if (idx !== -1) {\n        container.overlays.splice(idx, 1);\n      }\n    }\n  });\n\n};\n\n\nOverlays.prototype.show = function() {\n  setVisible(this._overlayRoot);\n};\n\n\nOverlays.prototype.hide = function() {\n  setVisible(this._overlayRoot, false);\n};\n\nOverlays.prototype.clear = function() {\n  this._overlays = {};\n\n  this._overlayContainers = [];\n\n  domClear(this._overlayRoot);\n};\n\nOverlays.prototype._updateOverlayContainer = function(container) {\n  var element = container.element,\n      html = container.html;\n\n  // update container left,top according to the elements x,y coordinates\n  // this ensures we can attach child elements relative to this container\n\n  var x = element.x,\n      y = element.y;\n\n  if (element.waypoints) {\n    var bbox = getBBox(element);\n    x = bbox.x;\n    y = bbox.y;\n  }\n\n  setPosition(html, x, y);\n\n  domAttr(container.html, 'data-container-id', element.id);\n};\n\n\nOverlays.prototype._updateOverlay = function(overlay) {\n\n  var position = overlay.position,\n      htmlContainer = overlay.htmlContainer,\n      element = overlay.element;\n\n  // update overlay html relative to shape because\n  // it is already positioned on the element\n\n  // update relative\n  var left = position.left,\n      top = position.top;\n\n  if (position.right !== undefined) {\n\n    var width;\n\n    if (element.waypoints) {\n      width = getBBox(element).width;\n    } else {\n      width = element.width;\n    }\n\n    left = position.right * -1 + width;\n  }\n\n  if (position.bottom !== undefined) {\n\n    var height;\n\n    if (element.waypoints) {\n      height = getBBox(element).height;\n    } else {\n      height = element.height;\n    }\n\n    top = position.bottom * -1 + height;\n  }\n\n  setPosition(htmlContainer, left || 0, top || 0);\n};\n\n\nOverlays.prototype._createOverlayContainer = function(element) {\n  var html = domify('<div class=\"djs-overlays\" style=\"position: absolute\" />');\n\n  this._overlayRoot.appendChild(html);\n\n  var container = {\n    html: html,\n    element: element,\n    overlays: []\n  };\n\n  this._updateOverlayContainer(container);\n\n  this._overlayContainers.push(container);\n\n  return container;\n};\n\n\nOverlays.prototype._updateRoot = function(viewbox) {\n  var scale = viewbox.scale || 1;\n\n  var matrix = 'matrix(' +\n  [\n    scale,\n    0,\n    0,\n    scale,\n    -1 * viewbox.x * scale,\n    -1 * viewbox.y * scale\n  ].join(',') +\n  ')';\n\n  setTransform(this._overlayRoot, matrix);\n};\n\n\nOverlays.prototype._getOverlayContainer = function(element, raw) {\n  var container = find(this._overlayContainers, function(c) {\n    return c.element === element;\n  });\n\n\n  if (!container && !raw) {\n    return this._createOverlayContainer(element);\n  }\n\n  return container;\n};\n\n\nOverlays.prototype._addOverlay = function(overlay) {\n\n  var id = overlay.id,\n      element = overlay.element,\n      html = overlay.html,\n      htmlContainer,\n      overlayContainer;\n\n  // unwrap jquery (for those who need it)\n  if (html.get && html.constructor.prototype.jquery) {\n    html = html.get(0);\n  }\n\n  // create proper html elements from\n  // overlay HTML strings\n  if (isString(html)) {\n    html = domify(html);\n  }\n\n  overlayContainer = this._getOverlayContainer(element);\n\n  htmlContainer = domify('<div class=\"djs-overlay\" data-overlay-id=\"' + id + '\" style=\"position: absolute\">');\n\n  htmlContainer.appendChild(html);\n\n  if (overlay.type) {\n    domClasses(htmlContainer).add('djs-overlay-' + overlay.type);\n  }\n\n  var plane = this._canvas.findPlane(element);\n  var activePlane = this._canvas.getActivePlane();\n  overlay.plane = plane;\n  if (plane !== activePlane) {\n    setVisible(htmlContainer, false);\n  }\n\n  overlay.htmlContainer = htmlContainer;\n\n  overlayContainer.overlays.push(overlay);\n  overlayContainer.html.appendChild(htmlContainer);\n\n  this._overlays[id] = overlay;\n\n  this._updateOverlay(overlay);\n  this._updateOverlayVisibilty(overlay, this._canvas.viewbox());\n};\n\n\nOverlays.prototype._updateOverlayVisibilty = function(overlay, viewbox) {\n  var show = overlay.show,\n      plane = overlay.plane,\n      minZoom = show && show.minZoom,\n      maxZoom = show && show.maxZoom,\n      htmlContainer = overlay.htmlContainer,\n      activePlane = this._canvas.getActivePlane(),\n      visible = true;\n\n  if (plane !== activePlane) {\n    visible = false;\n  } else if (show) {\n    if (\n      (isDefined(minZoom) && minZoom > viewbox.scale) ||\n      (isDefined(maxZoom) && maxZoom < viewbox.scale)\n    ) {\n      visible = false;\n    }\n  }\n\n  setVisible(htmlContainer, visible);\n\n  this._updateOverlayScale(overlay, viewbox);\n};\n\n\nOverlays.prototype._updateOverlayScale = function(overlay, viewbox) {\n  var shouldScale = overlay.scale,\n      minScale,\n      maxScale,\n      htmlContainer = overlay.htmlContainer;\n\n  var scale, transform = '';\n\n  if (shouldScale !== true) {\n\n    if (shouldScale === false) {\n      minScale = 1;\n      maxScale = 1;\n    } else {\n      minScale = shouldScale.min;\n      maxScale = shouldScale.max;\n    }\n\n    if (isDefined(minScale) && viewbox.scale < minScale) {\n      scale = (1 / viewbox.scale || 1) * minScale;\n    }\n\n    if (isDefined(maxScale) && viewbox.scale > maxScale) {\n      scale = (1 / viewbox.scale || 1) * maxScale;\n    }\n  }\n\n  if (isDefined(scale)) {\n    transform = 'scale(' + scale + ',' + scale + ')';\n  }\n\n  setTransform(htmlContainer, transform);\n};\n\n\nOverlays.prototype._updateOverlaysVisibilty = function(viewbox) {\n\n  var self = this;\n\n  forEach(this._overlays, function(overlay) {\n    self._updateOverlayVisibilty(overlay, viewbox);\n  });\n};\n\n\nOverlays.prototype._init = function() {\n\n  var eventBus = this._eventBus;\n\n  var self = this;\n\n\n  // scroll/zoom integration\n\n  function updateViewbox(viewbox) {\n    self._updateRoot(viewbox);\n    self._updateOverlaysVisibilty(viewbox);\n\n    self.show();\n  }\n\n  eventBus.on('canvas.viewbox.changing', function(event) {\n    self.hide();\n  });\n\n  eventBus.on('canvas.viewbox.changed', function(event) {\n    updateViewbox(event.viewbox);\n  });\n\n\n  // remove integration\n\n  eventBus.on([ 'shape.remove', 'connection.remove' ], function(e) {\n    var element = e.element;\n    var overlays = self.get({ element: element });\n\n    forEach(overlays, function(o) {\n      self.remove(o.id);\n    });\n\n    var container = self._getOverlayContainer(element);\n\n    if (container) {\n      domRemove(container.html);\n      var i = self._overlayContainers.indexOf(container);\n      if (i !== -1) {\n        self._overlayContainers.splice(i, 1);\n      }\n    }\n  });\n\n\n  // move integration\n\n  eventBus.on('element.changed', LOW_PRIORITY, function(e) {\n    var element = e.element;\n\n    var container = self._getOverlayContainer(element, true);\n\n    if (container) {\n      forEach(container.overlays, function(overlay) {\n        self._updateOverlay(overlay);\n      });\n\n      self._updateOverlayContainer(container);\n    }\n  });\n\n\n  // marker integration, simply add them on the overlays as classes, too.\n\n  eventBus.on('element.marker.update', function(e) {\n    var container = self._getOverlayContainer(e.element, true);\n    if (container) {\n      domClasses(container.html)[e.add ? 'add' : 'remove'](e.marker);\n    }\n  });\n\n\n  eventBus.on('plane.set', function(e) {\n    forEach(self._overlays, function(el) {\n      setVisible(el.htmlContainer, el.plane === e.plane);\n    });\n  });\n\n  // clear overlays with diagram\n\n  eventBus.on('diagram.clear', this.clear, this);\n};\n\n\n\n// helpers /////////////////////////////\n\nfunction createRoot(parentNode) {\n  var root = domify(\n    '<div class=\"djs-overlay-container\" style=\"position: absolute; width: 0; height: 0;\" />'\n  );\n\n  parentNode.insertBefore(root, parentNode.firstChild);\n\n  return root;\n}\n\nfunction setPosition(el, x, y) {\n  assign(el.style, { left: x + 'px', top: y + 'px' });\n}\n\nfunction setVisible(el, visible) {\n  el.style.display = visible === false ? 'none' : '';\n}\n\nfunction setTransform(el, transform) {\n\n  el.style['transform-origin'] = 'top left';\n\n  [ '', '-ms-', '-webkit-' ].forEach(function(prefix) {\n    el.style[prefix + 'transform'] = transform;\n  });\n}"],"mappings":"AAAA,SACEA,OAAO,EACPC,QAAQ,EACRC,QAAQ,EACRC,MAAM,EACNC,OAAO,EACPC,IAAI,EACJC,MAAM,EACNC,YAAY,EACZC,SAAS,QACJ,UAAU;AAEjB,SACEC,MAAM,EACNC,OAAO,IAAIC,UAAU,EACrBC,IAAI,IAAIC,OAAO,EACfC,MAAM,IAAIC,SAAS,EACnBC,KAAK,IAAIC,QAAQ,QACZ,SAAS;AAEhB,SACEC,OAAO,QACF,qBAAqB;AAE5B,OAAOC,GAAG,MAAM,wBAAwB;;AAExC;AACA,IAAIC,GAAG,GAAG,IAAID,GAAG,CAAC,IAAI,CAAC;AAEvB,IAAIE,YAAY,GAAG,GAAG;;AAGtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,QAAQA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,MAAM,EAAEC,eAAe,EAAE;EAE1E,IAAI,CAACC,SAAS,GAAGH,QAAQ;EACzB,IAAI,CAACI,OAAO,GAAGH,MAAM;EACrB,IAAI,CAACI,gBAAgB,GAAGH,eAAe;EAEvC,IAAI,CAACI,IAAI,GAAGV,GAAG;EAEf,IAAI,CAACW,gBAAgB,GAAG5B,MAAM,CAAC;IAE7B;IACA6B,IAAI,EAAE,IAAI;IAEV;IACAC,KAAK,EAAE;EACT,CAAC,EAAEV,MAAM,IAAIA,MAAM,CAACW,QAAQ,CAAC;;EAE7B;AACF;AACA;EACE,IAAI,CAACC,SAAS,GAAG,CAAC,CAAC;;EAEnB;AACF;AACA;EACE,IAAI,CAACC,kBAAkB,GAAG,EAAE;;EAE5B;EACA,IAAI,CAACC,YAAY,GAAGC,UAAU,CAACb,MAAM,CAACc,YAAY,EAAE,CAAC;EAErD,IAAI,CAACC,KAAK,EAAE;AACd;AAGAlB,QAAQ,CAACmB,OAAO,GAAG,CACjB,iBAAiB,EACjB,UAAU,EACV,QAAQ,EACR,iBAAiB,CAClB;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAnB,QAAQ,CAACoB,SAAS,CAACC,GAAG,GAAG,UAASC,MAAM,EAAE;EAExC,IAAI3C,QAAQ,CAAC2C,MAAM,CAAC,EAAE;IACpBA,MAAM,GAAG;MAAEC,EAAE,EAAED;IAAO,CAAC;EACzB;EAEA,IAAI3C,QAAQ,CAAC2C,MAAM,CAACE,OAAO,CAAC,EAAE;IAC5BF,MAAM,CAACE,OAAO,GAAG,IAAI,CAACjB,gBAAgB,CAACc,GAAG,CAACC,MAAM,CAACE,OAAO,CAAC;EAC5D;EAEA,IAAIF,MAAM,CAACE,OAAO,EAAE;IAClB,IAAIC,SAAS,GAAG,IAAI,CAACC,oBAAoB,CAACJ,MAAM,CAACE,OAAO,EAAE,IAAI,CAAC;;IAE/D;IACA,IAAIC,SAAS,EAAE;MACb,OAAOH,MAAM,CAACK,IAAI,GAAG3C,MAAM,CAACyC,SAAS,CAACG,QAAQ,EAAE3C,YAAY,CAAC;QAAE0C,IAAI,EAAEL,MAAM,CAACK;MAAK,CAAC,CAAC,CAAC,GAAGF,SAAS,CAACG,QAAQ,CAACC,KAAK,EAAE;IACnH,CAAC,MAAM;MACL,OAAO,EAAE;IACX;EACF,CAAC,MACD,IAAIP,MAAM,CAACK,IAAI,EAAE;IACf,OAAO3C,MAAM,CAAC,IAAI,CAAC6B,SAAS,EAAE5B,YAAY,CAAC;MAAE0C,IAAI,EAAEL,MAAM,CAACK;IAAK,CAAC,CAAC,CAAC;EACpE,CAAC,MAAM;IAEL;IACA,OAAOL,MAAM,CAACC,EAAE,GAAG,IAAI,CAACV,SAAS,CAACS,MAAM,CAACC,EAAE,CAAC,GAAG,IAAI;EACrD;AACF,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAvB,QAAQ,CAACoB,SAAS,CAACU,GAAG,GAAG,UAASN,OAAO,EAAEG,IAAI,EAAEI,OAAO,EAAE;EAExD,IAAInD,QAAQ,CAAC+C,IAAI,CAAC,EAAE;IAClBI,OAAO,GAAGJ,IAAI;IACdA,IAAI,GAAG,IAAI;EACb;EAEA,IAAI,CAACH,OAAO,CAACD,EAAE,EAAE;IACfC,OAAO,GAAG,IAAI,CAACjB,gBAAgB,CAACc,GAAG,CAACG,OAAO,CAAC;EAC9C;EAEA,IAAI,CAACO,OAAO,CAACC,QAAQ,EAAE;IACrB,MAAM,IAAIC,KAAK,CAAC,gCAAgC,CAAC;EACnD;EAEA,IAAI,CAACF,OAAO,CAACG,IAAI,EAAE;IACjB,MAAM,IAAID,KAAK,CAAC,4BAA4B,CAAC;EAC/C;EAEA,IAAI,CAACT,OAAO,EAAE;IACZ,MAAM,IAAIS,KAAK,CAAC,2BAA2B,CAAC;EAC9C;EAEA,IAAIV,EAAE,GAAG,IAAI,CAACf,IAAI,CAAC2B,IAAI,EAAE;EAEzBJ,OAAO,GAAGlD,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC4B,gBAAgB,EAAEsB,OAAO,EAAE;IACnDR,EAAE,EAAEA,EAAE;IACNI,IAAI,EAAEA,IAAI;IACVH,OAAO,EAAEA,OAAO;IAChBU,IAAI,EAAEH,OAAO,CAACG;EAChB,CAAC,CAAC;EAEF,IAAI,CAACE,WAAW,CAACL,OAAO,CAAC;EAEzB,OAAOR,EAAE;AACX,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAvB,QAAQ,CAACoB,SAAS,CAAC5B,MAAM,GAAG,UAASR,MAAM,EAAE;EAE3C,IAAI4C,QAAQ,GAAG,IAAI,CAACP,GAAG,CAACrC,MAAM,CAAC,IAAI,EAAE;EAErC,IAAI,CAACN,OAAO,CAACkD,QAAQ,CAAC,EAAE;IACtBA,QAAQ,GAAG,CAAEA,QAAQ,CAAE;EACzB;EAEA,IAAIS,IAAI,GAAG,IAAI;EAEfvD,OAAO,CAAC8C,QAAQ,EAAE,UAASG,OAAO,EAAE;IAElC,IAAIN,SAAS,GAAGY,IAAI,CAACX,oBAAoB,CAACK,OAAO,CAACP,OAAO,EAAE,IAAI,CAAC;IAEhE,IAAIO,OAAO,EAAE;MACXtC,SAAS,CAACsC,OAAO,CAACG,IAAI,CAAC;MACvBzC,SAAS,CAACsC,OAAO,CAACO,aAAa,CAAC;MAEhC,OAAOP,OAAO,CAACO,aAAa;MAC5B,OAAOP,OAAO,CAACP,OAAO;MAEtB,OAAOa,IAAI,CAACxB,SAAS,CAACkB,OAAO,CAACR,EAAE,CAAC;IACnC;IAEA,IAAIE,SAAS,EAAE;MACb,IAAIc,GAAG,GAAGd,SAAS,CAACG,QAAQ,CAACY,OAAO,CAACT,OAAO,CAAC;MAC7C,IAAIQ,GAAG,KAAK,CAAC,CAAC,EAAE;QACdd,SAAS,CAACG,QAAQ,CAACa,MAAM,CAACF,GAAG,EAAE,CAAC,CAAC;MACnC;IACF;EACF,CAAC,CAAC;AAEJ,CAAC;AAGDvC,QAAQ,CAACoB,SAAS,CAACV,IAAI,GAAG,YAAW;EACnCgC,UAAU,CAAC,IAAI,CAAC3B,YAAY,CAAC;AAC/B,CAAC;AAGDf,QAAQ,CAACoB,SAAS,CAACuB,IAAI,GAAG,YAAW;EACnCD,UAAU,CAAC,IAAI,CAAC3B,YAAY,EAAE,KAAK,CAAC;AACtC,CAAC;AAEDf,QAAQ,CAACoB,SAAS,CAAC1B,KAAK,GAAG,YAAW;EACpC,IAAI,CAACmB,SAAS,GAAG,CAAC,CAAC;EAEnB,IAAI,CAACC,kBAAkB,GAAG,EAAE;EAE5BnB,QAAQ,CAAC,IAAI,CAACoB,YAAY,CAAC;AAC7B,CAAC;AAEDf,QAAQ,CAACoB,SAAS,CAACwB,uBAAuB,GAAG,UAASnB,SAAS,EAAE;EAC/D,IAAID,OAAO,GAAGC,SAAS,CAACD,OAAO;IAC3BU,IAAI,GAAGT,SAAS,CAACS,IAAI;;EAEzB;EACA;;EAEA,IAAIW,CAAC,GAAGrB,OAAO,CAACqB,CAAC;IACbC,CAAC,GAAGtB,OAAO,CAACsB,CAAC;EAEjB,IAAItB,OAAO,CAACuB,SAAS,EAAE;IACrB,IAAIC,IAAI,GAAGpD,OAAO,CAAC4B,OAAO,CAAC;IAC3BqB,CAAC,GAAGG,IAAI,CAACH,CAAC;IACVC,CAAC,GAAGE,IAAI,CAACF,CAAC;EACZ;EAEAG,WAAW,CAACf,IAAI,EAAEW,CAAC,EAAEC,CAAC,CAAC;EAEvBvD,OAAO,CAACkC,SAAS,CAACS,IAAI,EAAE,mBAAmB,EAAEV,OAAO,CAACD,EAAE,CAAC;AAC1D,CAAC;AAGDvB,QAAQ,CAACoB,SAAS,CAAC8B,cAAc,GAAG,UAASnB,OAAO,EAAE;EAEpD,IAAIC,QAAQ,GAAGD,OAAO,CAACC,QAAQ;IAC3BM,aAAa,GAAGP,OAAO,CAACO,aAAa;IACrCd,OAAO,GAAGO,OAAO,CAACP,OAAO;;EAE7B;EACA;;EAEA;EACA,IAAI2B,IAAI,GAAGnB,QAAQ,CAACmB,IAAI;IACpBC,GAAG,GAAGpB,QAAQ,CAACoB,GAAG;EAEtB,IAAIpB,QAAQ,CAACqB,KAAK,KAAKC,SAAS,EAAE;IAEhC,IAAIC,KAAK;IAET,IAAI/B,OAAO,CAACuB,SAAS,EAAE;MACrBQ,KAAK,GAAG3D,OAAO,CAAC4B,OAAO,CAAC,CAAC+B,KAAK;IAChC,CAAC,MAAM;MACLA,KAAK,GAAG/B,OAAO,CAAC+B,KAAK;IACvB;IAEAJ,IAAI,GAAGnB,QAAQ,CAACqB,KAAK,GAAG,CAAC,CAAC,GAAGE,KAAK;EACpC;EAEA,IAAIvB,QAAQ,CAACwB,MAAM,KAAKF,SAAS,EAAE;IAEjC,IAAIG,MAAM;IAEV,IAAIjC,OAAO,CAACuB,SAAS,EAAE;MACrBU,MAAM,GAAG7D,OAAO,CAAC4B,OAAO,CAAC,CAACiC,MAAM;IAClC,CAAC,MAAM;MACLA,MAAM,GAAGjC,OAAO,CAACiC,MAAM;IACzB;IAEAL,GAAG,GAAGpB,QAAQ,CAACwB,MAAM,GAAG,CAAC,CAAC,GAAGC,MAAM;EACrC;EAEAR,WAAW,CAACX,aAAa,EAAEa,IAAI,IAAI,CAAC,EAAEC,GAAG,IAAI,CAAC,CAAC;AACjD,CAAC;AAGDpD,QAAQ,CAACoB,SAAS,CAACsC,uBAAuB,GAAG,UAASlC,OAAO,EAAE;EAC7D,IAAIU,IAAI,GAAG/C,MAAM,CAAC,yDAAyD,CAAC;EAE5E,IAAI,CAAC4B,YAAY,CAAC4C,WAAW,CAACzB,IAAI,CAAC;EAEnC,IAAIT,SAAS,GAAG;IACdS,IAAI,EAAEA,IAAI;IACVV,OAAO,EAAEA,OAAO;IAChBI,QAAQ,EAAE;EACZ,CAAC;EAED,IAAI,CAACgB,uBAAuB,CAACnB,SAAS,CAAC;EAEvC,IAAI,CAACX,kBAAkB,CAAC8C,IAAI,CAACnC,SAAS,CAAC;EAEvC,OAAOA,SAAS;AAClB,CAAC;AAGDzB,QAAQ,CAACoB,SAAS,CAACyC,WAAW,GAAG,UAASC,OAAO,EAAE;EACjD,IAAInD,KAAK,GAAGmD,OAAO,CAACnD,KAAK,IAAI,CAAC;EAE9B,IAAIoD,MAAM,GAAG,SAAS,GACtB,CACEpD,KAAK,EACL,CAAC,EACD,CAAC,EACDA,KAAK,EACL,CAAC,CAAC,GAAGmD,OAAO,CAACjB,CAAC,GAAGlC,KAAK,EACtB,CAAC,CAAC,GAAGmD,OAAO,CAAChB,CAAC,GAAGnC,KAAK,CACvB,CAACqD,IAAI,CAAC,GAAG,CAAC,GACX,GAAG;EAEHC,YAAY,CAAC,IAAI,CAAClD,YAAY,EAAEgD,MAAM,CAAC;AACzC,CAAC;AAGD/D,QAAQ,CAACoB,SAAS,CAACM,oBAAoB,GAAG,UAASF,OAAO,EAAE0C,GAAG,EAAE;EAC/D,IAAIzC,SAAS,GAAG1C,IAAI,CAAC,IAAI,CAAC+B,kBAAkB,EAAE,UAASqD,CAAC,EAAE;IACxD,OAAOA,CAAC,CAAC3C,OAAO,KAAKA,OAAO;EAC9B,CAAC,CAAC;EAGF,IAAI,CAACC,SAAS,IAAI,CAACyC,GAAG,EAAE;IACtB,OAAO,IAAI,CAACR,uBAAuB,CAAClC,OAAO,CAAC;EAC9C;EAEA,OAAOC,SAAS;AAClB,CAAC;AAGDzB,QAAQ,CAACoB,SAAS,CAACgB,WAAW,GAAG,UAASL,OAAO,EAAE;EAEjD,IAAIR,EAAE,GAAGQ,OAAO,CAACR,EAAE;IACfC,OAAO,GAAGO,OAAO,CAACP,OAAO;IACzBU,IAAI,GAAGH,OAAO,CAACG,IAAI;IACnBI,aAAa;IACb8B,gBAAgB;;EAEpB;EACA,IAAIlC,IAAI,CAACb,GAAG,IAAIa,IAAI,CAACmC,WAAW,CAACjD,SAAS,CAACkD,MAAM,EAAE;IACjDpC,IAAI,GAAGA,IAAI,CAACb,GAAG,CAAC,CAAC,CAAC;EACpB;;EAEA;EACA;EACA,IAAI1C,QAAQ,CAACuD,IAAI,CAAC,EAAE;IAClBA,IAAI,GAAG/C,MAAM,CAAC+C,IAAI,CAAC;EACrB;EAEAkC,gBAAgB,GAAG,IAAI,CAAC1C,oBAAoB,CAACF,OAAO,CAAC;EAErDc,aAAa,GAAGnD,MAAM,CAAC,4CAA4C,GAAGoC,EAAE,GAAG,+BAA+B,CAAC;EAE3Ge,aAAa,CAACqB,WAAW,CAACzB,IAAI,CAAC;EAE/B,IAAIH,OAAO,CAACJ,IAAI,EAAE;IAChBtC,UAAU,CAACiD,aAAa,CAAC,CAACR,GAAG,CAAC,cAAc,GAAGC,OAAO,CAACJ,IAAI,CAAC;EAC9D;EAEA,IAAI4C,KAAK,GAAG,IAAI,CAACjE,OAAO,CAACkE,SAAS,CAAChD,OAAO,CAAC;EAC3C,IAAIiD,WAAW,GAAG,IAAI,CAACnE,OAAO,CAACoE,cAAc,EAAE;EAC/C3C,OAAO,CAACwC,KAAK,GAAGA,KAAK;EACrB,IAAIA,KAAK,KAAKE,WAAW,EAAE;IACzB/B,UAAU,CAACJ,aAAa,EAAE,KAAK,CAAC;EAClC;EAEAP,OAAO,CAACO,aAAa,GAAGA,aAAa;EAErC8B,gBAAgB,CAACxC,QAAQ,CAACgC,IAAI,CAAC7B,OAAO,CAAC;EACvCqC,gBAAgB,CAAClC,IAAI,CAACyB,WAAW,CAACrB,aAAa,CAAC;EAEhD,IAAI,CAACzB,SAAS,CAACU,EAAE,CAAC,GAAGQ,OAAO;EAE5B,IAAI,CAACmB,cAAc,CAACnB,OAAO,CAAC;EAC5B,IAAI,CAAC4C,uBAAuB,CAAC5C,OAAO,EAAE,IAAI,CAACzB,OAAO,CAACwD,OAAO,EAAE,CAAC;AAC/D,CAAC;AAGD9D,QAAQ,CAACoB,SAAS,CAACuD,uBAAuB,GAAG,UAAS5C,OAAO,EAAE+B,OAAO,EAAE;EACtE,IAAIpD,IAAI,GAAGqB,OAAO,CAACrB,IAAI;IACnB6D,KAAK,GAAGxC,OAAO,CAACwC,KAAK;IACrBK,OAAO,GAAGlE,IAAI,IAAIA,IAAI,CAACkE,OAAO;IAC9BC,OAAO,GAAGnE,IAAI,IAAIA,IAAI,CAACmE,OAAO;IAC9BvC,aAAa,GAAGP,OAAO,CAACO,aAAa;IACrCmC,WAAW,GAAG,IAAI,CAACnE,OAAO,CAACoE,cAAc,EAAE;IAC3CI,OAAO,GAAG,IAAI;EAElB,IAAIP,KAAK,KAAKE,WAAW,EAAE;IACzBK,OAAO,GAAG,KAAK;EACjB,CAAC,MAAM,IAAIpE,IAAI,EAAE;IACf,IACGxB,SAAS,CAAC0F,OAAO,CAAC,IAAIA,OAAO,GAAGd,OAAO,CAACnD,KAAK,IAC7CzB,SAAS,CAAC2F,OAAO,CAAC,IAAIA,OAAO,GAAGf,OAAO,CAACnD,KAAM,EAC/C;MACAmE,OAAO,GAAG,KAAK;IACjB;EACF;EAEApC,UAAU,CAACJ,aAAa,EAAEwC,OAAO,CAAC;EAElC,IAAI,CAACC,mBAAmB,CAAChD,OAAO,EAAE+B,OAAO,CAAC;AAC5C,CAAC;AAGD9D,QAAQ,CAACoB,SAAS,CAAC2D,mBAAmB,GAAG,UAAShD,OAAO,EAAE+B,OAAO,EAAE;EAClE,IAAIkB,WAAW,GAAGjD,OAAO,CAACpB,KAAK;IAC3BsE,QAAQ;IACRC,QAAQ;IACR5C,aAAa,GAAGP,OAAO,CAACO,aAAa;EAEzC,IAAI3B,KAAK;IAAEwE,SAAS,GAAG,EAAE;EAEzB,IAAIH,WAAW,KAAK,IAAI,EAAE;IAExB,IAAIA,WAAW,KAAK,KAAK,EAAE;MACzBC,QAAQ,GAAG,CAAC;MACZC,QAAQ,GAAG,CAAC;IACd,CAAC,MAAM;MACLD,QAAQ,GAAGD,WAAW,CAACI,GAAG;MAC1BF,QAAQ,GAAGF,WAAW,CAACK,GAAG;IAC5B;IAEA,IAAInG,SAAS,CAAC+F,QAAQ,CAAC,IAAInB,OAAO,CAACnD,KAAK,GAAGsE,QAAQ,EAAE;MACnDtE,KAAK,GAAG,CAAC,CAAC,GAAGmD,OAAO,CAACnD,KAAK,IAAI,CAAC,IAAIsE,QAAQ;IAC7C;IAEA,IAAI/F,SAAS,CAACgG,QAAQ,CAAC,IAAIpB,OAAO,CAACnD,KAAK,GAAGuE,QAAQ,EAAE;MACnDvE,KAAK,GAAG,CAAC,CAAC,GAAGmD,OAAO,CAACnD,KAAK,IAAI,CAAC,IAAIuE,QAAQ;IAC7C;EACF;EAEA,IAAIhG,SAAS,CAACyB,KAAK,CAAC,EAAE;IACpBwE,SAAS,GAAG,QAAQ,GAAGxE,KAAK,GAAG,GAAG,GAAGA,KAAK,GAAG,GAAG;EAClD;EAEAsD,YAAY,CAAC3B,aAAa,EAAE6C,SAAS,CAAC;AACxC,CAAC;AAGDnF,QAAQ,CAACoB,SAAS,CAACkE,wBAAwB,GAAG,UAASxB,OAAO,EAAE;EAE9D,IAAIzB,IAAI,GAAG,IAAI;EAEfvD,OAAO,CAAC,IAAI,CAAC+B,SAAS,EAAE,UAASkB,OAAO,EAAE;IACxCM,IAAI,CAACsC,uBAAuB,CAAC5C,OAAO,EAAE+B,OAAO,CAAC;EAChD,CAAC,CAAC;AACJ,CAAC;AAGD9D,QAAQ,CAACoB,SAAS,CAACF,KAAK,GAAG,YAAW;EAEpC,IAAIhB,QAAQ,GAAG,IAAI,CAACG,SAAS;EAE7B,IAAIgC,IAAI,GAAG,IAAI;;EAGf;;EAEA,SAASkD,aAAaA,CAACzB,OAAO,EAAE;IAC9BzB,IAAI,CAACwB,WAAW,CAACC,OAAO,CAAC;IACzBzB,IAAI,CAACiD,wBAAwB,CAACxB,OAAO,CAAC;IAEtCzB,IAAI,CAAC3B,IAAI,EAAE;EACb;EAEAR,QAAQ,CAACsF,EAAE,CAAC,yBAAyB,EAAE,UAASC,KAAK,EAAE;IACrDpD,IAAI,CAACM,IAAI,EAAE;EACb,CAAC,CAAC;EAEFzC,QAAQ,CAACsF,EAAE,CAAC,wBAAwB,EAAE,UAASC,KAAK,EAAE;IACpDF,aAAa,CAACE,KAAK,CAAC3B,OAAO,CAAC;EAC9B,CAAC,CAAC;;EAGF;;EAEA5D,QAAQ,CAACsF,EAAE,CAAC,CAAE,cAAc,EAAE,mBAAmB,CAAE,EAAE,UAASE,CAAC,EAAE;IAC/D,IAAIlE,OAAO,GAAGkE,CAAC,CAAClE,OAAO;IACvB,IAAII,QAAQ,GAAGS,IAAI,CAAChB,GAAG,CAAC;MAAEG,OAAO,EAAEA;IAAQ,CAAC,CAAC;IAE7C1C,OAAO,CAAC8C,QAAQ,EAAE,UAAS+D,CAAC,EAAE;MAC5BtD,IAAI,CAAC7C,MAAM,CAACmG,CAAC,CAACpE,EAAE,CAAC;IACnB,CAAC,CAAC;IAEF,IAAIE,SAAS,GAAGY,IAAI,CAACX,oBAAoB,CAACF,OAAO,CAAC;IAElD,IAAIC,SAAS,EAAE;MACbhC,SAAS,CAACgC,SAAS,CAACS,IAAI,CAAC;MACzB,IAAI0D,CAAC,GAAGvD,IAAI,CAACvB,kBAAkB,CAAC0B,OAAO,CAACf,SAAS,CAAC;MAClD,IAAImE,CAAC,KAAK,CAAC,CAAC,EAAE;QACZvD,IAAI,CAACvB,kBAAkB,CAAC2B,MAAM,CAACmD,CAAC,EAAE,CAAC,CAAC;MACtC;IACF;EACF,CAAC,CAAC;;EAGF;;EAEA1F,QAAQ,CAACsF,EAAE,CAAC,iBAAiB,EAAEzF,YAAY,EAAE,UAAS2F,CAAC,EAAE;IACvD,IAAIlE,OAAO,GAAGkE,CAAC,CAAClE,OAAO;IAEvB,IAAIC,SAAS,GAAGY,IAAI,CAACX,oBAAoB,CAACF,OAAO,EAAE,IAAI,CAAC;IAExD,IAAIC,SAAS,EAAE;MACb3C,OAAO,CAAC2C,SAAS,CAACG,QAAQ,EAAE,UAASG,OAAO,EAAE;QAC5CM,IAAI,CAACa,cAAc,CAACnB,OAAO,CAAC;MAC9B,CAAC,CAAC;MAEFM,IAAI,CAACO,uBAAuB,CAACnB,SAAS,CAAC;IACzC;EACF,CAAC,CAAC;;EAGF;;EAEAvB,QAAQ,CAACsF,EAAE,CAAC,uBAAuB,EAAE,UAASE,CAAC,EAAE;IAC/C,IAAIjE,SAAS,GAAGY,IAAI,CAACX,oBAAoB,CAACgE,CAAC,CAAClE,OAAO,EAAE,IAAI,CAAC;IAC1D,IAAIC,SAAS,EAAE;MACbpC,UAAU,CAACoC,SAAS,CAACS,IAAI,CAAC,CAACwD,CAAC,CAAC5D,GAAG,GAAG,KAAK,GAAG,QAAQ,CAAC,CAAC4D,CAAC,CAACG,MAAM,CAAC;IAChE;EACF,CAAC,CAAC;EAGF3F,QAAQ,CAACsF,EAAE,CAAC,WAAW,EAAE,UAASE,CAAC,EAAE;IACnC5G,OAAO,CAACuD,IAAI,CAACxB,SAAS,EAAE,UAASiF,EAAE,EAAE;MACnCpD,UAAU,CAACoD,EAAE,CAACxD,aAAa,EAAEwD,EAAE,CAACvB,KAAK,KAAKmB,CAAC,CAACnB,KAAK,CAAC;IACpD,CAAC,CAAC;EACJ,CAAC,CAAC;;EAEF;;EAEArE,QAAQ,CAACsF,EAAE,CAAC,eAAe,EAAE,IAAI,CAAC9F,KAAK,EAAE,IAAI,CAAC;AAChD,CAAC;;AAID;;AAEA,SAASsB,UAAUA,CAAC+E,UAAU,EAAE;EAC9B,IAAIC,IAAI,GAAG7G,MAAM,CACf,wFAAwF,CACzF;EAED4G,UAAU,CAACE,YAAY,CAACD,IAAI,EAAED,UAAU,CAACG,UAAU,CAAC;EAEpD,OAAOF,IAAI;AACb;AAEA,SAAS/C,WAAWA,CAAC6C,EAAE,EAAEjD,CAAC,EAAEC,CAAC,EAAE;EAC7BjE,MAAM,CAACiH,EAAE,CAACK,KAAK,EAAE;IAAEhD,IAAI,EAAEN,CAAC,GAAG,IAAI;IAAEO,GAAG,EAAEN,CAAC,GAAG;EAAK,CAAC,CAAC;AACrD;AAEA,SAASJ,UAAUA,CAACoD,EAAE,EAAEhB,OAAO,EAAE;EAC/BgB,EAAE,CAACK,KAAK,CAACC,OAAO,GAAGtB,OAAO,KAAK,KAAK,GAAG,MAAM,GAAG,EAAE;AACpD;AAEA,SAASb,YAAYA,CAAC6B,EAAE,EAAEX,SAAS,EAAE;EAEnCW,EAAE,CAACK,KAAK,CAAC,kBAAkB,CAAC,GAAG,UAAU;EAEzC,CAAE,EAAE,EAAE,MAAM,EAAE,UAAU,CAAE,CAACrH,OAAO,CAAC,UAASuH,MAAM,EAAE;IAClDP,EAAE,CAACK,KAAK,CAACE,MAAM,GAAG,WAAW,CAAC,GAAGlB,SAAS;EAC5C,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module"}