{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _map from 'lodash/map';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\nimport MessageItem from './MessageItem';\n\n/**\n * A message can contain a list of items.\n */\nfunction MessageList(props) {\n  var children = props.children,\n    className = props.className,\n    items = props.items;\n  var classes = cx('list', className);\n  var rest = getUnhandledProps(MessageList, props);\n  var ElementType = getElementType(MessageList, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? _map(items, MessageItem.create) : children);\n}\nMessageList.handledProps = ['as', 'children', 'className', 'items'];\nMessageList._meta = {\n  name: 'MessageList',\n  parent: 'Message',\n  type: META.TYPES.COLLECTION\n};\nMessageList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Shorthand Message.Items. */\n  items: customPropTypes.collectionShorthand\n} : {};\nMessageList.defaultProps = {\n  as: 'ul'\n};\nMessageList.create = createShorthandFactory(MessageList, function (val) {\n  return {\n    items: val\n  };\n});\nexport default MessageList;","map":{"version":3,"names":["_extends","_map","cx","PropTypes","React","childrenUtils","createShorthandFactory","customPropTypes","getElementType","getUnhandledProps","META","MessageItem","MessageList","props","children","className","items","classes","rest","ElementType","createElement","isNil","create","handledProps","_meta","name","parent","type","TYPES","COLLECTION","propTypes","process","env","NODE_ENV","as","node","string","collectionShorthand","defaultProps","val"],"sources":["C:/Users/KondalaRaoThota/Truviq_Camunda/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/collections/Message/MessageList.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _map from 'lodash/map';\nimport cx from 'classnames';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\nimport MessageItem from './MessageItem';\n\n/**\n * A message can contain a list of items.\n */\nfunction MessageList(props) {\n  var children = props.children,\n      className = props.className,\n      items = props.items;\n\n  var classes = cx('list', className);\n  var rest = getUnhandledProps(MessageList, props);\n  var ElementType = getElementType(MessageList, props);\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    childrenUtils.isNil(children) ? _map(items, MessageItem.create) : children\n  );\n}\n\nMessageList.handledProps = ['as', 'children', 'className', 'items'];\nMessageList._meta = {\n  name: 'MessageList',\n  parent: 'Message',\n  type: META.TYPES.COLLECTION\n};\n\nMessageList.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand Message.Items. */\n  items: customPropTypes.collectionShorthand\n} : {};\n\nMessageList.defaultProps = {\n  as: 'ul'\n};\n\nMessageList.create = createShorthandFactory(MessageList, function (val) {\n  return { items: val };\n});\n\nexport default MessageList;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,+BAA+B;AACpD,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAOC,EAAE,MAAM,YAAY;AAE3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,aAAa,EAAEC,sBAAsB,EAAEC,eAAe,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,IAAI,QAAQ,WAAW;AAC3H,OAAOC,WAAW,MAAM,eAAe;;AAEvC;AACA;AACA;AACA,SAASC,WAAWA,CAACC,KAAK,EAAE;EAC1B,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;IACzBC,SAAS,GAAGF,KAAK,CAACE,SAAS;IAC3BC,KAAK,GAAGH,KAAK,CAACG,KAAK;EAEvB,IAAIC,OAAO,GAAGf,EAAE,CAAC,MAAM,EAAEa,SAAS,CAAC;EACnC,IAAIG,IAAI,GAAGT,iBAAiB,CAACG,WAAW,EAAEC,KAAK,CAAC;EAChD,IAAIM,WAAW,GAAGX,cAAc,CAACI,WAAW,EAAEC,KAAK,CAAC;EAEpD,OAAOT,KAAK,CAACgB,aAAa,CACxBD,WAAW,EACXnB,QAAQ,CAAC,CAAC,CAAC,EAAEkB,IAAI,EAAE;IAAEH,SAAS,EAAEE;EAAQ,CAAC,CAAC,EAC1CZ,aAAa,CAACgB,KAAK,CAACP,QAAQ,CAAC,GAAGb,IAAI,CAACe,KAAK,EAAEL,WAAW,CAACW,MAAM,CAAC,GAAGR,QAAQ,CAC3E;AACH;AAEAF,WAAW,CAACW,YAAY,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,OAAO,CAAC;AACnEX,WAAW,CAACY,KAAK,GAAG;EAClBC,IAAI,EAAE,aAAa;EACnBC,MAAM,EAAE,SAAS;EACjBC,IAAI,EAAEjB,IAAI,CAACkB,KAAK,CAACC;AACnB,CAAC;AAEDjB,WAAW,CAACkB,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAC9D;EACAC,EAAE,EAAE3B,eAAe,CAAC2B,EAAE;EAEtB;EACApB,QAAQ,EAAEX,SAAS,CAACgC,IAAI;EAExB;EACApB,SAAS,EAAEZ,SAAS,CAACiC,MAAM;EAE3B;EACApB,KAAK,EAAET,eAAe,CAAC8B;AACzB,CAAC,GAAG,CAAC,CAAC;AAENzB,WAAW,CAAC0B,YAAY,GAAG;EACzBJ,EAAE,EAAE;AACN,CAAC;AAEDtB,WAAW,CAACU,MAAM,GAAGhB,sBAAsB,CAACM,WAAW,EAAE,UAAU2B,GAAG,EAAE;EACtE,OAAO;IAAEvB,KAAK,EAAEuB;EAAI,CAAC;AACvB,CAAC,CAAC;AAEF,eAAe3B,WAAW"},"metadata":{},"sourceType":"module"}