{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport { Children, Component } from 'react';\nimport { findDOMNode } from 'react-dom';\nimport { TYPES } from '../../lib/META';\n\n/**\n * This component exposes a callback prop that always returns the DOM node of both functional and class component\n * children.\n */\n\nvar Ref = function (_Component) {\n  _inherits(Ref, _Component);\n  function Ref() {\n    _classCallCheck(this, Ref);\n    return _possibleConstructorReturn(this, (Ref.__proto__ || Object.getPrototypeOf(Ref)).apply(this, arguments));\n  }\n  _createClass(Ref, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var innerRef = this.props.innerRef;\n\n      // Heads up! Don't move this condition, it's a short circuit that avoids run of `findDOMNode`\n      // if `innerRef` isn't passed\n      // eslint-disable-next-line react/no-find-dom-node\n\n      if (innerRef) innerRef(findDOMNode(this));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n      return Children.only(children);\n    }\n  }]);\n  return Ref;\n}(Component);\nRef._meta = {\n  name: 'Ref',\n  type: TYPES.ADDON\n};\nRef.handledProps = ['children', 'innerRef'];\nexport default Ref;\nRef.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Primary content. */\n  children: PropTypes.element,\n  /**\n   * Called when componentDidMount.\n   *\n   * @param {HTMLElement} node - Referred node.\n   */\n  innerRef: PropTypes.func\n} : {};","map":{"version":3,"names":["_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","PropTypes","Children","Component","findDOMNode","TYPES","Ref","_Component","__proto__","Object","getPrototypeOf","apply","arguments","key","value","componentDidMount","innerRef","props","render","children","only","_meta","name","type","ADDON","handledProps","propTypes","process","env","NODE_ENV","element","func"],"sources":["C:/Users/KondalaRaoThota/Truviq_Camunda/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/addons/Ref/Ref.js"],"sourcesContent":["import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport PropTypes from 'prop-types';\nimport { Children, Component } from 'react';\nimport { findDOMNode } from 'react-dom';\n\nimport { TYPES } from '../../lib/META';\n\n/**\n * This component exposes a callback prop that always returns the DOM node of both functional and class component\n * children.\n */\n\nvar Ref = function (_Component) {\n  _inherits(Ref, _Component);\n\n  function Ref() {\n    _classCallCheck(this, Ref);\n\n    return _possibleConstructorReturn(this, (Ref.__proto__ || Object.getPrototypeOf(Ref)).apply(this, arguments));\n  }\n\n  _createClass(Ref, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var innerRef = this.props.innerRef;\n\n      // Heads up! Don't move this condition, it's a short circuit that avoids run of `findDOMNode`\n      // if `innerRef` isn't passed\n      // eslint-disable-next-line react/no-find-dom-node\n\n      if (innerRef) innerRef(findDOMNode(this));\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n\n\n      return Children.only(children);\n    }\n  }]);\n\n  return Ref;\n}(Component);\n\nRef._meta = {\n  name: 'Ref',\n  type: TYPES.ADDON\n};\nRef.handledProps = ['children', 'innerRef'];\nexport default Ref;\nRef.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Primary content. */\n  children: PropTypes.element,\n\n  /**\n   * Called when componentDidMount.\n   *\n   * @param {HTMLElement} node - Referred node.\n   */\n  innerRef: PropTypes.func\n} : {};"],"mappings":"AAAA,OAAOA,eAAe,MAAM,sCAAsC;AAClE,OAAOC,YAAY,MAAM,mCAAmC;AAC5D,OAAOC,0BAA0B,MAAM,iDAAiD;AACxF,OAAOC,SAAS,MAAM,gCAAgC;AACtD,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,WAAW,QAAQ,WAAW;AAEvC,SAASC,KAAK,QAAQ,gBAAgB;;AAEtC;AACA;AACA;AACA;;AAEA,IAAIC,GAAG,GAAG,UAAUC,UAAU,EAAE;EAC9BP,SAAS,CAACM,GAAG,EAAEC,UAAU,CAAC;EAE1B,SAASD,GAAGA,CAAA,EAAG;IACbT,eAAe,CAAC,IAAI,EAAES,GAAG,CAAC;IAE1B,OAAOP,0BAA0B,CAAC,IAAI,EAAE,CAACO,GAAG,CAACE,SAAS,IAAIC,MAAM,CAACC,cAAc,CAACJ,GAAG,CAAC,EAAEK,KAAK,CAAC,IAAI,EAAEC,SAAS,CAAC,CAAC;EAC/G;EAEAd,YAAY,CAACQ,GAAG,EAAE,CAAC;IACjBO,GAAG,EAAE,mBAAmB;IACxBC,KAAK,EAAE,SAASC,iBAAiBA,CAAA,EAAG;MAClC,IAAIC,QAAQ,GAAG,IAAI,CAACC,KAAK,CAACD,QAAQ;;MAElC;MACA;MACA;;MAEA,IAAIA,QAAQ,EAAEA,QAAQ,CAACZ,WAAW,CAAC,IAAI,CAAC,CAAC;IAC3C;EACF,CAAC,EAAE;IACDS,GAAG,EAAE,QAAQ;IACbC,KAAK,EAAE,SAASI,MAAMA,CAAA,EAAG;MACvB,IAAIC,QAAQ,GAAG,IAAI,CAACF,KAAK,CAACE,QAAQ;MAGlC,OAAOjB,QAAQ,CAACkB,IAAI,CAACD,QAAQ,CAAC;IAChC;EACF,CAAC,CAAC,CAAC;EAEH,OAAOb,GAAG;AACZ,CAAC,CAACH,SAAS,CAAC;AAEZG,GAAG,CAACe,KAAK,GAAG;EACVC,IAAI,EAAE,KAAK;EACXC,IAAI,EAAElB,KAAK,CAACmB;AACd,CAAC;AACDlB,GAAG,CAACmB,YAAY,GAAG,CAAC,UAAU,EAAE,UAAU,CAAC;AAC3C,eAAenB,GAAG;AAClBA,GAAG,CAACoB,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EACtD;EACAV,QAAQ,EAAElB,SAAS,CAAC6B,OAAO;EAE3B;AACF;AACA;AACA;AACA;EACEd,QAAQ,EAAEf,SAAS,CAAC8B;AACtB,CAAC,GAAG,CAAC,CAAC"},"metadata":{},"sourceType":"module"}