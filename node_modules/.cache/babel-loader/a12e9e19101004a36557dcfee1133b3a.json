{"ast":null,"code":"'use strict';\n\n/**\r\n * This file contains source code adapted from Snap.svg (licensed Apache-2.0).\r\n *\r\n * @see https://github.com/adobe-webplatform/Snap.svg/blob/master/src/path.js\r\n */\n\n/* eslint no-fallthrough: \"off\" */\nvar p2s = /,?([a-z]),?/gi,\n  toFloat = parseFloat,\n  math = Math,\n  PI = math.PI,\n  mmin = math.min,\n  mmax = math.max,\n  pow = math.pow,\n  abs = math.abs,\n  pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n  pathValues = /(-?\\d*\\.?\\d*(?:e[-+]?\\d+)?)[\\s]*,?[\\s]*/ig;\nvar isArray = Array.isArray || function (o) {\n  return o instanceof Array;\n};\nfunction hasProperty(obj, property) {\n  return Object.prototype.hasOwnProperty.call(obj, property);\n}\nfunction clone(obj) {\n  if (typeof obj == 'function' || Object(obj) !== obj) {\n    return obj;\n  }\n  var res = new obj.constructor();\n  for (var key in obj) {\n    if (hasProperty(obj, key)) {\n      res[key] = clone(obj[key]);\n    }\n  }\n  return res;\n}\nfunction repush(array, item) {\n  for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n    return array.push(array.splice(i, 1)[0]);\n  }\n}\nfunction cacher(f) {\n  function newf() {\n    var arg = Array.prototype.slice.call(arguments, 0),\n      args = arg.join('\\u2400'),\n      cache = newf.cache = newf.cache || {},\n      count = newf.count = newf.count || [];\n    if (hasProperty(cache, args)) {\n      repush(count, args);\n      return cache[args];\n    }\n    count.length >= 1e3 && delete cache[count.shift()];\n    count.push(args);\n    cache[args] = f.apply(0, arg);\n    return cache[args];\n  }\n  return newf;\n}\nfunction parsePathString(pathString) {\n  if (!pathString) {\n    return null;\n  }\n  var pth = paths(pathString);\n  if (pth.arr) {\n    return clone(pth.arr);\n  }\n  var paramCounts = {\n      a: 7,\n      c: 6,\n      h: 1,\n      l: 2,\n      m: 2,\n      q: 4,\n      s: 4,\n      t: 2,\n      v: 1,\n      z: 0\n    },\n    data = [];\n  if (isArray(pathString) && isArray(pathString[0])) {\n    // rough assumption\n    data = clone(pathString);\n  }\n  if (!data.length) {\n    String(pathString).replace(pathCommand, function (a, b, c) {\n      var params = [],\n        name = b.toLowerCase();\n      c.replace(pathValues, function (a, b) {\n        b && params.push(+b);\n      });\n      if (name == 'm' && params.length > 2) {\n        data.push([b].concat(params.splice(0, 2)));\n        name = 'l';\n        b = b == 'm' ? 'l' : 'L';\n      }\n      while (params.length >= paramCounts[name]) {\n        data.push([b].concat(params.splice(0, paramCounts[name])));\n        if (!paramCounts[name]) {\n          break;\n        }\n      }\n    });\n  }\n  data.toString = paths.toString;\n  pth.arr = clone(data);\n  return data;\n}\nfunction paths(ps) {\n  var p = paths.ps = paths.ps || {};\n  if (p[ps]) {\n    p[ps].sleep = 100;\n  } else {\n    p[ps] = {\n      sleep: 100\n    };\n  }\n  setTimeout(function () {\n    for (var key in p) {\n      if (hasProperty(p, key) && key != ps) {\n        p[key].sleep--;\n        !p[key].sleep && delete p[key];\n      }\n    }\n  });\n  return p[ps];\n}\nfunction rectBBox(x, y, width, height) {\n  if (arguments.length === 1) {\n    y = x.y;\n    width = x.width;\n    height = x.height;\n    x = x.x;\n  }\n  return {\n    x: x,\n    y: y,\n    width: width,\n    height: height,\n    x2: x + width,\n    y2: y + height\n  };\n}\nfunction pathToString() {\n  return this.join(',').replace(p2s, '$1');\n}\nfunction pathClone(pathArray) {\n  var res = clone(pathArray);\n  res.toString = pathToString;\n  return res;\n}\nfunction findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n  var t1 = 1 - t,\n    t13 = pow(t1, 3),\n    t12 = pow(t1, 2),\n    t2 = t * t,\n    t3 = t2 * t,\n    x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n    y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y;\n  return {\n    x: fixError(x),\n    y: fixError(y)\n  };\n}\nfunction bezierBBox(points) {\n  var bbox = curveBBox.apply(null, points);\n  return rectBBox(bbox.x0, bbox.y0, bbox.x1 - bbox.x0, bbox.y1 - bbox.y0);\n}\nfunction isPointInsideBBox(bbox, x, y) {\n  return x >= bbox.x && x <= bbox.x + bbox.width && y >= bbox.y && y <= bbox.y + bbox.height;\n}\nfunction isBBoxIntersect(bbox1, bbox2) {\n  bbox1 = rectBBox(bbox1);\n  bbox2 = rectBBox(bbox2);\n  return isPointInsideBBox(bbox2, bbox1.x, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y) || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2) || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y) || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2) || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2) || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x) && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n}\nfunction base3(t, p1, p2, p3, p4) {\n  var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n    t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n  return t * t2 - 3 * p1 + 3 * p2;\n}\nfunction bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n  if (z == null) {\n    z = 1;\n  }\n  z = z > 1 ? 1 : z < 0 ? 0 : z;\n  var z2 = z / 2,\n    n = 12,\n    Tvalues = [-.1252, .1252, -.3678, .3678, -.5873, .5873, -.7699, .7699, -.9041, .9041, -.9816, .9816],\n    Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472],\n    sum = 0;\n  for (var i = 0; i < n; i++) {\n    var ct = z2 * Tvalues[i] + z2,\n      xbase = base3(ct, x1, x2, x3, x4),\n      ybase = base3(ct, y1, y2, y3, y4),\n      comb = xbase * xbase + ybase * ybase;\n    sum += Cvalues[i] * math.sqrt(comb);\n  }\n  return z2 * sum;\n}\nfunction intersectLines(x1, y1, x2, y2, x3, y3, x4, y4) {\n  if (mmax(x1, x2) < mmin(x3, x4) || mmin(x1, x2) > mmax(x3, x4) || mmax(y1, y2) < mmin(y3, y4) || mmin(y1, y2) > mmax(y3, y4)) {\n    return;\n  }\n  var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n    ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n    denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n  if (!denominator) {\n    return;\n  }\n  var px = fixError(nx / denominator),\n    py = fixError(ny / denominator),\n    px2 = +px.toFixed(2),\n    py2 = +py.toFixed(2);\n  if (px2 < +mmin(x1, x2).toFixed(2) || px2 > +mmax(x1, x2).toFixed(2) || px2 < +mmin(x3, x4).toFixed(2) || px2 > +mmax(x3, x4).toFixed(2) || py2 < +mmin(y1, y2).toFixed(2) || py2 > +mmax(y1, y2).toFixed(2) || py2 < +mmin(y3, y4).toFixed(2) || py2 > +mmax(y3, y4).toFixed(2)) {\n    return;\n  }\n  return {\n    x: px,\n    y: py\n  };\n}\nfunction fixError(number) {\n  return Math.round(number * 100000000000) / 100000000000;\n}\nfunction findBezierIntersections(bez1, bez2, justCount) {\n  var bbox1 = bezierBBox(bez1),\n    bbox2 = bezierBBox(bez2);\n  if (!isBBoxIntersect(bbox1, bbox2)) {\n    return justCount ? 0 : [];\n  }\n\n  // As an optimization, lines will have only 1 segment\n\n  var l1 = bezlen.apply(0, bez1),\n    l2 = bezlen.apply(0, bez2),\n    n1 = isLine(bez1) ? 1 : ~~(l1 / 5) || 1,\n    n2 = isLine(bez2) ? 1 : ~~(l2 / 5) || 1,\n    dots1 = [],\n    dots2 = [],\n    xy = {},\n    res = justCount ? 0 : [];\n  for (var i = 0; i < n1 + 1; i++) {\n    var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n    dots1.push({\n      x: p.x,\n      y: p.y,\n      t: i / n1\n    });\n  }\n  for (i = 0; i < n2 + 1; i++) {\n    p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n    dots2.push({\n      x: p.x,\n      y: p.y,\n      t: i / n2\n    });\n  }\n  for (i = 0; i < n1; i++) {\n    for (var j = 0; j < n2; j++) {\n      var di = dots1[i],\n        di1 = dots1[i + 1],\n        dj = dots2[j],\n        dj1 = dots2[j + 1],\n        ci = abs(di1.x - di.x) < .01 ? 'y' : 'x',\n        cj = abs(dj1.x - dj.x) < .01 ? 'y' : 'x',\n        is = intersectLines(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y),\n        key;\n      if (is) {\n        key = is.x.toFixed(9) + '#' + is.y.toFixed(9);\n        if (xy[key]) {\n          continue;\n        }\n        xy[key] = true;\n        var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n          t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n        if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n          if (justCount) {\n            res++;\n          } else {\n            res.push({\n              x: is.x,\n              y: is.y,\n              t1: t1,\n              t2: t2\n            });\n          }\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\r\n * Find or counts the intersections between two SVG paths.\r\n *\r\n * Returns a number in counting mode and a list of intersections otherwise.\r\n *\r\n * A single intersection entry contains the intersection coordinates (x, y)\r\n * as well as additional information regarding the intersecting segments\r\n * on each path (segment1, segment2) and the relative location of the\r\n * intersection on these segments (t1, t2).\r\n *\r\n * The path may be an SVG path string or a list of path components\r\n * such as `[ [ 'M', 0, 10 ], [ 'L', 20, 0 ] ]`.\r\n *\r\n * @example\r\n *\r\n * var intersections = findPathIntersections(\r\n *   'M0,0L100,100',\r\n *   [ [ 'M', 0, 100 ], [ 'L', 100, 0 ] ]\r\n * );\r\n *\r\n * // intersections = [\r\n * //   { x: 50, y: 50, segment1: 1, segment2: 1, t1: 0.5, t2: 0.5 }\r\n * // ]\r\n *\r\n * @param {String|Array<PathDef>} path1\r\n * @param {String|Array<PathDef>} path2\r\n * @param {Boolean} [justCount=false]\r\n *\r\n * @return {Array<Intersection>|Number}\r\n */\nfunction findPathIntersections(path1, path2, justCount) {\n  path1 = pathToCurve(path1);\n  path2 = pathToCurve(path2);\n  var x1,\n    y1,\n    x2,\n    y2,\n    x1m,\n    y1m,\n    x2m,\n    y2m,\n    bez1,\n    bez2,\n    res = justCount ? 0 : [];\n  for (var i = 0, ii = path1.length; i < ii; i++) {\n    var pi = path1[i];\n    if (pi[0] == 'M') {\n      x1 = x1m = pi[1];\n      y1 = y1m = pi[2];\n    } else {\n      if (pi[0] == 'C') {\n        bez1 = [x1, y1].concat(pi.slice(1));\n        x1 = bez1[6];\n        y1 = bez1[7];\n      } else {\n        bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n        x1 = x1m;\n        y1 = y1m;\n      }\n      for (var j = 0, jj = path2.length; j < jj; j++) {\n        var pj = path2[j];\n        if (pj[0] == 'M') {\n          x2 = x2m = pj[1];\n          y2 = y2m = pj[2];\n        } else {\n          if (pj[0] == 'C') {\n            bez2 = [x2, y2].concat(pj.slice(1));\n            x2 = bez2[6];\n            y2 = bez2[7];\n          } else {\n            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n            x2 = x2m;\n            y2 = y2m;\n          }\n          var intr = findBezierIntersections(bez1, bez2, justCount);\n          if (justCount) {\n            res += intr;\n          } else {\n            for (var k = 0, kk = intr.length; k < kk; k++) {\n              intr[k].segment1 = i;\n              intr[k].segment2 = j;\n              intr[k].bez1 = bez1;\n              intr[k].bez2 = bez2;\n            }\n            res = res.concat(intr);\n          }\n        }\n      }\n    }\n  }\n  return res;\n}\nfunction pathToAbsolute(pathArray) {\n  var pth = paths(pathArray);\n  if (pth.abs) {\n    return pathClone(pth.abs);\n  }\n  if (!isArray(pathArray) || !isArray(pathArray && pathArray[0])) {\n    // rough assumption\n    pathArray = parsePathString(pathArray);\n  }\n  if (!pathArray || !pathArray.length) {\n    return [['M', 0, 0]];\n  }\n  var res = [],\n    x = 0,\n    y = 0,\n    mx = 0,\n    my = 0,\n    start = 0,\n    pa0;\n  if (pathArray[0][0] == 'M') {\n    x = +pathArray[0][1];\n    y = +pathArray[0][2];\n    mx = x;\n    my = y;\n    start++;\n    res[0] = ['M', x, y];\n  }\n  for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n    res.push(r = []);\n    pa = pathArray[i];\n    pa0 = pa[0];\n    if (pa0 != pa0.toUpperCase()) {\n      r[0] = pa0.toUpperCase();\n      switch (r[0]) {\n        case 'A':\n          r[1] = pa[1];\n          r[2] = pa[2];\n          r[3] = pa[3];\n          r[4] = pa[4];\n          r[5] = pa[5];\n          r[6] = +pa[6] + x;\n          r[7] = +pa[7] + y;\n          break;\n        case 'V':\n          r[1] = +pa[1] + y;\n          break;\n        case 'H':\n          r[1] = +pa[1] + x;\n          break;\n        case 'M':\n          mx = +pa[1] + x;\n          my = +pa[2] + y;\n        default:\n          for (var j = 1, jj = pa.length; j < jj; j++) {\n            r[j] = +pa[j] + (j % 2 ? x : y);\n          }\n      }\n    } else {\n      for (var k = 0, kk = pa.length; k < kk; k++) {\n        r[k] = pa[k];\n      }\n    }\n    pa0 = pa0.toUpperCase();\n    switch (r[0]) {\n      case 'Z':\n        x = +mx;\n        y = +my;\n        break;\n      case 'H':\n        x = r[1];\n        break;\n      case 'V':\n        y = r[1];\n        break;\n      case 'M':\n        mx = r[r.length - 2];\n        my = r[r.length - 1];\n      default:\n        x = r[r.length - 2];\n        y = r[r.length - 1];\n    }\n  }\n  res.toString = pathToString;\n  pth.abs = pathClone(res);\n  return res;\n}\nfunction isLine(bez) {\n  return bez[0] === bez[2] && bez[1] === bez[3] && bez[4] === bez[6] && bez[5] === bez[7];\n}\nfunction lineToCurve(x1, y1, x2, y2) {\n  return [x1, y1, x2, y2, x2, y2];\n}\nfunction qubicToCurve(x1, y1, ax, ay, x2, y2) {\n  var _13 = 1 / 3,\n    _23 = 2 / 3;\n  return [_13 * x1 + _23 * ax, _13 * y1 + _23 * ay, _13 * x2 + _23 * ax, _13 * y2 + _23 * ay, x2, y2];\n}\nfunction arcToCurve(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n  // for more information of where this math came from visit:\n  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n  var _120 = PI * 120 / 180,\n    rad = PI / 180 * (+angle || 0),\n    res = [],\n    xy,\n    rotate = cacher(function (x, y, rad) {\n      var X = x * math.cos(rad) - y * math.sin(rad),\n        Y = x * math.sin(rad) + y * math.cos(rad);\n      return {\n        x: X,\n        y: Y\n      };\n    });\n  if (!recursive) {\n    xy = rotate(x1, y1, -rad);\n    x1 = xy.x;\n    y1 = xy.y;\n    xy = rotate(x2, y2, -rad);\n    x2 = xy.x;\n    y2 = xy.y;\n    var x = (x1 - x2) / 2,\n      y = (y1 - y2) / 2;\n    var h = x * x / (rx * rx) + y * y / (ry * ry);\n    if (h > 1) {\n      h = math.sqrt(h);\n      rx = h * rx;\n      ry = h * ry;\n    }\n    var rx2 = rx * rx,\n      ry2 = ry * ry,\n      k = (large_arc_flag == sweep_flag ? -1 : 1) * math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n      cx = k * rx * y / ry + (x1 + x2) / 2,\n      cy = k * -ry * x / rx + (y1 + y2) / 2,\n      f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n      f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n    f1 = x1 < cx ? PI - f1 : f1;\n    f2 = x2 < cx ? PI - f2 : f2;\n    f1 < 0 && (f1 = PI * 2 + f1);\n    f2 < 0 && (f2 = PI * 2 + f2);\n    if (sweep_flag && f1 > f2) {\n      f1 = f1 - PI * 2;\n    }\n    if (!sweep_flag && f2 > f1) {\n      f2 = f2 - PI * 2;\n    }\n  } else {\n    f1 = recursive[0];\n    f2 = recursive[1];\n    cx = recursive[2];\n    cy = recursive[3];\n  }\n  var df = f2 - f1;\n  if (abs(df) > _120) {\n    var f2old = f2,\n      x2old = x2,\n      y2old = y2;\n    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n    x2 = cx + rx * math.cos(f2);\n    y2 = cy + ry * math.sin(f2);\n    res = arcToCurve(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n  }\n  df = f2 - f1;\n  var c1 = math.cos(f1),\n    s1 = math.sin(f1),\n    c2 = math.cos(f2),\n    s2 = math.sin(f2),\n    t = math.tan(df / 4),\n    hx = 4 / 3 * rx * t,\n    hy = 4 / 3 * ry * t,\n    m1 = [x1, y1],\n    m2 = [x1 + hx * s1, y1 - hy * c1],\n    m3 = [x2 + hx * s2, y2 - hy * c2],\n    m4 = [x2, y2];\n  m2[0] = 2 * m1[0] - m2[0];\n  m2[1] = 2 * m1[1] - m2[1];\n  if (recursive) {\n    return [m2, m3, m4].concat(res);\n  } else {\n    res = [m2, m3, m4].concat(res).join().split(',');\n    var newres = [];\n    for (var i = 0, ii = res.length; i < ii; i++) {\n      newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n    }\n    return newres;\n  }\n}\n\n// Returns bounding box of cubic bezier curve.\n// Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n// Original version: NISHIO Hirokazu\n// Modifications: https://github.com/timo22345\nfunction curveBBox(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var tvalues = [],\n    bounds = [[], []],\n    a,\n    b,\n    c,\n    t,\n    t1,\n    t2,\n    b2ac,\n    sqrtb2ac;\n  for (var i = 0; i < 2; ++i) {\n    if (i == 0) {\n      b = 6 * x0 - 12 * x1 + 6 * x2;\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n      c = 3 * x1 - 3 * x0;\n    } else {\n      b = 6 * y0 - 12 * y1 + 6 * y2;\n      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n      c = 3 * y1 - 3 * y0;\n    }\n    if (abs(a) < 1e-12) {\n      if (abs(b) < 1e-12) {\n        continue;\n      }\n      t = -c / b;\n      if (0 < t && t < 1) {\n        tvalues.push(t);\n      }\n      continue;\n    }\n    b2ac = b * b - 4 * c * a;\n    sqrtb2ac = math.sqrt(b2ac);\n    if (b2ac < 0) {\n      continue;\n    }\n    t1 = (-b + sqrtb2ac) / (2 * a);\n    if (0 < t1 && t1 < 1) {\n      tvalues.push(t1);\n    }\n    t2 = (-b - sqrtb2ac) / (2 * a);\n    if (0 < t2 && t2 < 1) {\n      tvalues.push(t2);\n    }\n  }\n  var j = tvalues.length,\n    jlen = j,\n    mt;\n  while (j--) {\n    t = tvalues[j];\n    mt = 1 - t;\n    bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n    bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n  }\n  bounds[0][jlen] = x0;\n  bounds[1][jlen] = y0;\n  bounds[0][jlen + 1] = x3;\n  bounds[1][jlen + 1] = y3;\n  bounds[0].length = bounds[1].length = jlen + 2;\n  return {\n    x0: mmin.apply(0, bounds[0]),\n    y0: mmin.apply(0, bounds[1]),\n    x1: mmax.apply(0, bounds[0]),\n    y1: mmax.apply(0, bounds[1])\n  };\n}\nfunction pathToCurve(path) {\n  var pth = paths(path);\n\n  // return cached curve, if existing\n  if (pth.curve) {\n    return pathClone(pth.curve);\n  }\n  var curvedPath = pathToAbsolute(path),\n    attrs = {\n      x: 0,\n      y: 0,\n      bx: 0,\n      by: 0,\n      X: 0,\n      Y: 0,\n      qx: null,\n      qy: null\n    },\n    processPath = function (path, d, pathCommand) {\n      var nx, ny;\n      if (!path) {\n        return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\n      }\n      !(path[0] in {\n        T: 1,\n        Q: 1\n      }) && (d.qx = d.qy = null);\n      switch (path[0]) {\n        case 'M':\n          d.X = path[1];\n          d.Y = path[2];\n          break;\n        case 'A':\n          path = ['C'].concat(arcToCurve.apply(0, [d.x, d.y].concat(path.slice(1))));\n          break;\n        case 'S':\n          if (pathCommand == 'C' || pathCommand == 'S') {\n            // In 'S' case we have to take into account, if the previous command is C/S.\n            nx = d.x * 2 - d.bx;\n\n            // And reflect the previous\n            ny = d.y * 2 - d.by;\n\n            // command's control point relative to the current point.\n          } else {\n            // or some else or nothing\n            nx = d.x;\n            ny = d.y;\n          }\n          path = ['C', nx, ny].concat(path.slice(1));\n          break;\n        case 'T':\n          if (pathCommand == 'Q' || pathCommand == 'T') {\n            // In 'T' case we have to take into account, if the previous command is Q/T.\n            d.qx = d.x * 2 - d.qx;\n\n            // And make a reflection similar\n            d.qy = d.y * 2 - d.qy;\n\n            // to case 'S'.\n          } else {\n            // or something else or nothing\n            d.qx = d.x;\n            d.qy = d.y;\n          }\n          path = ['C'].concat(qubicToCurve(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n          break;\n        case 'Q':\n          d.qx = path[1];\n          d.qy = path[2];\n          path = ['C'].concat(qubicToCurve(d.x, d.y, path[1], path[2], path[3], path[4]));\n          break;\n        case 'L':\n          path = ['C'].concat(lineToCurve(d.x, d.y, path[1], path[2]));\n          break;\n        case 'H':\n          path = ['C'].concat(lineToCurve(d.x, d.y, path[1], d.y));\n          break;\n        case 'V':\n          path = ['C'].concat(lineToCurve(d.x, d.y, d.x, path[1]));\n          break;\n        case 'Z':\n          path = ['C'].concat(lineToCurve(d.x, d.y, d.X, d.Y));\n          break;\n      }\n      return path;\n    },\n    fixArc = function (pp, i) {\n      if (pp[i].length > 7) {\n        pp[i].shift();\n        var pi = pp[i];\n        while (pi.length) {\n          pathCommands[i] = 'A'; // if created multiple C:s, their original seg is saved\n          pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\n        }\n        pp.splice(i, 1);\n        ii = curvedPath.length;\n      }\n    },\n    pathCommands = [],\n    // path commands of original path p\n    pfirst = '',\n    // temporary holder for original path command\n    pathCommand = ''; // holder for previous path command of original path\n\n  for (var i = 0, ii = curvedPath.length; i < ii; i++) {\n    curvedPath[i] && (pfirst = curvedPath[i][0]); // save current path command\n\n    if (pfirst != 'C')\n      // C is not saved yet, because it may be result of conversion\n      {\n        pathCommands[i] = pfirst; // Save current path command\n        i && (pathCommand = pathCommands[i - 1]); // Get previous path command pathCommand\n      }\n\n    curvedPath[i] = processPath(curvedPath[i], attrs, pathCommand); // Previous path command is inputted to processPath\n\n    if (pathCommands[i] != 'A' && pfirst == 'C') pathCommands[i] = 'C'; // A is the only command\n    // which may produce multiple C:s\n    // so we have to make sure that C is also C in original path\n\n    fixArc(curvedPath, i); // fixArc adds also the right amount of A:s to pathCommands\n\n    var seg = curvedPath[i],\n      seglen = seg.length;\n    attrs.x = seg[seglen - 2];\n    attrs.y = seg[seglen - 1];\n    attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n    attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n  }\n\n  // cache curve\n  pth.curve = pathClone(curvedPath);\n  return curvedPath;\n}\nmodule.exports = findPathIntersections;","map":{"version":3,"names":["p2s","toFloat","parseFloat","math","Math","PI","mmin","min","mmax","max","pow","abs","pathCommand","pathValues","isArray","Array","o","hasProperty","obj","property","Object","prototype","hasOwnProperty","call","clone","res","constructor","key","repush","array","item","i","ii","length","push","splice","cacher","f","newf","arg","slice","arguments","args","join","cache","count","shift","apply","parsePathString","pathString","pth","paths","arr","paramCounts","a","c","h","l","m","q","s","t","v","z","data","String","replace","b","params","name","toLowerCase","concat","toString","ps","p","sleep","setTimeout","rectBBox","x","y","width","height","x2","y2","pathToString","pathClone","pathArray","findDotsAtSegment","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","t1","t13","t12","t2","t3","fixError","bezierBBox","points","bbox","curveBBox","x0","y0","x1","y1","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","bezlen","x3","y3","x4","y4","z2","n","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","sqrt","intersectLines","nx","ny","denominator","px","py","px2","toFixed","py2","number","round","findBezierIntersections","bez1","bez2","justCount","l1","l2","n1","isLine","n2","dots1","dots2","xy","j","di","di1","dj","dj1","ci","cj","is","findPathIntersections","path1","path2","pathToCurve","x1m","y1m","x2m","y2m","pi","jj","pj","intr","k","kk","segment1","segment2","pathToAbsolute","mx","my","start","pa0","r","pa","toUpperCase","bez","lineToCurve","qubicToCurve","ax","ay","_13","_23","arcToCurve","rx","ry","angle","large_arc_flag","sweep_flag","recursive","_120","rad","rotate","X","cos","sin","Y","rx2","ry2","cx","cy","f1","asin","f2","df","f2old","x2old","y2old","c1","s1","c2","s2","tan","hx","hy","m1","m2","m3","m4","split","newres","tvalues","bounds","b2ac","sqrtb2ac","jlen","mt","path","curve","curvedPath","attrs","bx","by","qx","qy","processPath","d","T","Q","fixArc","pp","pathCommands","pfirst","seg","seglen","module","exports"],"sources":["C:/Users/sam/final/camunda-react/node_modules/path-intersection/intersect.js"],"sourcesContent":["'use strict';\r\n\r\n/**\r\n * This file contains source code adapted from Snap.svg (licensed Apache-2.0).\r\n *\r\n * @see https://github.com/adobe-webplatform/Snap.svg/blob/master/src/path.js\r\n */\r\n\r\n/* eslint no-fallthrough: \"off\" */\r\n\r\nvar p2s = /,?([a-z]),?/gi,\r\n    toFloat = parseFloat,\r\n    math = Math,\r\n    PI = math.PI,\r\n    mmin = math.min,\r\n    mmax = math.max,\r\n    pow = math.pow,\r\n    abs = math.abs,\r\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\r\n    pathValues = /(-?\\d*\\.?\\d*(?:e[-+]?\\d+)?)[\\s]*,?[\\s]*/ig;\r\n\r\nvar isArray = Array.isArray || function(o) { return o instanceof Array; };\r\n\r\nfunction hasProperty(obj, property) {\r\n  return Object.prototype.hasOwnProperty.call(obj, property);\r\n}\r\n\r\nfunction clone(obj) {\r\n\r\n  if (typeof obj == 'function' || Object(obj) !== obj) {\r\n    return obj;\r\n  }\r\n\r\n  var res = new obj.constructor;\r\n\r\n  for (var key in obj) {\r\n    if (hasProperty(obj, key)) {\r\n      res[key] = clone(obj[key]);\r\n    }\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\nfunction repush(array, item) {\r\n  for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\r\n    return array.push(array.splice(i, 1)[0]);\r\n  }\r\n}\r\n\r\nfunction cacher(f) {\r\n\r\n  function newf() {\r\n\r\n    var arg = Array.prototype.slice.call(arguments, 0),\r\n        args = arg.join('\\u2400'),\r\n        cache = newf.cache = newf.cache || {},\r\n        count = newf.count = newf.count || [];\r\n\r\n    if (hasProperty(cache, args)) {\r\n      repush(count, args);\r\n      return cache[args];\r\n    }\r\n\r\n    count.length >= 1e3 && delete cache[count.shift()];\r\n    count.push(args);\r\n    cache[args] = f.apply(0, arg);\r\n\r\n    return cache[args];\r\n  }\r\n  return newf;\r\n}\r\n\r\nfunction parsePathString(pathString) {\r\n\r\n  if (!pathString) {\r\n    return null;\r\n  }\r\n\r\n  var pth = paths(pathString);\r\n\r\n  if (pth.arr) {\r\n    return clone(pth.arr);\r\n  }\r\n\r\n  var paramCounts = { a: 7, c: 6, h: 1, l: 2, m: 2, q: 4, s: 4, t: 2, v: 1, z: 0 },\r\n      data = [];\r\n\r\n  if (isArray(pathString) && isArray(pathString[0])) { // rough assumption\r\n    data = clone(pathString);\r\n  }\r\n\r\n  if (!data.length) {\r\n\r\n    String(pathString).replace(pathCommand, function(a, b, c) {\r\n      var params = [],\r\n          name = b.toLowerCase();\r\n\r\n      c.replace(pathValues, function(a, b) {\r\n        b && params.push(+b);\r\n      });\r\n\r\n      if (name == 'm' && params.length > 2) {\r\n        data.push([b].concat(params.splice(0, 2)));\r\n        name = 'l';\r\n        b = b == 'm' ? 'l' : 'L';\r\n      }\r\n\r\n      while (params.length >= paramCounts[name]) {\r\n        data.push([b].concat(params.splice(0, paramCounts[name])));\r\n        if (!paramCounts[name]) {\r\n          break;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  data.toString = paths.toString;\r\n  pth.arr = clone(data);\r\n\r\n  return data;\r\n}\r\n\r\nfunction paths(ps) {\r\n  var p = paths.ps = paths.ps || {};\r\n\r\n  if (p[ps]) {\r\n    p[ps].sleep = 100;\r\n  } else {\r\n    p[ps] = {\r\n      sleep: 100\r\n    };\r\n  }\r\n\r\n  setTimeout(function() {\r\n    for (var key in p) {\r\n      if (hasProperty(p, key) && key != ps) {\r\n        p[key].sleep--;\r\n        !p[key].sleep && delete p[key];\r\n      }\r\n    }\r\n  });\r\n\r\n  return p[ps];\r\n}\r\n\r\nfunction rectBBox(x, y, width, height) {\r\n\r\n  if (arguments.length === 1) {\r\n    y = x.y;\r\n    width = x.width;\r\n    height = x.height;\r\n    x = x.x;\r\n  }\r\n\r\n  return {\r\n    x: x,\r\n    y: y,\r\n    width: width,\r\n    height: height,\r\n    x2: x + width,\r\n    y2: y + height\r\n  };\r\n}\r\n\r\nfunction pathToString() {\r\n  return this.join(',').replace(p2s, '$1');\r\n}\r\n\r\nfunction pathClone(pathArray) {\r\n  var res = clone(pathArray);\r\n  res.toString = pathToString;\r\n  return res;\r\n}\r\n\r\nfunction findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\r\n  var t1 = 1 - t,\r\n      t13 = pow(t1, 3),\r\n      t12 = pow(t1, 2),\r\n      t2 = t * t,\r\n      t3 = t2 * t,\r\n      x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\r\n      y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y;\r\n\r\n  return {\r\n    x: fixError(x),\r\n    y: fixError(y)\r\n  };\r\n}\r\n\r\nfunction bezierBBox(points) {\r\n\r\n  var bbox = curveBBox.apply(null, points);\r\n\r\n  return rectBBox(\r\n    bbox.x0,\r\n    bbox.y0,\r\n    bbox.x1 - bbox.x0,\r\n    bbox.y1 - bbox.y0\r\n  );\r\n}\r\n\r\nfunction isPointInsideBBox(bbox, x, y) {\r\n  return x >= bbox.x &&\r\n    x <= bbox.x + bbox.width &&\r\n    y >= bbox.y &&\r\n    y <= bbox.y + bbox.height;\r\n}\r\n\r\nfunction isBBoxIntersect(bbox1, bbox2) {\r\n  bbox1 = rectBBox(bbox1);\r\n  bbox2 = rectBBox(bbox2);\r\n  return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\r\n    || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\r\n    || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\r\n    || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\r\n    || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\r\n    || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\r\n    || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\r\n    || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\r\n    || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\r\n        || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\r\n    && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\r\n        || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\r\n}\r\n\r\nfunction base3(t, p1, p2, p3, p4) {\r\n  var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\r\n      t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\r\n  return t * t2 - 3 * p1 + 3 * p2;\r\n}\r\n\r\nfunction bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\r\n\r\n  if (z == null) {\r\n    z = 1;\r\n  }\r\n\r\n  z = z > 1 ? 1 : z < 0 ? 0 : z;\r\n\r\n  var z2 = z / 2,\r\n      n = 12,\r\n      Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\r\n      Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\r\n      sum = 0;\r\n\r\n  for (var i = 0; i < n; i++) {\r\n    var ct = z2 * Tvalues[i] + z2,\r\n        xbase = base3(ct, x1, x2, x3, x4),\r\n        ybase = base3(ct, y1, y2, y3, y4),\r\n        comb = xbase * xbase + ybase * ybase;\r\n\r\n    sum += Cvalues[i] * math.sqrt(comb);\r\n  }\r\n\r\n  return z2 * sum;\r\n}\r\n\r\n\r\nfunction intersectLines(x1, y1, x2, y2, x3, y3, x4, y4) {\r\n\r\n  if (\r\n    mmax(x1, x2) < mmin(x3, x4) ||\r\n      mmin(x1, x2) > mmax(x3, x4) ||\r\n      mmax(y1, y2) < mmin(y3, y4) ||\r\n      mmin(y1, y2) > mmax(y3, y4)\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\r\n      ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\r\n      denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\r\n\r\n  if (!denominator) {\r\n    return;\r\n  }\r\n\r\n  var px = fixError(nx / denominator),\r\n      py = fixError(ny / denominator),\r\n      px2 = +px.toFixed(2),\r\n      py2 = +py.toFixed(2);\r\n\r\n  if (\r\n    px2 < +mmin(x1, x2).toFixed(2) ||\r\n      px2 > +mmax(x1, x2).toFixed(2) ||\r\n      px2 < +mmin(x3, x4).toFixed(2) ||\r\n      px2 > +mmax(x3, x4).toFixed(2) ||\r\n      py2 < +mmin(y1, y2).toFixed(2) ||\r\n      py2 > +mmax(y1, y2).toFixed(2) ||\r\n      py2 < +mmin(y3, y4).toFixed(2) ||\r\n      py2 > +mmax(y3, y4).toFixed(2)\r\n  ) {\r\n    return;\r\n  }\r\n\r\n  return { x: px, y: py };\r\n}\r\n\r\nfunction fixError(number) {\r\n  return Math.round(number * 100000000000) / 100000000000;\r\n}\r\n\r\nfunction findBezierIntersections(bez1, bez2, justCount) {\r\n  var bbox1 = bezierBBox(bez1),\r\n      bbox2 = bezierBBox(bez2);\r\n\r\n  if (!isBBoxIntersect(bbox1, bbox2)) {\r\n    return justCount ? 0 : [];\r\n  }\r\n\r\n  // As an optimization, lines will have only 1 segment\r\n\r\n  var l1 = bezlen.apply(0, bez1),\r\n      l2 = bezlen.apply(0, bez2),\r\n      n1 = isLine(bez1) ? 1 : ~~(l1 / 5) || 1,\r\n      n2 = isLine(bez2) ? 1 : ~~(l2 / 5) || 1,\r\n      dots1 = [],\r\n      dots2 = [],\r\n      xy = {},\r\n      res = justCount ? 0 : [];\r\n\r\n  for (var i = 0; i < n1 + 1; i++) {\r\n    var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\r\n    dots1.push({ x: p.x, y: p.y, t: i / n1 });\r\n  }\r\n\r\n  for (i = 0; i < n2 + 1; i++) {\r\n    p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\r\n    dots2.push({ x: p.x, y: p.y, t: i / n2 });\r\n  }\r\n\r\n  for (i = 0; i < n1; i++) {\r\n\r\n    for (var j = 0; j < n2; j++) {\r\n      var di = dots1[i],\r\n          di1 = dots1[i + 1],\r\n          dj = dots2[j],\r\n          dj1 = dots2[j + 1],\r\n          ci = abs(di1.x - di.x) < .01 ? 'y' : 'x',\r\n          cj = abs(dj1.x - dj.x) < .01 ? 'y' : 'x',\r\n          is = intersectLines(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y),\r\n          key;\r\n\r\n      if (is) {\r\n        key = is.x.toFixed(9) + '#' + is.y.toFixed(9);\r\n\r\n        if (xy[key]) {\r\n          continue;\r\n        }\r\n\r\n        xy[key] = true;\r\n\r\n        var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\r\n            t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\r\n\r\n        if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\r\n\r\n          if (justCount) {\r\n            res++;\r\n          } else {\r\n            res.push({\r\n              x: is.x,\r\n              y: is.y,\r\n              t1: t1,\r\n              t2: t2\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\n\r\n/**\r\n * Find or counts the intersections between two SVG paths.\r\n *\r\n * Returns a number in counting mode and a list of intersections otherwise.\r\n *\r\n * A single intersection entry contains the intersection coordinates (x, y)\r\n * as well as additional information regarding the intersecting segments\r\n * on each path (segment1, segment2) and the relative location of the\r\n * intersection on these segments (t1, t2).\r\n *\r\n * The path may be an SVG path string or a list of path components\r\n * such as `[ [ 'M', 0, 10 ], [ 'L', 20, 0 ] ]`.\r\n *\r\n * @example\r\n *\r\n * var intersections = findPathIntersections(\r\n *   'M0,0L100,100',\r\n *   [ [ 'M', 0, 100 ], [ 'L', 100, 0 ] ]\r\n * );\r\n *\r\n * // intersections = [\r\n * //   { x: 50, y: 50, segment1: 1, segment2: 1, t1: 0.5, t2: 0.5 }\r\n * // ]\r\n *\r\n * @param {String|Array<PathDef>} path1\r\n * @param {String|Array<PathDef>} path2\r\n * @param {Boolean} [justCount=false]\r\n *\r\n * @return {Array<Intersection>|Number}\r\n */\r\nfunction findPathIntersections(path1, path2, justCount) {\r\n  path1 = pathToCurve(path1);\r\n  path2 = pathToCurve(path2);\r\n\r\n  var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\r\n      res = justCount ? 0 : [];\r\n\r\n  for (var i = 0, ii = path1.length; i < ii; i++) {\r\n    var pi = path1[i];\r\n\r\n    if (pi[0] == 'M') {\r\n      x1 = x1m = pi[1];\r\n      y1 = y1m = pi[2];\r\n    } else {\r\n\r\n      if (pi[0] == 'C') {\r\n        bez1 = [x1, y1].concat(pi.slice(1));\r\n        x1 = bez1[6];\r\n        y1 = bez1[7];\r\n      } else {\r\n        bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\r\n        x1 = x1m;\r\n        y1 = y1m;\r\n      }\r\n\r\n      for (var j = 0, jj = path2.length; j < jj; j++) {\r\n        var pj = path2[j];\r\n\r\n        if (pj[0] == 'M') {\r\n          x2 = x2m = pj[1];\r\n          y2 = y2m = pj[2];\r\n        } else {\r\n\r\n          if (pj[0] == 'C') {\r\n            bez2 = [x2, y2].concat(pj.slice(1));\r\n            x2 = bez2[6];\r\n            y2 = bez2[7];\r\n          } else {\r\n            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\r\n            x2 = x2m;\r\n            y2 = y2m;\r\n          }\r\n\r\n          var intr = findBezierIntersections(bez1, bez2, justCount);\r\n\r\n          if (justCount) {\r\n            res += intr;\r\n          } else {\r\n\r\n            for (var k = 0, kk = intr.length; k < kk; k++) {\r\n              intr[k].segment1 = i;\r\n              intr[k].segment2 = j;\r\n              intr[k].bez1 = bez1;\r\n              intr[k].bez2 = bez2;\r\n            }\r\n\r\n            res = res.concat(intr);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return res;\r\n}\r\n\r\n\r\nfunction pathToAbsolute(pathArray) {\r\n  var pth = paths(pathArray);\r\n\r\n  if (pth.abs) {\r\n    return pathClone(pth.abs);\r\n  }\r\n\r\n  if (!isArray(pathArray) || !isArray(pathArray && pathArray[0])) { // rough assumption\r\n    pathArray = parsePathString(pathArray);\r\n  }\r\n\r\n  if (!pathArray || !pathArray.length) {\r\n    return [['M', 0, 0]];\r\n  }\r\n\r\n  var res = [],\r\n      x = 0,\r\n      y = 0,\r\n      mx = 0,\r\n      my = 0,\r\n      start = 0,\r\n      pa0;\r\n\r\n  if (pathArray[0][0] == 'M') {\r\n    x = +pathArray[0][1];\r\n    y = +pathArray[0][2];\r\n    mx = x;\r\n    my = y;\r\n    start++;\r\n    res[0] = ['M', x, y];\r\n  }\r\n\r\n  for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\r\n    res.push(r = []);\r\n    pa = pathArray[i];\r\n    pa0 = pa[0];\r\n\r\n    if (pa0 != pa0.toUpperCase()) {\r\n      r[0] = pa0.toUpperCase();\r\n\r\n      switch (r[0]) {\r\n      case 'A':\r\n        r[1] = pa[1];\r\n        r[2] = pa[2];\r\n        r[3] = pa[3];\r\n        r[4] = pa[4];\r\n        r[5] = pa[5];\r\n        r[6] = +pa[6] + x;\r\n        r[7] = +pa[7] + y;\r\n        break;\r\n      case 'V':\r\n        r[1] = +pa[1] + y;\r\n        break;\r\n      case 'H':\r\n        r[1] = +pa[1] + x;\r\n        break;\r\n      case 'M':\r\n        mx = +pa[1] + x;\r\n        my = +pa[2] + y;\r\n      default:\r\n        for (var j = 1, jj = pa.length; j < jj; j++) {\r\n          r[j] = +pa[j] + ((j % 2) ? x : y);\r\n        }\r\n      }\r\n    } else {\r\n      for (var k = 0, kk = pa.length; k < kk; k++) {\r\n        r[k] = pa[k];\r\n      }\r\n    }\r\n    pa0 = pa0.toUpperCase();\r\n\r\n    switch (r[0]) {\r\n    case 'Z':\r\n      x = +mx;\r\n      y = +my;\r\n      break;\r\n    case 'H':\r\n      x = r[1];\r\n      break;\r\n    case 'V':\r\n      y = r[1];\r\n      break;\r\n    case 'M':\r\n      mx = r[r.length - 2];\r\n      my = r[r.length - 1];\r\n    default:\r\n      x = r[r.length - 2];\r\n      y = r[r.length - 1];\r\n    }\r\n  }\r\n\r\n  res.toString = pathToString;\r\n  pth.abs = pathClone(res);\r\n\r\n  return res;\r\n}\r\n\r\nfunction isLine(bez) {\r\n  return (\r\n    bez[0] === bez[2] &&\r\n    bez[1] === bez[3] &&\r\n    bez[4] === bez[6] &&\r\n    bez[5] === bez[7]\r\n  );\r\n}\r\n\r\nfunction lineToCurve(x1, y1, x2, y2) {\r\n  return [\r\n    x1, y1, x2,\r\n    y2, x2, y2\r\n  ];\r\n}\r\n\r\nfunction qubicToCurve(x1, y1, ax, ay, x2, y2) {\r\n  var _13 = 1 / 3,\r\n      _23 = 2 / 3;\r\n\r\n  return [\r\n    _13 * x1 + _23 * ax,\r\n    _13 * y1 + _23 * ay,\r\n    _13 * x2 + _23 * ax,\r\n    _13 * y2 + _23 * ay,\r\n    x2,\r\n    y2\r\n  ];\r\n}\r\n\r\nfunction arcToCurve(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\r\n\r\n  // for more information of where this math came from visit:\r\n  // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\r\n  var _120 = PI * 120 / 180,\r\n      rad = PI / 180 * (+angle || 0),\r\n      res = [],\r\n      xy,\r\n      rotate = cacher(function(x, y, rad) {\r\n        var X = x * math.cos(rad) - y * math.sin(rad),\r\n            Y = x * math.sin(rad) + y * math.cos(rad);\r\n\r\n        return { x: X, y: Y };\r\n      });\r\n\r\n  if (!recursive) {\r\n    xy = rotate(x1, y1, -rad);\r\n    x1 = xy.x;\r\n    y1 = xy.y;\r\n    xy = rotate(x2, y2, -rad);\r\n    x2 = xy.x;\r\n    y2 = xy.y;\r\n\r\n    var x = (x1 - x2) / 2,\r\n        y = (y1 - y2) / 2;\r\n\r\n    var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\r\n\r\n    if (h > 1) {\r\n      h = math.sqrt(h);\r\n      rx = h * rx;\r\n      ry = h * ry;\r\n    }\r\n\r\n    var rx2 = rx * rx,\r\n        ry2 = ry * ry,\r\n        k = (large_arc_flag == sweep_flag ? -1 : 1) *\r\n            math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\r\n        cx = k * rx * y / ry + (x1 + x2) / 2,\r\n        cy = k * -ry * x / rx + (y1 + y2) / 2,\r\n        f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\r\n        f2 = math.asin(((y2 - cy) / ry).toFixed(9));\r\n\r\n    f1 = x1 < cx ? PI - f1 : f1;\r\n    f2 = x2 < cx ? PI - f2 : f2;\r\n    f1 < 0 && (f1 = PI * 2 + f1);\r\n    f2 < 0 && (f2 = PI * 2 + f2);\r\n\r\n    if (sweep_flag && f1 > f2) {\r\n      f1 = f1 - PI * 2;\r\n    }\r\n    if (!sweep_flag && f2 > f1) {\r\n      f2 = f2 - PI * 2;\r\n    }\r\n  } else {\r\n    f1 = recursive[0];\r\n    f2 = recursive[1];\r\n    cx = recursive[2];\r\n    cy = recursive[3];\r\n  }\r\n\r\n  var df = f2 - f1;\r\n\r\n  if (abs(df) > _120) {\r\n    var f2old = f2,\r\n        x2old = x2,\r\n        y2old = y2;\r\n\r\n    f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\r\n    x2 = cx + rx * math.cos(f2);\r\n    y2 = cy + ry * math.sin(f2);\r\n    res = arcToCurve(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\r\n  }\r\n\r\n  df = f2 - f1;\r\n\r\n  var c1 = math.cos(f1),\r\n      s1 = math.sin(f1),\r\n      c2 = math.cos(f2),\r\n      s2 = math.sin(f2),\r\n      t = math.tan(df / 4),\r\n      hx = 4 / 3 * rx * t,\r\n      hy = 4 / 3 * ry * t,\r\n      m1 = [x1, y1],\r\n      m2 = [x1 + hx * s1, y1 - hy * c1],\r\n      m3 = [x2 + hx * s2, y2 - hy * c2],\r\n      m4 = [x2, y2];\r\n\r\n  m2[0] = 2 * m1[0] - m2[0];\r\n  m2[1] = 2 * m1[1] - m2[1];\r\n\r\n  if (recursive) {\r\n    return [m2, m3, m4].concat(res);\r\n  } else {\r\n    res = [m2, m3, m4].concat(res).join().split(',');\r\n    var newres = [];\r\n\r\n    for (var i = 0, ii = res.length; i < ii; i++) {\r\n      newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\r\n    }\r\n\r\n    return newres;\r\n  }\r\n}\r\n\r\n// Returns bounding box of cubic bezier curve.\r\n// Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\r\n// Original version: NISHIO Hirokazu\r\n// Modifications: https://github.com/timo22345\r\nfunction curveBBox(x0, y0, x1, y1, x2, y2, x3, y3) {\r\n  var tvalues = [],\r\n      bounds = [[], []],\r\n      a, b, c, t, t1, t2, b2ac, sqrtb2ac;\r\n\r\n  for (var i = 0; i < 2; ++i) {\r\n\r\n    if (i == 0) {\r\n      b = 6 * x0 - 12 * x1 + 6 * x2;\r\n      a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\r\n      c = 3 * x1 - 3 * x0;\r\n    } else {\r\n      b = 6 * y0 - 12 * y1 + 6 * y2;\r\n      a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\r\n      c = 3 * y1 - 3 * y0;\r\n    }\r\n\r\n    if (abs(a) < 1e-12) {\r\n\r\n      if (abs(b) < 1e-12) {\r\n        continue;\r\n      }\r\n\r\n      t = -c / b;\r\n\r\n      if (0 < t && t < 1) {\r\n        tvalues.push(t);\r\n      }\r\n\r\n      continue;\r\n    }\r\n\r\n    b2ac = b * b - 4 * c * a;\r\n    sqrtb2ac = math.sqrt(b2ac);\r\n\r\n    if (b2ac < 0) {\r\n      continue;\r\n    }\r\n\r\n    t1 = (-b + sqrtb2ac) / (2 * a);\r\n\r\n    if (0 < t1 && t1 < 1) {\r\n      tvalues.push(t1);\r\n    }\r\n\r\n    t2 = (-b - sqrtb2ac) / (2 * a);\r\n\r\n    if (0 < t2 && t2 < 1) {\r\n      tvalues.push(t2);\r\n    }\r\n  }\r\n\r\n  var j = tvalues.length,\r\n      jlen = j,\r\n      mt;\r\n\r\n  while (j--) {\r\n    t = tvalues[j];\r\n    mt = 1 - t;\r\n    bounds[0][j] = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\r\n    bounds[1][j] = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\r\n  }\r\n\r\n  bounds[0][jlen] = x0;\r\n  bounds[1][jlen] = y0;\r\n  bounds[0][jlen + 1] = x3;\r\n  bounds[1][jlen + 1] = y3;\r\n  bounds[0].length = bounds[1].length = jlen + 2;\r\n\r\n  return {\r\n    x0: mmin.apply(0, bounds[0]),\r\n    y0: mmin.apply(0, bounds[1]),\r\n    x1: mmax.apply(0, bounds[0]),\r\n    y1: mmax.apply(0, bounds[1])\r\n  };\r\n}\r\n\r\nfunction pathToCurve(path) {\r\n\r\n  var pth = paths(path);\r\n\r\n  // return cached curve, if existing\r\n  if (pth.curve) {\r\n    return pathClone(pth.curve);\r\n  }\r\n\r\n  var curvedPath = pathToAbsolute(path),\r\n      attrs = { x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null },\r\n      processPath = function(path, d, pathCommand) {\r\n        var nx, ny;\r\n\r\n        if (!path) {\r\n          return ['C', d.x, d.y, d.x, d.y, d.x, d.y];\r\n        }\r\n\r\n        !(path[0] in { T: 1, Q: 1 }) && (d.qx = d.qy = null);\r\n\r\n        switch (path[0]) {\r\n        case 'M':\r\n          d.X = path[1];\r\n          d.Y = path[2];\r\n          break;\r\n        case 'A':\r\n          path = ['C'].concat(arcToCurve.apply(0, [d.x, d.y].concat(path.slice(1))));\r\n          break;\r\n        case 'S':\r\n          if (pathCommand == 'C' || pathCommand == 'S') {\r\n\r\n            // In 'S' case we have to take into account, if the previous command is C/S.\r\n            nx = d.x * 2 - d.bx;\r\n\r\n            // And reflect the previous\r\n            ny = d.y * 2 - d.by;\r\n\r\n            // command's control point relative to the current point.\r\n          }\r\n          else {\r\n\r\n            // or some else or nothing\r\n            nx = d.x;\r\n            ny = d.y;\r\n          }\r\n          path = ['C', nx, ny].concat(path.slice(1));\r\n          break;\r\n        case 'T':\r\n          if (pathCommand == 'Q' || pathCommand == 'T') {\r\n\r\n            // In 'T' case we have to take into account, if the previous command is Q/T.\r\n            d.qx = d.x * 2 - d.qx;\r\n\r\n            // And make a reflection similar\r\n            d.qy = d.y * 2 - d.qy;\r\n\r\n            // to case 'S'.\r\n          }\r\n          else {\r\n\r\n            // or something else or nothing\r\n            d.qx = d.x;\r\n            d.qy = d.y;\r\n          }\r\n          path = ['C'].concat(qubicToCurve(d.x, d.y, d.qx, d.qy, path[1], path[2]));\r\n          break;\r\n        case 'Q':\r\n          d.qx = path[1];\r\n          d.qy = path[2];\r\n          path = ['C'].concat(qubicToCurve(d.x, d.y, path[1], path[2], path[3], path[4]));\r\n          break;\r\n        case 'L':\r\n          path = ['C'].concat(lineToCurve(d.x, d.y, path[1], path[2]));\r\n          break;\r\n        case 'H':\r\n          path = ['C'].concat(lineToCurve(d.x, d.y, path[1], d.y));\r\n          break;\r\n        case 'V':\r\n          path = ['C'].concat(lineToCurve(d.x, d.y, d.x, path[1]));\r\n          break;\r\n        case 'Z':\r\n          path = ['C'].concat(lineToCurve(d.x, d.y, d.X, d.Y));\r\n          break;\r\n        }\r\n\r\n        return path;\r\n      },\r\n\r\n      fixArc = function(pp, i) {\r\n\r\n        if (pp[i].length > 7) {\r\n          pp[i].shift();\r\n          var pi = pp[i];\r\n\r\n          while (pi.length) {\r\n            pathCommands[i] = 'A'; // if created multiple C:s, their original seg is saved\r\n            pp.splice(i++, 0, ['C'].concat(pi.splice(0, 6)));\r\n          }\r\n\r\n          pp.splice(i, 1);\r\n          ii = curvedPath.length;\r\n        }\r\n      },\r\n\r\n      pathCommands = [], // path commands of original path p\r\n      pfirst = '', // temporary holder for original path command\r\n      pathCommand = ''; // holder for previous path command of original path\r\n\r\n  for (var i = 0, ii = curvedPath.length; i < ii; i++) {\r\n    curvedPath[i] && (pfirst = curvedPath[i][0]); // save current path command\r\n\r\n    if (pfirst != 'C') // C is not saved yet, because it may be result of conversion\r\n    {\r\n      pathCommands[i] = pfirst; // Save current path command\r\n      i && (pathCommand = pathCommands[i - 1]); // Get previous path command pathCommand\r\n    }\r\n    curvedPath[i] = processPath(curvedPath[i], attrs, pathCommand); // Previous path command is inputted to processPath\r\n\r\n    if (pathCommands[i] != 'A' && pfirst == 'C') pathCommands[i] = 'C'; // A is the only command\r\n    // which may produce multiple C:s\r\n    // so we have to make sure that C is also C in original path\r\n\r\n    fixArc(curvedPath, i); // fixArc adds also the right amount of A:s to pathCommands\r\n\r\n    var seg = curvedPath[i],\r\n        seglen = seg.length;\r\n\r\n    attrs.x = seg[seglen - 2];\r\n    attrs.y = seg[seglen - 1];\r\n    attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\r\n    attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\r\n  }\r\n\r\n  // cache curve\r\n  pth.curve = pathClone(curvedPath);\r\n\r\n  return curvedPath;\r\n}\r\n\r\nmodule.exports = findPathIntersections;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}