{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _difference from 'lodash/difference';\nimport _isUndefined from 'lodash/isUndefined';\nimport _startsWith from 'lodash/startsWith';\nimport _filter from 'lodash/filter';\nimport _isEmpty from 'lodash/isEmpty';\nimport _keys from 'lodash/keys';\nimport _intersection from 'lodash/intersection';\nimport _has from 'lodash/has';\nimport _each from 'lodash/each';\nimport _invoke from 'lodash/invoke'; /* eslint-disable no-console */\n/**\n * Why choose inheritance over a HOC?  Multiple advantages for this particular use case.\n * In short, we need identical functionality to setState(), unless there is a prop defined\n * for the state key.  Also:\n *\n * 1. Single Renders\n *    Calling trySetState() in constructor(), componentWillMount(), or componentWillReceiveProps()\n *    does not cause two renders. Consumers and tests do not have to wait two renders to get state.\n *    See www.react.run/4kJFdKoxb/27 for an example of this issue.\n *\n * 2. Simple Testing\n *    Using a HOC means you must either test the undecorated component or test through the decorator.\n *    Testing the undecorated component means you must mock the decorator functionality.\n *    Testing through the HOC means you can not simply shallow render your component.\n *\n * 3. Statics\n *    HOC wrap instances, so statics are no longer accessible.  They can be hoisted, but this is more\n *    looping over properties and storing references.  We rely heavily on statics for testing and sub\n *    components.\n *\n * 4. Instance Methods\n *    Some instance methods may be exposed to users via refs.  Again, these are lost with HOC unless\n *    hoisted and exposed by the HOC.\n */\n\nimport { Component } from 'react';\nvar getDefaultPropName = function getDefaultPropName(prop) {\n  return 'default' + (prop[0].toUpperCase() + prop.slice(1));\n};\n\n/**\n * Return the auto controlled state value for a give prop. The initial value is chosen in this order:\n *  - regular props\n *  - then, default props\n *  - then, initial state\n *  - then, `checked` defaults to false\n *  - then, `value` defaults to '' or [] if props.multiple\n *  - else, undefined\n *\n *  @param {string} propName A prop name\n *  @param {object} [props] A props object\n *  @param {object} [state] A state object\n *  @param {boolean} [includeDefaults=false] Whether or not to heed the default props or initial state\n */\nexport var getAutoControlledStateValue = function getAutoControlledStateValue(propName, props, state) {\n  var includeDefaults = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  // regular props\n  var propValue = props[propName];\n  if (propValue !== undefined) return propValue;\n  if (includeDefaults) {\n    // defaultProps\n    var defaultProp = props[getDefaultPropName(propName)];\n    if (defaultProp !== undefined) return defaultProp;\n\n    // initial state - state may be null or undefined\n    if (state) {\n      var initialState = state[propName];\n      if (initialState !== undefined) return initialState;\n    }\n  }\n\n  // React doesn't allow changing from uncontrolled to controlled components,\n  // default checked/value if they were not present.\n  if (propName === 'checked') return false;\n  if (propName === 'value') return props.multiple ? [] : '';\n\n  // otherwise, undefined\n};\n\nvar AutoControlledComponent = function (_Component) {\n  _inherits(AutoControlledComponent, _Component);\n  function AutoControlledComponent() {\n    var _ref;\n    _classCallCheck(this, AutoControlledComponent);\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var _this = _possibleConstructorReturn(this, (_ref = AutoControlledComponent.__proto__ || Object.getPrototypeOf(AutoControlledComponent)).call.apply(_ref, [this].concat(args)));\n    _initialiseProps.call(_this);\n    var autoControlledProps = _this.constructor.autoControlledProps;\n    var state = _invoke(_this, 'getInitialAutoControlledState', _this.props) || {};\n    if (process.env.NODE_ENV !== 'production') {\n      var _this$constructor = _this.constructor,\n        defaultProps = _this$constructor.defaultProps,\n        name = _this$constructor.name,\n        propTypes = _this$constructor.propTypes;\n      // require static autoControlledProps\n\n      if (!autoControlledProps) {\n        console.error('Auto controlled ' + name + ' must specify a static autoControlledProps array.');\n      }\n\n      // require propTypes\n      _each(autoControlledProps, function (prop) {\n        var defaultProp = getDefaultPropName(prop);\n        // regular prop\n        if (!_has(propTypes, defaultProp)) {\n          console.error(name + ' is missing \"' + defaultProp + '\" propTypes validation for auto controlled prop \"' + prop + '\".');\n        }\n        // its default prop\n        if (!_has(propTypes, prop)) {\n          console.error(name + ' is missing propTypes validation for auto controlled prop \"' + prop + '\".');\n        }\n      });\n\n      // prevent autoControlledProps in defaultProps\n      //\n      // When setting state, auto controlled props values always win (so the parent can manage them).\n      // It is not reasonable to decipher the difference between props from the parent and defaultProps.\n      // Allowing defaultProps results in trySetState always deferring to the defaultProp value.\n      // Auto controlled props also listed in defaultProps can never be updated.\n      //\n      // To set defaults for an AutoControlled prop, you can set the initial state in the\n      // constructor or by using an ES7 property initializer:\n      // https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers\n      var illegalDefaults = _intersection(autoControlledProps, _keys(defaultProps));\n      if (!_isEmpty(illegalDefaults)) {\n        console.error(['Do not set defaultProps for autoControlledProps. You can set defaults by', 'setting state in the constructor or using an ES7 property initializer', '(https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers)', 'See ' + name + ' props: \"' + illegalDefaults + '\".'].join(' '));\n      }\n\n      // prevent listing defaultProps in autoControlledProps\n      //\n      // Default props are automatically handled.\n      // Listing defaults in autoControlledProps would result in allowing defaultDefaultValue props.\n      var illegalAutoControlled = _filter(autoControlledProps, function (prop) {\n        return _startsWith(prop, 'default');\n      });\n      if (!_isEmpty(illegalAutoControlled)) {\n        console.error(['Do not add default props to autoControlledProps.', 'Default props are automatically handled.', 'See ' + name + ' autoControlledProps: \"' + illegalAutoControlled + '\".'].join(' '));\n      }\n    }\n\n    // Auto controlled props are copied to state.\n    // Set initial state by copying auto controlled props to state.\n    // Also look for the default prop for any auto controlled props (foo => defaultFoo)\n    // so we can set initial values from defaults.\n    var initialAutoControlledState = autoControlledProps.reduce(function (acc, prop) {\n      acc[prop] = getAutoControlledStateValue(prop, _this.props, state, true);\n      if (process.env.NODE_ENV !== 'production') {\n        var defaultPropName = getDefaultPropName(prop);\n        var _name = _this.constructor.name;\n        // prevent defaultFoo={} along side foo={}\n\n        if (!_isUndefined(_this.props[defaultPropName]) && !_isUndefined(_this.props[prop])) {\n          console.error(_name + ' prop \"' + prop + '\" is auto controlled. Specify either ' + defaultPropName + ' or ' + prop + ', but not both.');\n        }\n      }\n      return acc;\n    }, {});\n    _this.state = _extends({}, state, initialAutoControlledState);\n    return _this;\n  }\n  _createClass(AutoControlledComponent, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n      var autoControlledProps = this.constructor.autoControlledProps;\n\n      // Solve the next state for autoControlledProps\n\n      var newState = autoControlledProps.reduce(function (acc, prop) {\n        var isNextUndefined = _isUndefined(nextProps[prop]);\n        var propWasRemoved = !_isUndefined(_this2.props[prop]) && isNextUndefined;\n\n        // if next is defined then use its value\n        if (!isNextUndefined) acc[prop] = nextProps[prop];\n\n        // reinitialize state for props just removed / set undefined\n        else if (propWasRemoved) acc[prop] = getAutoControlledStateValue(prop, nextProps);\n        return acc;\n      }, {});\n      if (Object.keys(newState).length > 0) this.setState(newState);\n    }\n\n    /**\n     * Safely attempt to set state for props that might be controlled by the user.\n     * Second argument is a state object that is always passed to setState.\n     * @param {object} maybeState State that corresponds to controlled props.\n     * @param {object} [state] Actual state, useful when you also need to setState.\n     */\n  }]);\n\n  return AutoControlledComponent;\n}(Component);\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n  this.trySetState = function (maybeState, state) {\n    var autoControlledProps = _this3.constructor.autoControlledProps;\n    if (process.env.NODE_ENV !== 'production') {\n      var name = _this3.constructor.name;\n      // warn about failed attempts to setState for keys not listed in autoControlledProps\n\n      var illegalKeys = _difference(_keys(maybeState), autoControlledProps);\n      if (!_isEmpty(illegalKeys)) {\n        console.error([name + ' called trySetState() with controlled props: \"' + illegalKeys + '\".', 'State will not be set.', 'Only props in static autoControlledProps will be set on state.'].join(' '));\n      }\n    }\n    var newState = Object.keys(maybeState).reduce(function (acc, prop) {\n      // ignore props defined by the parent\n      if (_this3.props[prop] !== undefined) return acc;\n\n      // ignore props not listed in auto controlled props\n      if (autoControlledProps.indexOf(prop) === -1) return acc;\n      acc[prop] = maybeState[prop];\n      return acc;\n    }, {});\n    if (state) newState = _extends({}, newState, state);\n    if (Object.keys(newState).length > 0) _this3.setState(newState);\n  };\n};\nexport default AutoControlledComponent;","map":{"version":3,"names":["_extends","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","_difference","_isUndefined","_startsWith","_filter","_isEmpty","_keys","_intersection","_has","_each","_invoke","Component","getDefaultPropName","prop","toUpperCase","slice","getAutoControlledStateValue","propName","props","state","includeDefaults","arguments","length","undefined","propValue","defaultProp","initialState","multiple","AutoControlledComponent","_Component","_ref","_len","args","Array","_key","_this","__proto__","Object","getPrototypeOf","call","apply","concat","_initialiseProps","autoControlledProps","constructor","process","env","NODE_ENV","_this$constructor","defaultProps","name","propTypes","console","error","illegalDefaults","join","illegalAutoControlled","initialAutoControlledState","reduce","acc","defaultPropName","_name","key","value","componentWillReceiveProps","nextProps","_this2","newState","isNextUndefined","propWasRemoved","keys","setState","_this3","trySetState","maybeState","illegalKeys","indexOf"],"sources":["C:/Users/KondalaRaoThota/Truviq_Camunda/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/lib/AutoControlledComponent.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport _difference from 'lodash/difference';\nimport _isUndefined from 'lodash/isUndefined';\nimport _startsWith from 'lodash/startsWith';\nimport _filter from 'lodash/filter';\nimport _isEmpty from 'lodash/isEmpty';\nimport _keys from 'lodash/keys';\nimport _intersection from 'lodash/intersection';\nimport _has from 'lodash/has';\nimport _each from 'lodash/each';\nimport _invoke from 'lodash/invoke'; /* eslint-disable no-console */\n/**\n * Why choose inheritance over a HOC?  Multiple advantages for this particular use case.\n * In short, we need identical functionality to setState(), unless there is a prop defined\n * for the state key.  Also:\n *\n * 1. Single Renders\n *    Calling trySetState() in constructor(), componentWillMount(), or componentWillReceiveProps()\n *    does not cause two renders. Consumers and tests do not have to wait two renders to get state.\n *    See www.react.run/4kJFdKoxb/27 for an example of this issue.\n *\n * 2. Simple Testing\n *    Using a HOC means you must either test the undecorated component or test through the decorator.\n *    Testing the undecorated component means you must mock the decorator functionality.\n *    Testing through the HOC means you can not simply shallow render your component.\n *\n * 3. Statics\n *    HOC wrap instances, so statics are no longer accessible.  They can be hoisted, but this is more\n *    looping over properties and storing references.  We rely heavily on statics for testing and sub\n *    components.\n *\n * 4. Instance Methods\n *    Some instance methods may be exposed to users via refs.  Again, these are lost with HOC unless\n *    hoisted and exposed by the HOC.\n */\n\nimport { Component } from 'react';\n\nvar getDefaultPropName = function getDefaultPropName(prop) {\n  return 'default' + (prop[0].toUpperCase() + prop.slice(1));\n};\n\n/**\n * Return the auto controlled state value for a give prop. The initial value is chosen in this order:\n *  - regular props\n *  - then, default props\n *  - then, initial state\n *  - then, `checked` defaults to false\n *  - then, `value` defaults to '' or [] if props.multiple\n *  - else, undefined\n *\n *  @param {string} propName A prop name\n *  @param {object} [props] A props object\n *  @param {object} [state] A state object\n *  @param {boolean} [includeDefaults=false] Whether or not to heed the default props or initial state\n */\nexport var getAutoControlledStateValue = function getAutoControlledStateValue(propName, props, state) {\n  var includeDefaults = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  // regular props\n  var propValue = props[propName];\n  if (propValue !== undefined) return propValue;\n\n  if (includeDefaults) {\n    // defaultProps\n    var defaultProp = props[getDefaultPropName(propName)];\n    if (defaultProp !== undefined) return defaultProp;\n\n    // initial state - state may be null or undefined\n    if (state) {\n      var initialState = state[propName];\n      if (initialState !== undefined) return initialState;\n    }\n  }\n\n  // React doesn't allow changing from uncontrolled to controlled components,\n  // default checked/value if they were not present.\n  if (propName === 'checked') return false;\n  if (propName === 'value') return props.multiple ? [] : '';\n\n  // otherwise, undefined\n};\n\nvar AutoControlledComponent = function (_Component) {\n  _inherits(AutoControlledComponent, _Component);\n\n  function AutoControlledComponent() {\n    var _ref;\n\n    _classCallCheck(this, AutoControlledComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _this = _possibleConstructorReturn(this, (_ref = AutoControlledComponent.__proto__ || Object.getPrototypeOf(AutoControlledComponent)).call.apply(_ref, [this].concat(args)));\n\n    _initialiseProps.call(_this);\n\n    var autoControlledProps = _this.constructor.autoControlledProps;\n\n    var state = _invoke(_this, 'getInitialAutoControlledState', _this.props) || {};\n\n    if (process.env.NODE_ENV !== 'production') {\n      var _this$constructor = _this.constructor,\n          defaultProps = _this$constructor.defaultProps,\n          name = _this$constructor.name,\n          propTypes = _this$constructor.propTypes;\n      // require static autoControlledProps\n\n      if (!autoControlledProps) {\n        console.error('Auto controlled ' + name + ' must specify a static autoControlledProps array.');\n      }\n\n      // require propTypes\n      _each(autoControlledProps, function (prop) {\n        var defaultProp = getDefaultPropName(prop);\n        // regular prop\n        if (!_has(propTypes, defaultProp)) {\n          console.error(name + ' is missing \"' + defaultProp + '\" propTypes validation for auto controlled prop \"' + prop + '\".');\n        }\n        // its default prop\n        if (!_has(propTypes, prop)) {\n          console.error(name + ' is missing propTypes validation for auto controlled prop \"' + prop + '\".');\n        }\n      });\n\n      // prevent autoControlledProps in defaultProps\n      //\n      // When setting state, auto controlled props values always win (so the parent can manage them).\n      // It is not reasonable to decipher the difference between props from the parent and defaultProps.\n      // Allowing defaultProps results in trySetState always deferring to the defaultProp value.\n      // Auto controlled props also listed in defaultProps can never be updated.\n      //\n      // To set defaults for an AutoControlled prop, you can set the initial state in the\n      // constructor or by using an ES7 property initializer:\n      // https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers\n      var illegalDefaults = _intersection(autoControlledProps, _keys(defaultProps));\n      if (!_isEmpty(illegalDefaults)) {\n        console.error(['Do not set defaultProps for autoControlledProps. You can set defaults by', 'setting state in the constructor or using an ES7 property initializer', '(https://babeljs.io/blog/2015/06/07/react-on-es6-plus#property-initializers)', 'See ' + name + ' props: \"' + illegalDefaults + '\".'].join(' '));\n      }\n\n      // prevent listing defaultProps in autoControlledProps\n      //\n      // Default props are automatically handled.\n      // Listing defaults in autoControlledProps would result in allowing defaultDefaultValue props.\n      var illegalAutoControlled = _filter(autoControlledProps, function (prop) {\n        return _startsWith(prop, 'default');\n      });\n      if (!_isEmpty(illegalAutoControlled)) {\n        console.error(['Do not add default props to autoControlledProps.', 'Default props are automatically handled.', 'See ' + name + ' autoControlledProps: \"' + illegalAutoControlled + '\".'].join(' '));\n      }\n    }\n\n    // Auto controlled props are copied to state.\n    // Set initial state by copying auto controlled props to state.\n    // Also look for the default prop for any auto controlled props (foo => defaultFoo)\n    // so we can set initial values from defaults.\n    var initialAutoControlledState = autoControlledProps.reduce(function (acc, prop) {\n      acc[prop] = getAutoControlledStateValue(prop, _this.props, state, true);\n\n      if (process.env.NODE_ENV !== 'production') {\n        var defaultPropName = getDefaultPropName(prop);\n        var _name = _this.constructor.name;\n        // prevent defaultFoo={} along side foo={}\n\n        if (!_isUndefined(_this.props[defaultPropName]) && !_isUndefined(_this.props[prop])) {\n          console.error(_name + ' prop \"' + prop + '\" is auto controlled. Specify either ' + defaultPropName + ' or ' + prop + ', but not both.');\n        }\n      }\n\n      return acc;\n    }, {});\n\n    _this.state = _extends({}, state, initialAutoControlledState);\n    return _this;\n  }\n\n  _createClass(AutoControlledComponent, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var _this2 = this;\n\n      var autoControlledProps = this.constructor.autoControlledProps;\n\n      // Solve the next state for autoControlledProps\n\n      var newState = autoControlledProps.reduce(function (acc, prop) {\n        var isNextUndefined = _isUndefined(nextProps[prop]);\n        var propWasRemoved = !_isUndefined(_this2.props[prop]) && isNextUndefined;\n\n        // if next is defined then use its value\n        if (!isNextUndefined) acc[prop] = nextProps[prop];\n\n        // reinitialize state for props just removed / set undefined\n        else if (propWasRemoved) acc[prop] = getAutoControlledStateValue(prop, nextProps);\n\n        return acc;\n      }, {});\n\n      if (Object.keys(newState).length > 0) this.setState(newState);\n    }\n\n    /**\n     * Safely attempt to set state for props that might be controlled by the user.\n     * Second argument is a state object that is always passed to setState.\n     * @param {object} maybeState State that corresponds to controlled props.\n     * @param {object} [state] Actual state, useful when you also need to setState.\n     */\n\n  }]);\n\n  return AutoControlledComponent;\n}(Component);\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.trySetState = function (maybeState, state) {\n    var autoControlledProps = _this3.constructor.autoControlledProps;\n\n    if (process.env.NODE_ENV !== 'production') {\n      var name = _this3.constructor.name;\n      // warn about failed attempts to setState for keys not listed in autoControlledProps\n\n      var illegalKeys = _difference(_keys(maybeState), autoControlledProps);\n      if (!_isEmpty(illegalKeys)) {\n        console.error([name + ' called trySetState() with controlled props: \"' + illegalKeys + '\".', 'State will not be set.', 'Only props in static autoControlledProps will be set on state.'].join(' '));\n      }\n    }\n\n    var newState = Object.keys(maybeState).reduce(function (acc, prop) {\n      // ignore props defined by the parent\n      if (_this3.props[prop] !== undefined) return acc;\n\n      // ignore props not listed in auto controlled props\n      if (autoControlledProps.indexOf(prop) === -1) return acc;\n\n      acc[prop] = maybeState[prop];\n      return acc;\n    }, {});\n\n    if (state) newState = _extends({}, newState, state);\n\n    if (Object.keys(newState).length > 0) _this3.setState(newState);\n  };\n};\n\nexport default AutoControlledComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module"}