{"ast":null,"code":"function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\n/**\r\n * Helpers to enable Immutable compatibility *without* bringing in\r\n * the 'immutable' package as a dependency.\r\n */\n\n/**\r\n * Check if an object is immutable by checking if it has a key specific\r\n * to the immutable library.\r\n *\r\n * @param  {any} object\r\n * @return {bool}\r\n */\nfunction isImmutable(object) {\n  return !!(object && typeof object.hasOwnProperty === 'function' && (object.hasOwnProperty('__ownerID') ||\n  // Immutable.Map\n  object._map && object._map.hasOwnProperty('__ownerID'))); // Immutable.Record\n}\n/**\r\n * Denormalize an immutable entity.\r\n *\r\n * @param  {Schema} schema\r\n * @param  {Immutable.Map|Immutable.Record} input\r\n * @param  {function} unvisit\r\n * @param  {function} getDenormalizedEntity\r\n * @return {Immutable.Map|Immutable.Record}\r\n */\n\nfunction denormalizeImmutable(schema, input, unvisit) {\n  return Object.keys(schema).reduce(function (object, key) {\n    // Immutable maps cast keys to strings on write so we need to ensure\n    // we're accessing them using string keys.\n    var stringKey = \"\" + key;\n    if (object.has(stringKey)) {\n      return object.set(stringKey, unvisit(object.get(stringKey), schema[stringKey]));\n    } else {\n      return object;\n    }\n  }, input);\n}\nvar getDefaultGetId = function getDefaultGetId(idAttribute) {\n  return function (input) {\n    return isImmutable(input) ? input.get(idAttribute) : input[idAttribute];\n  };\n};\nvar EntitySchema = /*#__PURE__*/function () {\n  function EntitySchema(key, definition, options) {\n    if (definition === void 0) {\n      definition = {};\n    }\n    if (options === void 0) {\n      options = {};\n    }\n    if (!key || typeof key !== 'string') {\n      throw new Error(\"Expected a string key for Entity, but found \" + key + \".\");\n    }\n    var _options = options,\n      _options$idAttribute = _options.idAttribute,\n      idAttribute = _options$idAttribute === void 0 ? 'id' : _options$idAttribute,\n      _options$mergeStrateg = _options.mergeStrategy,\n      mergeStrategy = _options$mergeStrateg === void 0 ? function (entityA, entityB) {\n        return _extends({}, entityA, entityB);\n      } : _options$mergeStrateg,\n      _options$processStrat = _options.processStrategy,\n      processStrategy = _options$processStrat === void 0 ? function (input) {\n        return _extends({}, input);\n      } : _options$processStrat,\n      _options$fallbackStra = _options.fallbackStrategy,\n      fallbackStrategy = _options$fallbackStra === void 0 ? function (key, schema) {\n        return undefined;\n      } : _options$fallbackStra;\n    this._key = key;\n    this._getId = typeof idAttribute === 'function' ? idAttribute : getDefaultGetId(idAttribute);\n    this._idAttribute = idAttribute;\n    this._mergeStrategy = mergeStrategy;\n    this._processStrategy = processStrategy;\n    this._fallbackStrategy = fallbackStrategy;\n    this.define(definition);\n  }\n  var _proto = EntitySchema.prototype;\n  _proto.define = function define(definition) {\n    this.schema = Object.keys(definition).reduce(function (entitySchema, key) {\n      var _extends2;\n      var schema = definition[key];\n      return _extends({}, entitySchema, (_extends2 = {}, _extends2[key] = schema, _extends2));\n    }, this.schema || {});\n  };\n  _proto.getId = function getId(input, parent, key) {\n    return this._getId(input, parent, key);\n  };\n  _proto.merge = function merge(entityA, entityB) {\n    return this._mergeStrategy(entityA, entityB);\n  };\n  _proto.fallback = function fallback(id, schema) {\n    return this._fallbackStrategy(id, schema);\n  };\n  _proto.normalize = function normalize(input, parent, key, visit, addEntity, visitedEntities) {\n    var _this = this;\n    var id = this.getId(input, parent, key);\n    var entityType = this.key;\n    if (!(entityType in visitedEntities)) {\n      visitedEntities[entityType] = {};\n    }\n    if (!(id in visitedEntities[entityType])) {\n      visitedEntities[entityType][id] = [];\n    }\n    if (visitedEntities[entityType][id].some(function (entity) {\n      return entity === input;\n    })) {\n      return id;\n    }\n    visitedEntities[entityType][id].push(input);\n    var processedEntity = this._processStrategy(input, parent, key);\n    Object.keys(this.schema).forEach(function (key) {\n      if (processedEntity.hasOwnProperty(key) && typeof processedEntity[key] === 'object') {\n        var schema = _this.schema[key];\n        var resolvedSchema = typeof schema === 'function' ? schema(input) : schema;\n        processedEntity[key] = visit(processedEntity[key], processedEntity, key, resolvedSchema, addEntity, visitedEntities);\n      }\n    });\n    addEntity(this, processedEntity, input, parent, key);\n    return id;\n  };\n  _proto.denormalize = function denormalize(entity, unvisit) {\n    var _this2 = this;\n    if (isImmutable(entity)) {\n      return denormalizeImmutable(this.schema, entity, unvisit);\n    }\n    Object.keys(this.schema).forEach(function (key) {\n      if (entity.hasOwnProperty(key)) {\n        var schema = _this2.schema[key];\n        entity[key] = unvisit(entity[key], schema);\n      }\n    });\n    return entity;\n  };\n  _createClass(EntitySchema, [{\n    key: \"key\",\n    get: function get() {\n      return this._key;\n    }\n  }, {\n    key: \"idAttribute\",\n    get: function get() {\n      return this._idAttribute;\n    }\n  }]);\n  return EntitySchema;\n}();\nvar PolymorphicSchema = /*#__PURE__*/function () {\n  function PolymorphicSchema(definition, schemaAttribute) {\n    if (schemaAttribute) {\n      this._schemaAttribute = typeof schemaAttribute === 'string' ? function (input) {\n        return input[schemaAttribute];\n      } : schemaAttribute;\n    }\n    this.define(definition);\n  }\n  var _proto = PolymorphicSchema.prototype;\n  _proto.define = function define(definition) {\n    this.schema = definition;\n  };\n  _proto.getSchemaAttribute = function getSchemaAttribute(input, parent, key) {\n    return !this.isSingleSchema && this._schemaAttribute(input, parent, key);\n  };\n  _proto.inferSchema = function inferSchema(input, parent, key) {\n    if (this.isSingleSchema) {\n      return this.schema;\n    }\n    var attr = this.getSchemaAttribute(input, parent, key);\n    return this.schema[attr];\n  };\n  _proto.normalizeValue = function normalizeValue(value, parent, key, visit, addEntity, visitedEntities) {\n    var schema = this.inferSchema(value, parent, key);\n    if (!schema) {\n      return value;\n    }\n    var normalizedValue = visit(value, parent, key, schema, addEntity, visitedEntities);\n    return this.isSingleSchema || normalizedValue === undefined || normalizedValue === null ? normalizedValue : {\n      id: normalizedValue,\n      schema: this.getSchemaAttribute(value, parent, key)\n    };\n  };\n  _proto.denormalizeValue = function denormalizeValue(value, unvisit) {\n    var schemaKey = isImmutable(value) ? value.get('schema') : value.schema;\n    if (!this.isSingleSchema && !schemaKey) {\n      return value;\n    }\n    var id = this.isSingleSchema ? undefined : isImmutable(value) ? value.get('id') : value.id;\n    var schema = this.isSingleSchema ? this.schema : this.schema[schemaKey];\n    return unvisit(id || value, schema);\n  };\n  _createClass(PolymorphicSchema, [{\n    key: \"isSingleSchema\",\n    get: function get() {\n      return !this._schemaAttribute;\n    }\n  }]);\n  return PolymorphicSchema;\n}();\nvar UnionSchema = /*#__PURE__*/function (_PolymorphicSchema) {\n  _inheritsLoose(UnionSchema, _PolymorphicSchema);\n  function UnionSchema(definition, schemaAttribute) {\n    if (!schemaAttribute) {\n      throw new Error('Expected option \"schemaAttribute\" not found on UnionSchema.');\n    }\n    return _PolymorphicSchema.call(this, definition, schemaAttribute) || this;\n  }\n  var _proto = UnionSchema.prototype;\n  _proto.normalize = function normalize(input, parent, key, visit, addEntity, visitedEntities) {\n    return this.normalizeValue(input, parent, key, visit, addEntity, visitedEntities);\n  };\n  _proto.denormalize = function denormalize(input, unvisit) {\n    return this.denormalizeValue(input, unvisit);\n  };\n  return UnionSchema;\n}(PolymorphicSchema);\nvar ValuesSchema = /*#__PURE__*/function (_PolymorphicSchema) {\n  _inheritsLoose(ValuesSchema, _PolymorphicSchema);\n  function ValuesSchema() {\n    return _PolymorphicSchema.apply(this, arguments) || this;\n  }\n  var _proto = ValuesSchema.prototype;\n  _proto.normalize = function normalize(input, parent, key, visit, addEntity, visitedEntities) {\n    var _this = this;\n    return Object.keys(input).reduce(function (output, key, index) {\n      var _extends2;\n      var value = input[key];\n      return value !== undefined && value !== null ? _extends({}, output, (_extends2 = {}, _extends2[key] = _this.normalizeValue(value, input, key, visit, addEntity, visitedEntities), _extends2)) : output;\n    }, {});\n  };\n  _proto.denormalize = function denormalize(input, unvisit) {\n    var _this2 = this;\n    return Object.keys(input).reduce(function (output, key) {\n      var _extends3;\n      var entityOrId = input[key];\n      return _extends({}, output, (_extends3 = {}, _extends3[key] = _this2.denormalizeValue(entityOrId, unvisit), _extends3));\n    }, {});\n  };\n  return ValuesSchema;\n}(PolymorphicSchema);\nvar validateSchema = function validateSchema(definition) {\n  var isArray = Array.isArray(definition);\n  if (isArray && definition.length > 1) {\n    throw new Error(\"Expected schema definition to be a single schema, but found \" + definition.length + \".\");\n  }\n  return definition[0];\n};\nvar getValues = function getValues(input) {\n  return Array.isArray(input) ? input : Object.keys(input).map(function (key) {\n    return input[key];\n  });\n};\nvar normalize = function normalize(schema, input, parent, key, visit, addEntity, visitedEntities) {\n  schema = validateSchema(schema);\n  var values = getValues(input); // Special case: Arrays pass *their* parent on to their children, since there\n  // is not any special information that can be gathered from themselves directly\n\n  return values.map(function (value, index) {\n    return visit(value, parent, key, schema, addEntity, visitedEntities);\n  });\n};\nvar denormalize = function denormalize(schema, input, unvisit) {\n  schema = validateSchema(schema);\n  return input && input.map ? input.map(function (entityOrId) {\n    return unvisit(entityOrId, schema);\n  }) : input;\n};\nvar ArraySchema = /*#__PURE__*/function (_PolymorphicSchema) {\n  _inheritsLoose(ArraySchema, _PolymorphicSchema);\n  function ArraySchema() {\n    return _PolymorphicSchema.apply(this, arguments) || this;\n  }\n  var _proto = ArraySchema.prototype;\n  _proto.normalize = function normalize(input, parent, key, visit, addEntity, visitedEntities) {\n    var _this = this;\n    var values = getValues(input);\n    return values.map(function (value, index) {\n      return _this.normalizeValue(value, parent, key, visit, addEntity, visitedEntities);\n    }).filter(function (value) {\n      return value !== undefined && value !== null;\n    });\n  };\n  _proto.denormalize = function denormalize(input, unvisit) {\n    var _this2 = this;\n    return input && input.map ? input.map(function (value) {\n      return _this2.denormalizeValue(value, unvisit);\n    }) : input;\n  };\n  return ArraySchema;\n}(PolymorphicSchema);\nvar _normalize = function normalize(schema, input, parent, key, visit, addEntity, visitedEntities) {\n  var object = _extends({}, input);\n  Object.keys(schema).forEach(function (key) {\n    var localSchema = schema[key];\n    var resolvedLocalSchema = typeof localSchema === 'function' ? localSchema(input) : localSchema;\n    var value = visit(input[key], input, key, resolvedLocalSchema, addEntity, visitedEntities);\n    if (value === undefined || value === null) {\n      delete object[key];\n    } else {\n      object[key] = value;\n    }\n  });\n  return object;\n};\nvar _denormalize = function denormalize(schema, input, unvisit) {\n  if (isImmutable(input)) {\n    return denormalizeImmutable(schema, input, unvisit);\n  }\n  var object = _extends({}, input);\n  Object.keys(schema).forEach(function (key) {\n    if (object[key] != null) {\n      object[key] = unvisit(object[key], schema[key]);\n    }\n  });\n  return object;\n};\nvar ObjectSchema = /*#__PURE__*/function () {\n  function ObjectSchema(definition) {\n    this.define(definition);\n  }\n  var _proto = ObjectSchema.prototype;\n  _proto.define = function define(definition) {\n    this.schema = Object.keys(definition).reduce(function (entitySchema, key) {\n      var _extends2;\n      var schema = definition[key];\n      return _extends({}, entitySchema, (_extends2 = {}, _extends2[key] = schema, _extends2));\n    }, this.schema || {});\n  };\n  _proto.normalize = function normalize() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return _normalize.apply(void 0, [this.schema].concat(args));\n  };\n  _proto.denormalize = function denormalize() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return _denormalize.apply(void 0, [this.schema].concat(args));\n  };\n  return ObjectSchema;\n}();\nvar visit = function visit(value, parent, key, schema, addEntity, visitedEntities) {\n  if (typeof value !== 'object' || !value) {\n    return value;\n  }\n  if (typeof schema === 'object' && (!schema.normalize || typeof schema.normalize !== 'function')) {\n    var method = Array.isArray(schema) ? normalize : _normalize;\n    return method(schema, value, parent, key, visit, addEntity, visitedEntities);\n  }\n  return schema.normalize(value, parent, key, visit, addEntity, visitedEntities);\n};\nvar addEntities = function addEntities(entities) {\n  return function (schema, processedEntity, value, parent, key) {\n    var schemaKey = schema.key;\n    var id = schema.getId(value, parent, key);\n    if (!(schemaKey in entities)) {\n      entities[schemaKey] = {};\n    }\n    var existingEntity = entities[schemaKey][id];\n    if (existingEntity) {\n      entities[schemaKey][id] = schema.merge(existingEntity, processedEntity);\n    } else {\n      entities[schemaKey][id] = processedEntity;\n    }\n  };\n};\nvar schema = {\n  Array: ArraySchema,\n  Entity: EntitySchema,\n  Object: ObjectSchema,\n  Union: UnionSchema,\n  Values: ValuesSchema\n};\nvar normalize$1 = function normalize(input, schema) {\n  if (!input || typeof input !== 'object') {\n    throw new Error(\"Unexpected input given to normalize. Expected type to be \\\"object\\\", found \\\"\" + (input === null ? 'null' : typeof input) + \"\\\".\");\n  }\n  var entities = {};\n  var addEntity = addEntities(entities);\n  var visitedEntities = {};\n  var result = visit(input, input, null, schema, addEntity, visitedEntities);\n  return {\n    entities: entities,\n    result: result\n  };\n};\nvar unvisitEntity = function unvisitEntity(id, schema, unvisit, getEntity, cache) {\n  var entity = getEntity(id, schema);\n  if (entity === undefined && schema instanceof EntitySchema) {\n    entity = schema.fallback(id, schema);\n  }\n  if (typeof entity !== 'object' || entity === null) {\n    return entity;\n  }\n  if (!cache[schema.key]) {\n    cache[schema.key] = {};\n  }\n  if (!cache[schema.key][id]) {\n    // Ensure we don't mutate it non-immutable objects\n    var entityCopy = isImmutable(entity) ? entity : _extends({}, entity); // Need to set this first so that if it is referenced further within the\n    // denormalization the reference will already exist.\n\n    cache[schema.key][id] = entityCopy;\n    cache[schema.key][id] = schema.denormalize(entityCopy, unvisit);\n  }\n  return cache[schema.key][id];\n};\nvar getUnvisit = function getUnvisit(entities) {\n  var cache = {};\n  var getEntity = getEntities(entities);\n  return function unvisit(input, schema) {\n    if (typeof schema === 'object' && (!schema.denormalize || typeof schema.denormalize !== 'function')) {\n      var method = Array.isArray(schema) ? denormalize : _denormalize;\n      return method(schema, input, unvisit);\n    }\n    if (input === undefined || input === null) {\n      return input;\n    }\n    if (schema instanceof EntitySchema) {\n      return unvisitEntity(input, schema, unvisit, getEntity, cache);\n    }\n    return schema.denormalize(input, unvisit);\n  };\n};\nvar getEntities = function getEntities(entities) {\n  var isImmutable$1 = isImmutable(entities);\n  return function (entityOrId, schema) {\n    var schemaKey = schema.key;\n    if (typeof entityOrId === 'object') {\n      return entityOrId;\n    }\n    if (isImmutable$1) {\n      return entities.getIn([schemaKey, entityOrId.toString()]);\n    }\n    return entities[schemaKey] && entities[schemaKey][entityOrId];\n  };\n};\nvar denormalize$1 = function denormalize(input, schema, entities) {\n  if (typeof input !== 'undefined') {\n    return getUnvisit(entities)(input, schema);\n  }\n};\nexport { denormalize$1 as denormalize, normalize$1 as normalize, schema };","map":{"version":3,"names":["_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_extends","assign","arguments","source","hasOwnProperty","call","apply","_inheritsLoose","subClass","superClass","create","constructor","__proto__","isImmutable","object","_map","denormalizeImmutable","schema","input","unvisit","keys","reduce","stringKey","has","set","get","getDefaultGetId","idAttribute","EntitySchema","definition","options","Error","_options","_options$idAttribute","_options$mergeStrateg","mergeStrategy","entityA","entityB","_options$processStrat","processStrategy","_options$fallbackStra","fallbackStrategy","undefined","_key","_getId","_idAttribute","_mergeStrategy","_processStrategy","_fallbackStrategy","define","_proto","entitySchema","_extends2","getId","parent","merge","fallback","id","normalize","visit","addEntity","visitedEntities","_this","entityType","some","entity","push","processedEntity","forEach","resolvedSchema","denormalize","_this2","PolymorphicSchema","schemaAttribute","_schemaAttribute","getSchemaAttribute","isSingleSchema","inferSchema","attr","normalizeValue","value","normalizedValue","denormalizeValue","schemaKey","UnionSchema","_PolymorphicSchema","ValuesSchema","output","index","_extends3","entityOrId","validateSchema","isArray","Array","getValues","map","values","ArraySchema","filter","_normalize","localSchema","resolvedLocalSchema","_denormalize","ObjectSchema","_len","args","concat","_len2","_key2","method","addEntities","entities","existingEntity","Entity","Union","Values","normalize$1","result","unvisitEntity","getEntity","cache","entityCopy","getUnvisit","getEntities","isImmutable$1","getIn","toString","denormalize$1"],"sources":["C:/Users/sam/final/camunda-react/node_modules/normalizr/dist/normalizr.es.js"],"sourcesContent":["function _defineProperties(target, props) {\r\n  for (var i = 0; i < props.length; i++) {\r\n    var descriptor = props[i];\r\n    descriptor.enumerable = descriptor.enumerable || false;\r\n    descriptor.configurable = true;\r\n    if (\"value\" in descriptor) descriptor.writable = true;\r\n    Object.defineProperty(target, descriptor.key, descriptor);\r\n  }\r\n}\r\n\r\nfunction _createClass(Constructor, protoProps, staticProps) {\r\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\r\n  if (staticProps) _defineProperties(Constructor, staticProps);\r\n  return Constructor;\r\n}\r\n\r\nfunction _extends() {\r\n  _extends = Object.assign || function (target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i];\r\n\r\n      for (var key in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n          target[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n\r\n    return target;\r\n  };\r\n\r\n  return _extends.apply(this, arguments);\r\n}\r\n\r\nfunction _inheritsLoose(subClass, superClass) {\r\n  subClass.prototype = Object.create(superClass.prototype);\r\n  subClass.prototype.constructor = subClass;\r\n  subClass.__proto__ = superClass;\r\n}\r\n\r\n/**\r\n * Helpers to enable Immutable compatibility *without* bringing in\r\n * the 'immutable' package as a dependency.\r\n */\r\n\r\n/**\r\n * Check if an object is immutable by checking if it has a key specific\r\n * to the immutable library.\r\n *\r\n * @param  {any} object\r\n * @return {bool}\r\n */\r\nfunction isImmutable(object) {\r\n  return !!(object && typeof object.hasOwnProperty === 'function' && (object.hasOwnProperty('__ownerID') || // Immutable.Map\r\n  object._map && object._map.hasOwnProperty('__ownerID'))); // Immutable.Record\r\n}\r\n/**\r\n * Denormalize an immutable entity.\r\n *\r\n * @param  {Schema} schema\r\n * @param  {Immutable.Map|Immutable.Record} input\r\n * @param  {function} unvisit\r\n * @param  {function} getDenormalizedEntity\r\n * @return {Immutable.Map|Immutable.Record}\r\n */\r\n\r\nfunction denormalizeImmutable(schema, input, unvisit) {\r\n  return Object.keys(schema).reduce(function (object, key) {\r\n    // Immutable maps cast keys to strings on write so we need to ensure\r\n    // we're accessing them using string keys.\r\n    var stringKey = \"\" + key;\r\n\r\n    if (object.has(stringKey)) {\r\n      return object.set(stringKey, unvisit(object.get(stringKey), schema[stringKey]));\r\n    } else {\r\n      return object;\r\n    }\r\n  }, input);\r\n}\r\n\r\nvar getDefaultGetId = function getDefaultGetId(idAttribute) {\r\n  return function (input) {\r\n    return isImmutable(input) ? input.get(idAttribute) : input[idAttribute];\r\n  };\r\n};\r\n\r\nvar EntitySchema = /*#__PURE__*/function () {\r\n  function EntitySchema(key, definition, options) {\r\n    if (definition === void 0) {\r\n      definition = {};\r\n    }\r\n\r\n    if (options === void 0) {\r\n      options = {};\r\n    }\r\n\r\n    if (!key || typeof key !== 'string') {\r\n      throw new Error(\"Expected a string key for Entity, but found \" + key + \".\");\r\n    }\r\n\r\n    var _options = options,\r\n        _options$idAttribute = _options.idAttribute,\r\n        idAttribute = _options$idAttribute === void 0 ? 'id' : _options$idAttribute,\r\n        _options$mergeStrateg = _options.mergeStrategy,\r\n        mergeStrategy = _options$mergeStrateg === void 0 ? function (entityA, entityB) {\r\n      return _extends({}, entityA, entityB);\r\n    } : _options$mergeStrateg,\r\n        _options$processStrat = _options.processStrategy,\r\n        processStrategy = _options$processStrat === void 0 ? function (input) {\r\n      return _extends({}, input);\r\n    } : _options$processStrat,\r\n        _options$fallbackStra = _options.fallbackStrategy,\r\n        fallbackStrategy = _options$fallbackStra === void 0 ? function (key, schema) {\r\n      return undefined;\r\n    } : _options$fallbackStra;\r\n    this._key = key;\r\n    this._getId = typeof idAttribute === 'function' ? idAttribute : getDefaultGetId(idAttribute);\r\n    this._idAttribute = idAttribute;\r\n    this._mergeStrategy = mergeStrategy;\r\n    this._processStrategy = processStrategy;\r\n    this._fallbackStrategy = fallbackStrategy;\r\n    this.define(definition);\r\n  }\r\n\r\n  var _proto = EntitySchema.prototype;\r\n\r\n  _proto.define = function define(definition) {\r\n    this.schema = Object.keys(definition).reduce(function (entitySchema, key) {\r\n      var _extends2;\r\n\r\n      var schema = definition[key];\r\n      return _extends({}, entitySchema, (_extends2 = {}, _extends2[key] = schema, _extends2));\r\n    }, this.schema || {});\r\n  };\r\n\r\n  _proto.getId = function getId(input, parent, key) {\r\n    return this._getId(input, parent, key);\r\n  };\r\n\r\n  _proto.merge = function merge(entityA, entityB) {\r\n    return this._mergeStrategy(entityA, entityB);\r\n  };\r\n\r\n  _proto.fallback = function fallback(id, schema) {\r\n    return this._fallbackStrategy(id, schema);\r\n  };\r\n\r\n  _proto.normalize = function normalize(input, parent, key, visit, addEntity, visitedEntities) {\r\n    var _this = this;\r\n\r\n    var id = this.getId(input, parent, key);\r\n    var entityType = this.key;\r\n\r\n    if (!(entityType in visitedEntities)) {\r\n      visitedEntities[entityType] = {};\r\n    }\r\n\r\n    if (!(id in visitedEntities[entityType])) {\r\n      visitedEntities[entityType][id] = [];\r\n    }\r\n\r\n    if (visitedEntities[entityType][id].some(function (entity) {\r\n      return entity === input;\r\n    })) {\r\n      return id;\r\n    }\r\n\r\n    visitedEntities[entityType][id].push(input);\r\n\r\n    var processedEntity = this._processStrategy(input, parent, key);\r\n\r\n    Object.keys(this.schema).forEach(function (key) {\r\n      if (processedEntity.hasOwnProperty(key) && typeof processedEntity[key] === 'object') {\r\n        var schema = _this.schema[key];\r\n        var resolvedSchema = typeof schema === 'function' ? schema(input) : schema;\r\n        processedEntity[key] = visit(processedEntity[key], processedEntity, key, resolvedSchema, addEntity, visitedEntities);\r\n      }\r\n    });\r\n    addEntity(this, processedEntity, input, parent, key);\r\n    return id;\r\n  };\r\n\r\n  _proto.denormalize = function denormalize(entity, unvisit) {\r\n    var _this2 = this;\r\n\r\n    if (isImmutable(entity)) {\r\n      return denormalizeImmutable(this.schema, entity, unvisit);\r\n    }\r\n\r\n    Object.keys(this.schema).forEach(function (key) {\r\n      if (entity.hasOwnProperty(key)) {\r\n        var schema = _this2.schema[key];\r\n        entity[key] = unvisit(entity[key], schema);\r\n      }\r\n    });\r\n    return entity;\r\n  };\r\n\r\n  _createClass(EntitySchema, [{\r\n    key: \"key\",\r\n    get: function get() {\r\n      return this._key;\r\n    }\r\n  }, {\r\n    key: \"idAttribute\",\r\n    get: function get() {\r\n      return this._idAttribute;\r\n    }\r\n  }]);\r\n\r\n  return EntitySchema;\r\n}();\r\n\r\nvar PolymorphicSchema = /*#__PURE__*/function () {\r\n  function PolymorphicSchema(definition, schemaAttribute) {\r\n    if (schemaAttribute) {\r\n      this._schemaAttribute = typeof schemaAttribute === 'string' ? function (input) {\r\n        return input[schemaAttribute];\r\n      } : schemaAttribute;\r\n    }\r\n\r\n    this.define(definition);\r\n  }\r\n\r\n  var _proto = PolymorphicSchema.prototype;\r\n\r\n  _proto.define = function define(definition) {\r\n    this.schema = definition;\r\n  };\r\n\r\n  _proto.getSchemaAttribute = function getSchemaAttribute(input, parent, key) {\r\n    return !this.isSingleSchema && this._schemaAttribute(input, parent, key);\r\n  };\r\n\r\n  _proto.inferSchema = function inferSchema(input, parent, key) {\r\n    if (this.isSingleSchema) {\r\n      return this.schema;\r\n    }\r\n\r\n    var attr = this.getSchemaAttribute(input, parent, key);\r\n    return this.schema[attr];\r\n  };\r\n\r\n  _proto.normalizeValue = function normalizeValue(value, parent, key, visit, addEntity, visitedEntities) {\r\n    var schema = this.inferSchema(value, parent, key);\r\n\r\n    if (!schema) {\r\n      return value;\r\n    }\r\n\r\n    var normalizedValue = visit(value, parent, key, schema, addEntity, visitedEntities);\r\n    return this.isSingleSchema || normalizedValue === undefined || normalizedValue === null ? normalizedValue : {\r\n      id: normalizedValue,\r\n      schema: this.getSchemaAttribute(value, parent, key)\r\n    };\r\n  };\r\n\r\n  _proto.denormalizeValue = function denormalizeValue(value, unvisit) {\r\n    var schemaKey = isImmutable(value) ? value.get('schema') : value.schema;\r\n\r\n    if (!this.isSingleSchema && !schemaKey) {\r\n      return value;\r\n    }\r\n\r\n    var id = this.isSingleSchema ? undefined : isImmutable(value) ? value.get('id') : value.id;\r\n    var schema = this.isSingleSchema ? this.schema : this.schema[schemaKey];\r\n    return unvisit(id || value, schema);\r\n  };\r\n\r\n  _createClass(PolymorphicSchema, [{\r\n    key: \"isSingleSchema\",\r\n    get: function get() {\r\n      return !this._schemaAttribute;\r\n    }\r\n  }]);\r\n\r\n  return PolymorphicSchema;\r\n}();\r\n\r\nvar UnionSchema = /*#__PURE__*/function (_PolymorphicSchema) {\r\n  _inheritsLoose(UnionSchema, _PolymorphicSchema);\r\n\r\n  function UnionSchema(definition, schemaAttribute) {\r\n    if (!schemaAttribute) {\r\n      throw new Error('Expected option \"schemaAttribute\" not found on UnionSchema.');\r\n    }\r\n\r\n    return _PolymorphicSchema.call(this, definition, schemaAttribute) || this;\r\n  }\r\n\r\n  var _proto = UnionSchema.prototype;\r\n\r\n  _proto.normalize = function normalize(input, parent, key, visit, addEntity, visitedEntities) {\r\n    return this.normalizeValue(input, parent, key, visit, addEntity, visitedEntities);\r\n  };\r\n\r\n  _proto.denormalize = function denormalize(input, unvisit) {\r\n    return this.denormalizeValue(input, unvisit);\r\n  };\r\n\r\n  return UnionSchema;\r\n}(PolymorphicSchema);\r\n\r\nvar ValuesSchema = /*#__PURE__*/function (_PolymorphicSchema) {\r\n  _inheritsLoose(ValuesSchema, _PolymorphicSchema);\r\n\r\n  function ValuesSchema() {\r\n    return _PolymorphicSchema.apply(this, arguments) || this;\r\n  }\r\n\r\n  var _proto = ValuesSchema.prototype;\r\n\r\n  _proto.normalize = function normalize(input, parent, key, visit, addEntity, visitedEntities) {\r\n    var _this = this;\r\n\r\n    return Object.keys(input).reduce(function (output, key, index) {\r\n      var _extends2;\r\n\r\n      var value = input[key];\r\n      return value !== undefined && value !== null ? _extends({}, output, (_extends2 = {}, _extends2[key] = _this.normalizeValue(value, input, key, visit, addEntity, visitedEntities), _extends2)) : output;\r\n    }, {});\r\n  };\r\n\r\n  _proto.denormalize = function denormalize(input, unvisit) {\r\n    var _this2 = this;\r\n\r\n    return Object.keys(input).reduce(function (output, key) {\r\n      var _extends3;\r\n\r\n      var entityOrId = input[key];\r\n      return _extends({}, output, (_extends3 = {}, _extends3[key] = _this2.denormalizeValue(entityOrId, unvisit), _extends3));\r\n    }, {});\r\n  };\r\n\r\n  return ValuesSchema;\r\n}(PolymorphicSchema);\r\n\r\nvar validateSchema = function validateSchema(definition) {\r\n  var isArray = Array.isArray(definition);\r\n\r\n  if (isArray && definition.length > 1) {\r\n    throw new Error(\"Expected schema definition to be a single schema, but found \" + definition.length + \".\");\r\n  }\r\n\r\n  return definition[0];\r\n};\r\n\r\nvar getValues = function getValues(input) {\r\n  return Array.isArray(input) ? input : Object.keys(input).map(function (key) {\r\n    return input[key];\r\n  });\r\n};\r\n\r\nvar normalize = function normalize(schema, input, parent, key, visit, addEntity, visitedEntities) {\r\n  schema = validateSchema(schema);\r\n  var values = getValues(input); // Special case: Arrays pass *their* parent on to their children, since there\r\n  // is not any special information that can be gathered from themselves directly\r\n\r\n  return values.map(function (value, index) {\r\n    return visit(value, parent, key, schema, addEntity, visitedEntities);\r\n  });\r\n};\r\nvar denormalize = function denormalize(schema, input, unvisit) {\r\n  schema = validateSchema(schema);\r\n  return input && input.map ? input.map(function (entityOrId) {\r\n    return unvisit(entityOrId, schema);\r\n  }) : input;\r\n};\r\n\r\nvar ArraySchema = /*#__PURE__*/function (_PolymorphicSchema) {\r\n  _inheritsLoose(ArraySchema, _PolymorphicSchema);\r\n\r\n  function ArraySchema() {\r\n    return _PolymorphicSchema.apply(this, arguments) || this;\r\n  }\r\n\r\n  var _proto = ArraySchema.prototype;\r\n\r\n  _proto.normalize = function normalize(input, parent, key, visit, addEntity, visitedEntities) {\r\n    var _this = this;\r\n\r\n    var values = getValues(input);\r\n    return values.map(function (value, index) {\r\n      return _this.normalizeValue(value, parent, key, visit, addEntity, visitedEntities);\r\n    }).filter(function (value) {\r\n      return value !== undefined && value !== null;\r\n    });\r\n  };\r\n\r\n  _proto.denormalize = function denormalize(input, unvisit) {\r\n    var _this2 = this;\r\n\r\n    return input && input.map ? input.map(function (value) {\r\n      return _this2.denormalizeValue(value, unvisit);\r\n    }) : input;\r\n  };\r\n\r\n  return ArraySchema;\r\n}(PolymorphicSchema);\r\n\r\nvar _normalize = function normalize(schema, input, parent, key, visit, addEntity, visitedEntities) {\r\n  var object = _extends({}, input);\r\n\r\n  Object.keys(schema).forEach(function (key) {\r\n    var localSchema = schema[key];\r\n    var resolvedLocalSchema = typeof localSchema === 'function' ? localSchema(input) : localSchema;\r\n    var value = visit(input[key], input, key, resolvedLocalSchema, addEntity, visitedEntities);\r\n\r\n    if (value === undefined || value === null) {\r\n      delete object[key];\r\n    } else {\r\n      object[key] = value;\r\n    }\r\n  });\r\n  return object;\r\n};\r\n\r\nvar _denormalize = function denormalize(schema, input, unvisit) {\r\n  if (isImmutable(input)) {\r\n    return denormalizeImmutable(schema, input, unvisit);\r\n  }\r\n\r\n  var object = _extends({}, input);\r\n\r\n  Object.keys(schema).forEach(function (key) {\r\n    if (object[key] != null) {\r\n      object[key] = unvisit(object[key], schema[key]);\r\n    }\r\n  });\r\n  return object;\r\n};\r\n\r\nvar ObjectSchema = /*#__PURE__*/function () {\r\n  function ObjectSchema(definition) {\r\n    this.define(definition);\r\n  }\r\n\r\n  var _proto = ObjectSchema.prototype;\r\n\r\n  _proto.define = function define(definition) {\r\n    this.schema = Object.keys(definition).reduce(function (entitySchema, key) {\r\n      var _extends2;\r\n\r\n      var schema = definition[key];\r\n      return _extends({}, entitySchema, (_extends2 = {}, _extends2[key] = schema, _extends2));\r\n    }, this.schema || {});\r\n  };\r\n\r\n  _proto.normalize = function normalize() {\r\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n      args[_key] = arguments[_key];\r\n    }\r\n\r\n    return _normalize.apply(void 0, [this.schema].concat(args));\r\n  };\r\n\r\n  _proto.denormalize = function denormalize() {\r\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\r\n      args[_key2] = arguments[_key2];\r\n    }\r\n\r\n    return _denormalize.apply(void 0, [this.schema].concat(args));\r\n  };\r\n\r\n  return ObjectSchema;\r\n}();\r\n\r\nvar visit = function visit(value, parent, key, schema, addEntity, visitedEntities) {\r\n  if (typeof value !== 'object' || !value) {\r\n    return value;\r\n  }\r\n\r\n  if (typeof schema === 'object' && (!schema.normalize || typeof schema.normalize !== 'function')) {\r\n    var method = Array.isArray(schema) ? normalize : _normalize;\r\n    return method(schema, value, parent, key, visit, addEntity, visitedEntities);\r\n  }\r\n\r\n  return schema.normalize(value, parent, key, visit, addEntity, visitedEntities);\r\n};\r\n\r\nvar addEntities = function addEntities(entities) {\r\n  return function (schema, processedEntity, value, parent, key) {\r\n    var schemaKey = schema.key;\r\n    var id = schema.getId(value, parent, key);\r\n\r\n    if (!(schemaKey in entities)) {\r\n      entities[schemaKey] = {};\r\n    }\r\n\r\n    var existingEntity = entities[schemaKey][id];\r\n\r\n    if (existingEntity) {\r\n      entities[schemaKey][id] = schema.merge(existingEntity, processedEntity);\r\n    } else {\r\n      entities[schemaKey][id] = processedEntity;\r\n    }\r\n  };\r\n};\r\n\r\nvar schema = {\r\n  Array: ArraySchema,\r\n  Entity: EntitySchema,\r\n  Object: ObjectSchema,\r\n  Union: UnionSchema,\r\n  Values: ValuesSchema\r\n};\r\nvar normalize$1 = function normalize(input, schema) {\r\n  if (!input || typeof input !== 'object') {\r\n    throw new Error(\"Unexpected input given to normalize. Expected type to be \\\"object\\\", found \\\"\" + (input === null ? 'null' : typeof input) + \"\\\".\");\r\n  }\r\n\r\n  var entities = {};\r\n  var addEntity = addEntities(entities);\r\n  var visitedEntities = {};\r\n  var result = visit(input, input, null, schema, addEntity, visitedEntities);\r\n  return {\r\n    entities: entities,\r\n    result: result\r\n  };\r\n};\r\n\r\nvar unvisitEntity = function unvisitEntity(id, schema, unvisit, getEntity, cache) {\r\n  var entity = getEntity(id, schema);\r\n\r\n  if (entity === undefined && schema instanceof EntitySchema) {\r\n    entity = schema.fallback(id, schema);\r\n  }\r\n\r\n  if (typeof entity !== 'object' || entity === null) {\r\n    return entity;\r\n  }\r\n\r\n  if (!cache[schema.key]) {\r\n    cache[schema.key] = {};\r\n  }\r\n\r\n  if (!cache[schema.key][id]) {\r\n    // Ensure we don't mutate it non-immutable objects\r\n    var entityCopy = isImmutable(entity) ? entity : _extends({}, entity); // Need to set this first so that if it is referenced further within the\r\n    // denormalization the reference will already exist.\r\n\r\n    cache[schema.key][id] = entityCopy;\r\n    cache[schema.key][id] = schema.denormalize(entityCopy, unvisit);\r\n  }\r\n\r\n  return cache[schema.key][id];\r\n};\r\n\r\nvar getUnvisit = function getUnvisit(entities) {\r\n  var cache = {};\r\n  var getEntity = getEntities(entities);\r\n  return function unvisit(input, schema) {\r\n    if (typeof schema === 'object' && (!schema.denormalize || typeof schema.denormalize !== 'function')) {\r\n      var method = Array.isArray(schema) ? denormalize : _denormalize;\r\n      return method(schema, input, unvisit);\r\n    }\r\n\r\n    if (input === undefined || input === null) {\r\n      return input;\r\n    }\r\n\r\n    if (schema instanceof EntitySchema) {\r\n      return unvisitEntity(input, schema, unvisit, getEntity, cache);\r\n    }\r\n\r\n    return schema.denormalize(input, unvisit);\r\n  };\r\n};\r\n\r\nvar getEntities = function getEntities(entities) {\r\n  var isImmutable$1 = isImmutable(entities);\r\n  return function (entityOrId, schema) {\r\n    var schemaKey = schema.key;\r\n\r\n    if (typeof entityOrId === 'object') {\r\n      return entityOrId;\r\n    }\r\n\r\n    if (isImmutable$1) {\r\n      return entities.getIn([schemaKey, entityOrId.toString()]);\r\n    }\r\n\r\n    return entities[schemaKey] && entities[schemaKey][entityOrId];\r\n  };\r\n};\r\n\r\nvar denormalize$1 = function denormalize(input, schema, entities) {\r\n  if (typeof input !== 'undefined') {\r\n    return getUnvisit(entities)(input, schema);\r\n  }\r\n};\r\n\r\nexport { denormalize$1 as denormalize, normalize$1 as normalize, schema };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}