{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _without from 'lodash/without';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly } from '../../lib';\n\n/**\r\n * A group of segments can be formatted to appear together.\r\n */\nfunction SegmentGroup(props) {\n  var children = props.children,\n    className = props.className,\n    compact = props.compact,\n    content = props.content,\n    horizontal = props.horizontal,\n    piled = props.piled,\n    raised = props.raised,\n    size = props.size,\n    stacked = props.stacked;\n  var classes = cx('ui', size, useKeyOnly(compact, 'compact'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(stacked, 'stacked'), 'segments', className);\n  var rest = getUnhandledProps(SegmentGroup, props);\n  var ElementType = getElementType(SegmentGroup, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\nSegmentGroup.handledProps = ['as', 'children', 'className', 'compact', 'content', 'horizontal', 'piled', 'raised', 'size', 'stacked'];\nSegmentGroup._meta = {\n  name: 'SegmentGroup',\n  parent: 'Segment',\n  type: META.TYPES.ELEMENT\n};\nSegmentGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** A segment may take up only as much space as is necessary. */\n  compact: PropTypes.bool,\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n  /** Formats content to be aligned horizontally. */\n  horizontal: PropTypes.bool,\n  /** Formatted to look like a pile of pages. */\n  piled: PropTypes.bool,\n  /** A segment group may be formatted to raise above the page. */\n  raised: PropTypes.bool,\n  /** A segment group can have different sizes. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\n  /** Formatted to show it contains multiple pages. */\n  stacked: PropTypes.bool\n} : {};\nexport default SegmentGroup;","map":{"version":3,"names":["_extends","_without","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","META","SUI","useKeyOnly","SegmentGroup","props","children","className","compact","content","horizontal","piled","raised","size","stacked","classes","rest","ElementType","createElement","isNil","handledProps","_meta","name","parent","type","TYPES","ELEMENT","propTypes","process","env","NODE_ENV","as","node","string","bool","contentShorthand","oneOf","SIZES"],"sources":["C:/Users/sam/final/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/elements/Segment/SegmentGroup.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\r\nimport _without from 'lodash/without';\r\nimport cx from 'classnames';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly } from '../../lib';\r\n\r\n/**\r\n * A group of segments can be formatted to appear together.\r\n */\r\nfunction SegmentGroup(props) {\r\n  var children = props.children,\r\n      className = props.className,\r\n      compact = props.compact,\r\n      content = props.content,\r\n      horizontal = props.horizontal,\r\n      piled = props.piled,\r\n      raised = props.raised,\r\n      size = props.size,\r\n      stacked = props.stacked;\r\n\r\n\r\n  var classes = cx('ui', size, useKeyOnly(compact, 'compact'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(piled, 'piled'), useKeyOnly(raised, 'raised'), useKeyOnly(stacked, 'stacked'), 'segments', className);\r\n  var rest = getUnhandledProps(SegmentGroup, props);\r\n  var ElementType = getElementType(SegmentGroup, props);\r\n\r\n  return React.createElement(\r\n    ElementType,\r\n    _extends({}, rest, { className: classes }),\r\n    childrenUtils.isNil(children) ? content : children\r\n  );\r\n}\r\n\r\nSegmentGroup.handledProps = ['as', 'children', 'className', 'compact', 'content', 'horizontal', 'piled', 'raised', 'size', 'stacked'];\r\nSegmentGroup._meta = {\r\n  name: 'SegmentGroup',\r\n  parent: 'Segment',\r\n  type: META.TYPES.ELEMENT\r\n};\r\n\r\nSegmentGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: customPropTypes.as,\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** A segment may take up only as much space as is necessary. */\r\n  compact: PropTypes.bool,\r\n\r\n  /** Shorthand for primary content. */\r\n  content: customPropTypes.contentShorthand,\r\n\r\n  /** Formats content to be aligned horizontally. */\r\n  horizontal: PropTypes.bool,\r\n\r\n  /** Formatted to look like a pile of pages. */\r\n  piled: PropTypes.bool,\r\n\r\n  /** A segment group may be formatted to raise above the page. */\r\n  raised: PropTypes.bool,\r\n\r\n  /** A segment group can have different sizes. */\r\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium')),\r\n\r\n  /** Formatted to show it contains multiple pages. */\r\n  stacked: PropTypes.bool\r\n} : {};\r\n\r\nexport default SegmentGroup;"],"mappings":"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"},"metadata":{},"sourceType":"module"}