{"ast":null,"code":"import inherits from 'inherits';\nimport BaseRenderer from './BaseRenderer';\nimport { componentsToPath, createLine } from '../util/RenderUtil';\nimport { append as svgAppend, attr as svgAttr, create as svgCreate } from 'tiny-svg';\nimport { assign } from 'min-dash';\nimport { isFrameElement } from '../util/Elements';\n\n// apply default renderer with lowest possible priority\n// so that it only kicks in if noone else could render\nvar DEFAULT_RENDER_PRIORITY = 1;\n\n/**\n * The default renderer used for shapes and connections.\n *\n * @param {EventBus} eventBus\n * @param {Styles} styles\n */\nexport default function DefaultRenderer(eventBus, styles) {\n  //\n  BaseRenderer.call(this, eventBus, DEFAULT_RENDER_PRIORITY);\n  this.CONNECTION_STYLE = styles.style(['no-fill'], {\n    strokeWidth: 5,\n    stroke: 'fuchsia'\n  });\n  this.SHAPE_STYLE = styles.style({\n    fill: 'white',\n    stroke: 'fuchsia',\n    strokeWidth: 2\n  });\n  this.FRAME_STYLE = styles.style(['no-fill'], {\n    stroke: 'fuchsia',\n    strokeDasharray: 4,\n    strokeWidth: 2\n  });\n}\ninherits(DefaultRenderer, BaseRenderer);\nDefaultRenderer.prototype.canRender = function () {\n  return true;\n};\nDefaultRenderer.prototype.drawShape = function drawShape(visuals, element, attrs) {\n  var rect = svgCreate('rect');\n  svgAttr(rect, {\n    x: 0,\n    y: 0,\n    width: element.width || 0,\n    height: element.height || 0\n  });\n  if (isFrameElement(element)) {\n    svgAttr(rect, assign({}, this.FRAME_STYLE, attrs || {}));\n  } else {\n    svgAttr(rect, assign({}, this.SHAPE_STYLE, attrs || {}));\n  }\n  svgAppend(visuals, rect);\n  return rect;\n};\nDefaultRenderer.prototype.drawConnection = function drawConnection(visuals, connection, attrs) {\n  var line = createLine(connection.waypoints, assign({}, this.CONNECTION_STYLE, attrs || {}));\n  svgAppend(visuals, line);\n  return line;\n};\nDefaultRenderer.prototype.getShapePath = function getShapePath(shape) {\n  var x = shape.x,\n    y = shape.y,\n    width = shape.width,\n    height = shape.height;\n  var shapePath = [['M', x, y], ['l', width, 0], ['l', 0, height], ['l', -width, 0], ['z']];\n  return componentsToPath(shapePath);\n};\nDefaultRenderer.prototype.getConnectionPath = function getConnectionPath(connection) {\n  var waypoints = connection.waypoints;\n  var idx,\n    point,\n    connectionPath = [];\n  for (idx = 0; point = waypoints[idx]; idx++) {\n    // take invisible docking into account\n    // when creating the path\n    point = point.original || point;\n    connectionPath.push([idx === 0 ? 'M' : 'L', point.x, point.y]);\n  }\n  return componentsToPath(connectionPath);\n};\nDefaultRenderer.$inject = ['eventBus', 'styles'];","map":{"version":3,"names":["inherits","BaseRenderer","componentsToPath","createLine","append","svgAppend","attr","svgAttr","create","svgCreate","assign","isFrameElement","DEFAULT_RENDER_PRIORITY","DefaultRenderer","eventBus","styles","call","CONNECTION_STYLE","style","strokeWidth","stroke","SHAPE_STYLE","fill","FRAME_STYLE","strokeDasharray","prototype","canRender","drawShape","visuals","element","attrs","rect","x","y","width","height","drawConnection","connection","line","waypoints","getShapePath","shape","shapePath","getConnectionPath","idx","point","connectionPath","original","push","$inject"],"sources":["C:/Users/KondalaRaoThota/Truviq_Camunda/camunda-react/node_modules/diagram-js/lib/draw/DefaultRenderer.js"],"sourcesContent":["import inherits from 'inherits';\n\nimport BaseRenderer from './BaseRenderer';\n\nimport {\n  componentsToPath,\n  createLine\n} from '../util/RenderUtil';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  create as svgCreate\n} from 'tiny-svg';\n\nimport { assign } from 'min-dash';\n\nimport {\n  isFrameElement\n} from '../util/Elements';\n\n// apply default renderer with lowest possible priority\n// so that it only kicks in if noone else could render\nvar DEFAULT_RENDER_PRIORITY = 1;\n\n/**\n * The default renderer used for shapes and connections.\n *\n * @param {EventBus} eventBus\n * @param {Styles} styles\n */\nexport default function DefaultRenderer(eventBus, styles) {\n\n  //\n  BaseRenderer.call(this, eventBus, DEFAULT_RENDER_PRIORITY);\n\n  this.CONNECTION_STYLE = styles.style([ 'no-fill' ], { strokeWidth: 5, stroke: 'fuchsia' });\n  this.SHAPE_STYLE = styles.style({ fill: 'white', stroke: 'fuchsia', strokeWidth: 2 });\n  this.FRAME_STYLE = styles.style([ 'no-fill' ], { stroke: 'fuchsia', strokeDasharray: 4, strokeWidth: 2 });\n}\n\ninherits(DefaultRenderer, BaseRenderer);\n\n\nDefaultRenderer.prototype.canRender = function() {\n  return true;\n};\n\nDefaultRenderer.prototype.drawShape = function drawShape(visuals, element, attrs) {\n  var rect = svgCreate('rect');\n\n  svgAttr(rect, {\n    x: 0,\n    y: 0,\n    width: element.width || 0,\n    height: element.height || 0\n  });\n\n  if (isFrameElement(element)) {\n    svgAttr(rect, assign({}, this.FRAME_STYLE, attrs || {}));\n  } else {\n    svgAttr(rect, assign({}, this.SHAPE_STYLE, attrs || {}));\n  }\n\n  svgAppend(visuals, rect);\n\n  return rect;\n};\n\nDefaultRenderer.prototype.drawConnection = function drawConnection(visuals, connection, attrs) {\n\n  var line = createLine(connection.waypoints, assign({}, this.CONNECTION_STYLE, attrs || {}));\n  svgAppend(visuals, line);\n\n  return line;\n};\n\nDefaultRenderer.prototype.getShapePath = function getShapePath(shape) {\n\n  var x = shape.x,\n      y = shape.y,\n      width = shape.width,\n      height = shape.height;\n\n  var shapePath = [\n    ['M', x, y],\n    ['l', width, 0],\n    ['l', 0, height],\n    ['l', -width, 0],\n    ['z']\n  ];\n\n  return componentsToPath(shapePath);\n};\n\nDefaultRenderer.prototype.getConnectionPath = function getConnectionPath(connection) {\n  var waypoints = connection.waypoints;\n\n  var idx, point, connectionPath = [];\n\n  for (idx = 0; (point = waypoints[idx]); idx++) {\n\n    // take invisible docking into account\n    // when creating the path\n    point = point.original || point;\n\n    connectionPath.push([ idx === 0 ? 'M' : 'L', point.x, point.y ]);\n  }\n\n  return componentsToPath(connectionPath);\n};\n\n\nDefaultRenderer.$inject = [ 'eventBus', 'styles' ];\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}