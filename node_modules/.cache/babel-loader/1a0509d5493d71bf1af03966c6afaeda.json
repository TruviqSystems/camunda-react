{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _without from 'lodash/without';\nimport _map from 'lodash/map';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useWidthProp } from '../../lib';\nimport Statistic from './Statistic';\n\n/**\n * A group of statistics.\n */\nfunction StatisticGroup(props) {\n  var children = props.children,\n    className = props.className,\n    color = props.color,\n    content = props.content,\n    horizontal = props.horizontal,\n    inverted = props.inverted,\n    items = props.items,\n    size = props.size,\n    widths = props.widths;\n  var classes = cx('ui', color, size, useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useWidthProp(widths), 'statistics', className);\n  var rest = getUnhandledProps(StatisticGroup, props);\n  var ElementType = getElementType(StatisticGroup, props);\n  if (!childrenUtils.isNil(children)) return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n  if (!childrenUtils.isNil(content)) return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), _map(items, function (item) {\n    return Statistic.create(item);\n  }));\n}\nStatisticGroup.handledProps = ['as', 'children', 'className', 'color', 'content', 'horizontal', 'inverted', 'items', 'size', 'widths'];\nStatisticGroup._meta = {\n  name: 'StatisticGroup',\n  type: META.TYPES.VIEW,\n  parent: 'Statistic'\n};\nStatisticGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** A statistic group can be formatted to be different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n  /** A statistic group can present its measurement horizontally. */\n  horizontal: PropTypes.bool,\n  /** A statistic group can be formatted to fit on a dark background. */\n  inverted: PropTypes.bool,\n  /** Array of props for Statistic. */\n  items: customPropTypes.collectionShorthand,\n  /** A statistic group can vary in size. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'big', 'massive', 'medium')),\n  /** A statistic group can have its items divided evenly. */\n  widths: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nexport default StatisticGroup;","map":{"version":3,"names":["_extends","_without","_map","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","META","SUI","useKeyOnly","useWidthProp","Statistic","StatisticGroup","props","children","className","color","content","horizontal","inverted","items","size","widths","classes","rest","ElementType","isNil","createElement","item","create","handledProps","_meta","name","type","TYPES","VIEW","parent","propTypes","process","env","NODE_ENV","as","node","string","oneOf","COLORS","contentShorthand","bool","collectionShorthand","SIZES","WIDTHS"],"sources":["C:/Users/KondalaRaoThota/Truviq_Camunda/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/views/Statistic/StatisticGroup.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _without from 'lodash/without';\nimport _map from 'lodash/map';\nimport cx from 'classnames';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useWidthProp } from '../../lib';\nimport Statistic from './Statistic';\n\n/**\n * A group of statistics.\n */\nfunction StatisticGroup(props) {\n  var children = props.children,\n      className = props.className,\n      color = props.color,\n      content = props.content,\n      horizontal = props.horizontal,\n      inverted = props.inverted,\n      items = props.items,\n      size = props.size,\n      widths = props.widths;\n\n\n  var classes = cx('ui', color, size, useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useWidthProp(widths), 'statistics', className);\n  var rest = getUnhandledProps(StatisticGroup, props);\n  var ElementType = getElementType(StatisticGroup, props);\n\n  if (!childrenUtils.isNil(children)) return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    children\n  );\n  if (!childrenUtils.isNil(content)) return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    content\n  );\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    _map(items, function (item) {\n      return Statistic.create(item);\n    })\n  );\n}\n\nStatisticGroup.handledProps = ['as', 'children', 'className', 'color', 'content', 'horizontal', 'inverted', 'items', 'size', 'widths'];\nStatisticGroup._meta = {\n  name: 'StatisticGroup',\n  type: META.TYPES.VIEW,\n  parent: 'Statistic'\n};\n\nStatisticGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** A statistic group can be formatted to be different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A statistic group can present its measurement horizontally. */\n  horizontal: PropTypes.bool,\n\n  /** A statistic group can be formatted to fit on a dark background. */\n  inverted: PropTypes.bool,\n\n  /** Array of props for Statistic. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A statistic group can vary in size. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'big', 'massive', 'medium')),\n\n  /** A statistic group can have its items divided evenly. */\n  widths: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\n\nexport default StatisticGroup;"],"mappings":"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"},"metadata":{},"sourceType":"module"}