{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getUnhandledProps, META, useKeyOnly } from '../../lib';\nimport AccordionAccordion from './AccordionAccordion';\nimport AccordionContent from './AccordionContent';\nimport AccordionTitle from './AccordionTitle';\n\n/**\r\n * An accordion allows users to toggle the display of sections of content.\r\n */\nfunction Accordion(props) {\n  var className = props.className,\n    fluid = props.fluid,\n    inverted = props.inverted,\n    styled = props.styled;\n  var classes = cx('ui', useKeyOnly(fluid, 'fluid'), useKeyOnly(inverted, 'inverted'), useKeyOnly(styled, 'styled'), className);\n  var rest = getUnhandledProps(Accordion, props);\n  return React.createElement(AccordionAccordion, _extends({}, rest, {\n    className: classes\n  }));\n}\nAccordion.handledProps = ['className', 'fluid', 'inverted', 'styled'];\nAccordion._meta = {\n  name: 'Accordion',\n  type: META.TYPES.MODULE\n};\nAccordion.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Format to take up the width of its container. */\n  fluid: PropTypes.bool,\n  /** Format for dark backgrounds. */\n  inverted: PropTypes.bool,\n  /** Adds some basic styling to accordion panels. */\n  styled: PropTypes.bool\n} : {};\nAccordion.Accordion = AccordionAccordion;\nAccordion.Content = AccordionContent;\nAccordion.Title = AccordionTitle;\nexport default Accordion;","map":{"version":3,"names":["_extends","cx","PropTypes","React","getUnhandledProps","META","useKeyOnly","AccordionAccordion","AccordionContent","AccordionTitle","Accordion","props","className","fluid","inverted","styled","classes","rest","createElement","handledProps","_meta","name","type","TYPES","MODULE","propTypes","process","env","NODE_ENV","string","bool","Content","Title"],"sources":["C:/Users/sam/final/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/modules/Accordion/Accordion.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\r\nimport cx from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport { getUnhandledProps, META, useKeyOnly } from '../../lib';\r\nimport AccordionAccordion from './AccordionAccordion';\r\nimport AccordionContent from './AccordionContent';\r\nimport AccordionTitle from './AccordionTitle';\r\n\r\n/**\r\n * An accordion allows users to toggle the display of sections of content.\r\n */\r\nfunction Accordion(props) {\r\n  var className = props.className,\r\n      fluid = props.fluid,\r\n      inverted = props.inverted,\r\n      styled = props.styled;\r\n\r\n\r\n  var classes = cx('ui', useKeyOnly(fluid, 'fluid'), useKeyOnly(inverted, 'inverted'), useKeyOnly(styled, 'styled'), className);\r\n  var rest = getUnhandledProps(Accordion, props);\r\n\r\n  return React.createElement(AccordionAccordion, _extends({}, rest, { className: classes }));\r\n}\r\n\r\nAccordion.handledProps = ['className', 'fluid', 'inverted', 'styled'];\r\nAccordion._meta = {\r\n  name: 'Accordion',\r\n  type: META.TYPES.MODULE\r\n};\r\n\r\nAccordion.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** Format to take up the width of its container. */\r\n  fluid: PropTypes.bool,\r\n\r\n  /** Format for dark backgrounds. */\r\n  inverted: PropTypes.bool,\r\n\r\n  /** Adds some basic styling to accordion panels. */\r\n  styled: PropTypes.bool\r\n} : {};\r\n\r\nAccordion.Accordion = AccordionAccordion;\r\nAccordion.Content = AccordionContent;\r\nAccordion.Title = AccordionTitle;\r\n\r\nexport default Accordion;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,+BAA+B;AACpD,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,iBAAiB,EAAEC,IAAI,EAAEC,UAAU,QAAQ,WAAW;AAC/D,OAAOC,kBAAkB,MAAM,sBAAsB;AACrD,OAAOC,gBAAgB,MAAM,oBAAoB;AACjD,OAAOC,cAAc,MAAM,kBAAkB;;AAE7C;AACA;AACA;AACA,SAASC,SAASA,CAACC,KAAK,EAAE;EACxB,IAAIC,SAAS,GAAGD,KAAK,CAACC,SAAS;IAC3BC,KAAK,GAAGF,KAAK,CAACE,KAAK;IACnBC,QAAQ,GAAGH,KAAK,CAACG,QAAQ;IACzBC,MAAM,GAAGJ,KAAK,CAACI,MAAM;EAGzB,IAAIC,OAAO,GAAGf,EAAE,CAAC,IAAI,EAAEK,UAAU,CAACO,KAAK,EAAE,OAAO,CAAC,EAAEP,UAAU,CAACQ,QAAQ,EAAE,UAAU,CAAC,EAAER,UAAU,CAACS,MAAM,EAAE,QAAQ,CAAC,EAAEH,SAAS,CAAC;EAC7H,IAAIK,IAAI,GAAGb,iBAAiB,CAACM,SAAS,EAAEC,KAAK,CAAC;EAE9C,OAAOR,KAAK,CAACe,aAAa,CAACX,kBAAkB,EAAEP,QAAQ,CAAC,CAAC,CAAC,EAAEiB,IAAI,EAAE;IAAEL,SAAS,EAAEI;EAAQ,CAAC,CAAC,CAAC;AAC5F;AAEAN,SAAS,CAACS,YAAY,GAAG,CAAC,WAAW,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,CAAC;AACrET,SAAS,CAACU,KAAK,GAAG;EAChBC,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAEjB,IAAI,CAACkB,KAAK,CAACC;AACnB,CAAC;AAEDd,SAAS,CAACe,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAC5D;EACAhB,SAAS,EAAEV,SAAS,CAAC2B,MAAM;EAE3B;EACAhB,KAAK,EAAEX,SAAS,CAAC4B,IAAI;EAErB;EACAhB,QAAQ,EAAEZ,SAAS,CAAC4B,IAAI;EAExB;EACAf,MAAM,EAAEb,SAAS,CAAC4B;AACpB,CAAC,GAAG,CAAC,CAAC;AAENpB,SAAS,CAACA,SAAS,GAAGH,kBAAkB;AACxCG,SAAS,CAACqB,OAAO,GAAGvB,gBAAgB;AACpCE,SAAS,CAACsB,KAAK,GAAGvB,cAAc;AAEhC,eAAeC,SAAS"},"metadata":{},"sourceType":"module"}