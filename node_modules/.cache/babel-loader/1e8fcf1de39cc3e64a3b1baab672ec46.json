{"ast":null,"code":"/**\n * The code in the <project-logo></project-logo> area\n * must not be changed.\n *\n * @see http://bpmn.io/license for more information.\n */\nimport { assign, find, isNumber, omit } from 'min-dash';\nimport { domify, query as domQuery, remove as domRemove } from 'min-dom';\nimport { innerSVG } from 'tiny-svg';\nimport Diagram from 'diagram-js';\nimport BpmnModdle from 'bpmn-moddle';\nimport inherits from 'inherits';\nimport { importBpmnDiagram } from './import/Importer';\nimport { wrapForCompatibility } from './util/CompatibilityUtil';\n\n/**\n * A base viewer for BPMN 2.0 diagrams.\n *\n * Have a look at {@link Viewer}, {@link NavigatedViewer} or {@link Modeler} for\n * bundles that include actual features.\n *\n * @param {Object} [options] configuration options to pass to the viewer\n * @param {DOMElement} [options.container] the container to render the viewer in, defaults to body.\n * @param {string|number} [options.width] the width of the viewer\n * @param {string|number} [options.height] the height of the viewer\n * @param {Object} [options.moddleExtensions] extension packages to provide\n * @param {Array<didi.Module>} [options.modules] a list of modules to override the default modules\n * @param {Array<didi.Module>} [options.additionalModules] a list of modules to use with the default modules\n */\nexport default function BaseViewer(options) {\n  options = assign({}, DEFAULT_OPTIONS, options);\n  this._moddle = this._createModdle(options);\n  this._container = this._createContainer(options);\n\n  /* <project-logo> */\n\n  addProjectLogo(this._container);\n\n  /* </project-logo> */\n\n  this._init(this._container, this._moddle, options);\n}\ninherits(BaseViewer, Diagram);\n\n/**\n* The importXML result.\n*\n* @typedef {Object} ImportXMLResult\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n* The importXML error.\n*\n* @typedef {Error} ImportXMLError\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n * Parse and render a BPMN 2.0 diagram.\n *\n * Once finished the viewer reports back the result to the\n * provided callback function with (err, warnings).\n *\n * ## Life-Cycle Events\n *\n * During import the viewer will fire life-cycle events:\n *\n *   * import.parse.start (about to read model from xml)\n *   * import.parse.complete (model read; may have worked or not)\n *   * import.render.start (graphical import start)\n *   * import.render.complete (graphical import finished)\n *   * import.done (everything done)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {string} xml the BPMN 2.0 xml\n * @param {ModdleElement<BPMNDiagram>|string} [bpmnDiagram] BPMN diagram or id of diagram to render (if not provided, the first one will be rendered)\n *\n * Returns {Promise<ImportXMLResult, ImportXMLError>}\n */\nBaseViewer.prototype.importXML = wrapForCompatibility(function importXML(xml, bpmnDiagram) {\n  var self = this;\n  function ParseCompleteEvent(data) {\n    var event = self.get('eventBus').createEvent(data);\n\n    // TODO(nikku): remove with future bpmn-js version\n    Object.defineProperty(event, 'context', {\n      enumerable: true,\n      get: function () {\n        console.warn(new Error('import.parse.complete <context> is deprecated ' + 'and will be removed in future library versions'));\n        return {\n          warnings: data.warnings,\n          references: data.references,\n          elementsById: data.elementsById\n        };\n      }\n    });\n    return event;\n  }\n  return new Promise(function (resolve, reject) {\n    // hook in pre-parse listeners +\n    // allow xml manipulation\n    xml = self._emit('import.parse.start', {\n      xml: xml\n    }) || xml;\n    self._moddle.fromXML(xml, 'bpmn:Definitions').then(function (result) {\n      var definitions = result.rootElement;\n      var references = result.references;\n      var parseWarnings = result.warnings;\n      var elementsById = result.elementsById;\n\n      // hook in post parse listeners +\n      // allow definitions manipulation\n      definitions = self._emit('import.parse.complete', ParseCompleteEvent({\n        error: null,\n        definitions: definitions,\n        elementsById: elementsById,\n        references: references,\n        warnings: parseWarnings\n      })) || definitions;\n      self.importDefinitions(definitions, bpmnDiagram).then(function (result) {\n        var allWarnings = [].concat(parseWarnings, result.warnings || []);\n        self._emit('import.done', {\n          error: null,\n          warnings: allWarnings\n        });\n        return resolve({\n          warnings: allWarnings\n        });\n      }).catch(function (err) {\n        var allWarnings = [].concat(parseWarnings, err.warnings || []);\n        self._emit('import.done', {\n          error: err,\n          warnings: allWarnings\n        });\n        return reject(addWarningsToError(err, allWarnings));\n      });\n    }).catch(function (err) {\n      self._emit('import.parse.complete', {\n        error: err\n      });\n      err = checkValidationError(err);\n      self._emit('import.done', {\n        error: err,\n        warnings: err.warnings\n      });\n      return reject(err);\n    });\n  });\n});\n\n/**\n* The importDefinitions result.\n*\n* @typedef {Object} ImportDefinitionsResult\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n* The importDefinitions error.\n*\n* @typedef {Error} ImportDefinitionsError\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n * Import parsed definitions and render a BPMN 2.0 diagram.\n *\n * Once finished the viewer reports back the result to the\n * provided callback function with (err, warnings).\n *\n * ## Life-Cycle Events\n *\n * During import the viewer will fire life-cycle events:\n *\n *   * import.render.start (graphical import start)\n *   * import.render.complete (graphical import finished)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {ModdleElement<Definitions>} definitions parsed BPMN 2.0 definitions\n * @param {ModdleElement<BPMNDiagram>|string} [bpmnDiagram] BPMN diagram or id of diagram to render (if not provided, the first one will be rendered)\n *\n * Returns {Promise<ImportDefinitionsResult, ImportDefinitionsError>}\n */\nBaseViewer.prototype.importDefinitions = wrapForCompatibility(function importDefinitions(definitions, bpmnDiagram) {\n  var self = this;\n  return new Promise(function (resolve, reject) {\n    self._setDefinitions(definitions);\n    self.open(bpmnDiagram).then(function (result) {\n      var warnings = result.warnings;\n      return resolve({\n        warnings: warnings\n      });\n    }).catch(function (err) {\n      return reject(err);\n    });\n  });\n});\n\n/**\n * The open result.\n *\n * @typedef {Object} OpenResult\n *\n * @property {Array<string>} warnings\n */\n\n/**\n* The open error.\n*\n* @typedef {Error} OpenError\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n * Open diagram of previously imported XML.\n *\n * Once finished the viewer reports back the result to the\n * provided callback function with (err, warnings).\n *\n * ## Life-Cycle Events\n *\n * During switch the viewer will fire life-cycle events:\n *\n *   * import.render.start (graphical import start)\n *   * import.render.complete (graphical import finished)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {string|ModdleElement<BPMNDiagram>} [bpmnDiagramOrId] id or the diagram to open\n *\n * Returns {Promise<OpenResult, OpenError>}\n */\nBaseViewer.prototype.open = wrapForCompatibility(function open(bpmnDiagramOrId) {\n  var definitions = this._definitions;\n  var bpmnDiagram = bpmnDiagramOrId;\n  var self = this;\n  return new Promise(function (resolve, reject) {\n    if (!definitions) {\n      var err1 = new Error('no XML imported');\n      return reject(addWarningsToError(err1, []));\n    }\n    if (typeof bpmnDiagramOrId === 'string') {\n      bpmnDiagram = findBPMNDiagram(definitions, bpmnDiagramOrId);\n      if (!bpmnDiagram) {\n        var err2 = new Error('BPMNDiagram <' + bpmnDiagramOrId + '> not found');\n        return reject(addWarningsToError(err2, []));\n      }\n    }\n\n    // clear existing rendered diagram\n    // catch synchronous exceptions during #clear()\n    try {\n      self.clear();\n    } catch (error) {\n      return reject(addWarningsToError(error, []));\n    }\n\n    // perform graphical import\n    importBpmnDiagram(self, definitions, bpmnDiagram).then(function (result) {\n      var warnings = result.warnings;\n      return resolve({\n        warnings: warnings\n      });\n    }).catch(function (err) {\n      return reject(err);\n    });\n  });\n});\n\n/**\n * The saveXML result.\n *\n * @typedef {Object} SaveXMLResult\n *\n * @property {string} xml\n */\n\n/**\n * Export the currently displayed BPMN 2.0 diagram as\n * a BPMN 2.0 XML document.\n *\n * ## Life-Cycle Events\n *\n * During XML saving the viewer will fire life-cycle events:\n *\n *   * saveXML.start (before serialization)\n *   * saveXML.serialized (after xml generation)\n *   * saveXML.done (everything done)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {Object} [options] export options\n * @param {boolean} [options.format=false] output formatted XML\n * @param {boolean} [options.preamble=true] output preamble\n *\n * Returns {Promise<SaveXMLResult, Error>}\n */\nBaseViewer.prototype.saveXML = wrapForCompatibility(function saveXML(options) {\n  options = options || {};\n  var self = this;\n  var definitions = this._definitions;\n  return new Promise(function (resolve, reject) {\n    if (!definitions) {\n      var err = new Error('no definitions loaded');\n      return reject(err);\n    }\n\n    // allow to fiddle around with definitions\n    definitions = self._emit('saveXML.start', {\n      definitions: definitions\n    }) || definitions;\n    self._moddle.toXML(definitions, options).then(function (result) {\n      var xml = result.xml;\n      try {\n        xml = self._emit('saveXML.serialized', {\n          error: null,\n          xml: xml\n        }) || xml;\n        self._emit('saveXML.done', {\n          error: null,\n          xml: xml\n        });\n      } catch (e) {\n        console.error('error in saveXML life-cycle listener', e);\n      }\n      return resolve({\n        xml: xml\n      });\n    }).catch(function (err) {\n      return reject(err);\n    });\n  });\n});\n\n/**\n * The saveSVG result.\n *\n * @typedef {Object} SaveSVGResult\n *\n * @property {string} svg\n */\n\n/**\n * Export the currently displayed BPMN 2.0 diagram as\n * an SVG image.\n *\n * ## Life-Cycle Events\n *\n * During SVG saving the viewer will fire life-cycle events:\n *\n *   * saveSVG.start (before serialization)\n *   * saveSVG.done (everything done)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {Object} [options]\n *\n * Returns {Promise<SaveSVGResult, Error>}\n */\nBaseViewer.prototype.saveSVG = wrapForCompatibility(function saveSVG(options) {\n  options = options || {};\n  var self = this;\n  return new Promise(function (resolve, reject) {\n    self._emit('saveSVG.start');\n    var svg, err;\n    try {\n      var canvas = self.get('canvas');\n      var contentNode = canvas.getDefaultLayer(),\n        defsNode = domQuery('defs', canvas._svg);\n      var contents = innerSVG(contentNode),\n        defs = defsNode ? '<defs>' + innerSVG(defsNode) + '</defs>' : '';\n      var bbox = contentNode.getBBox();\n      svg = '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' + '<!-- created with bpmn-js / http://bpmn.io -->\\n' + '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n' + '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'width=\"' + bbox.width + '\" height=\"' + bbox.height + '\" ' + 'viewBox=\"' + bbox.x + ' ' + bbox.y + ' ' + bbox.width + ' ' + bbox.height + '\" version=\"1.1\">' + defs + contents + '</svg>';\n    } catch (e) {\n      err = e;\n    }\n    self._emit('saveSVG.done', {\n      error: err,\n      svg: svg\n    });\n    if (!err) {\n      return resolve({\n        svg: svg\n      });\n    }\n    return reject(err);\n  });\n});\n\n/**\n * Get a named diagram service.\n *\n * @example\n *\n * var elementRegistry = viewer.get('elementRegistry');\n * var startEventShape = elementRegistry.get('StartEvent_1');\n *\n * @param {string} name\n *\n * @return {Object} diagram service instance\n *\n * @method BaseViewer#get\n */\n\n/**\n * Invoke a function in the context of this viewer.\n *\n * @example\n *\n * viewer.invoke(function(elementRegistry) {\n *   var startEventShape = elementRegistry.get('StartEvent_1');\n * });\n *\n * @param {Function} fn to be invoked\n *\n * @return {Object} the functions return value\n *\n * @method BaseViewer#invoke\n */\n\nBaseViewer.prototype._setDefinitions = function (definitions) {\n  this._definitions = definitions;\n};\nBaseViewer.prototype.getModules = function () {\n  return this._modules;\n};\n\n/**\n * Remove all drawn elements from the viewer.\n *\n * After calling this method the viewer can still\n * be reused for opening another diagram.\n *\n * @method BaseViewer#clear\n */\nBaseViewer.prototype.clear = function () {\n  if (!this.getDefinitions()) {\n    // no diagram to clear\n    return;\n  }\n\n  // remove businessObject#di binding\n  //\n  // this is necessary, as we establish the bindings\n  // in the BpmnTreeWalker (and assume none are given\n  // on reimport)\n  this.get('elementRegistry').forEach(function (element) {\n    var bo = element.businessObject;\n    if (bo && bo.di) {\n      delete bo.di;\n    }\n  });\n\n  // remove drawn elements\n  Diagram.prototype.clear.call(this);\n};\n\n/**\n * Destroy the viewer instance and remove all its\n * remainders from the document tree.\n */\nBaseViewer.prototype.destroy = function () {\n  // diagram destroy\n  Diagram.prototype.destroy.call(this);\n\n  // dom detach\n  domRemove(this._container);\n};\n\n/**\n * Register an event listener\n *\n * Remove a previously added listener via {@link #off(event, callback)}.\n *\n * @param {string} event\n * @param {number} [priority]\n * @param {Function} callback\n * @param {Object} [that]\n */\nBaseViewer.prototype.on = function (event, priority, callback, target) {\n  return this.get('eventBus').on(event, priority, callback, target);\n};\n\n/**\n * De-register an event listener\n *\n * @param {string} event\n * @param {Function} callback\n */\nBaseViewer.prototype.off = function (event, callback) {\n  this.get('eventBus').off(event, callback);\n};\nBaseViewer.prototype.attachTo = function (parentNode) {\n  if (!parentNode) {\n    throw new Error('parentNode required');\n  }\n\n  // ensure we detach from the\n  // previous, old parent\n  this.detach();\n\n  // unwrap jQuery if provided\n  if (parentNode.get && parentNode.constructor.prototype.jquery) {\n    parentNode = parentNode.get(0);\n  }\n  if (typeof parentNode === 'string') {\n    parentNode = domQuery(parentNode);\n  }\n  parentNode.appendChild(this._container);\n  this._emit('attach', {});\n  this.get('canvas').resized();\n};\nBaseViewer.prototype.getDefinitions = function () {\n  return this._definitions;\n};\nBaseViewer.prototype.detach = function () {\n  var container = this._container,\n    parentNode = container.parentNode;\n  if (!parentNode) {\n    return;\n  }\n  this._emit('detach', {});\n  parentNode.removeChild(container);\n};\nBaseViewer.prototype._init = function (container, moddle, options) {\n  var baseModules = options.modules || this.getModules(),\n    additionalModules = options.additionalModules || [],\n    staticModules = [{\n      bpmnjs: ['value', this],\n      moddle: ['value', moddle]\n    }];\n  var diagramModules = [].concat(staticModules, baseModules, additionalModules);\n  var diagramOptions = assign(omit(options, ['additionalModules']), {\n    canvas: assign({}, options.canvas, {\n      container: container\n    }),\n    modules: diagramModules\n  });\n\n  // invoke diagram constructor\n  Diagram.call(this, diagramOptions);\n  if (options && options.container) {\n    this.attachTo(options.container);\n  }\n};\n\n/**\n * Emit an event on the underlying {@link EventBus}\n *\n * @param  {string} type\n * @param  {Object} event\n *\n * @return {Object} event processing result (if any)\n */\nBaseViewer.prototype._emit = function (type, event) {\n  return this.get('eventBus').fire(type, event);\n};\nBaseViewer.prototype._createContainer = function (options) {\n  var container = domify('<div class=\"bjs-container\"></div>');\n  assign(container.style, {\n    width: ensureUnit(options.width),\n    height: ensureUnit(options.height),\n    position: options.position\n  });\n  return container;\n};\nBaseViewer.prototype._createModdle = function (options) {\n  var moddleOptions = assign({}, this._moddleExtensions, options.moddleExtensions);\n  return new BpmnModdle(moddleOptions);\n};\nBaseViewer.prototype._modules = [];\n\n// helpers ///////////////\n\nfunction addWarningsToError(err, warningsAry) {\n  err.warnings = warningsAry;\n  return err;\n}\nfunction checkValidationError(err) {\n  // check if we can help the user by indicating wrong BPMN 2.0 xml\n  // (in case he or the exporting tool did not get that right)\n\n  var pattern = /unparsable content <([^>]+)> detected([\\s\\S]*)$/;\n  var match = pattern.exec(err.message);\n  if (match) {\n    err.message = 'unparsable content <' + match[1] + '> detected; ' + 'this may indicate an invalid BPMN 2.0 diagram file' + match[2];\n  }\n  return err;\n}\nvar DEFAULT_OPTIONS = {\n  width: '100%',\n  height: '100%',\n  position: 'relative'\n};\n\n/**\n * Ensure the passed argument is a proper unit (defaulting to px)\n */\nfunction ensureUnit(val) {\n  return val + (isNumber(val) ? 'px' : '');\n}\n\n/**\n * Find BPMNDiagram in definitions by ID\n *\n * @param {ModdleElement<Definitions>} definitions\n * @param {string} diagramId\n *\n * @return {ModdleElement<BPMNDiagram>|null}\n */\nfunction findBPMNDiagram(definitions, diagramId) {\n  if (!diagramId) {\n    return null;\n  }\n  return find(definitions.diagrams, function (element) {\n    return element.id === diagramId;\n  }) || null;\n}\n\n/* <project-logo> */\n\nimport { open as openPoweredBy, BPMNIO_IMG, LINK_STYLES as BPMNIO_LINK_STYLES } from './util/PoweredByUtil';\nimport { event as domEvent } from 'min-dom';\n\n/**\n * Adds the project logo to the diagram container as\n * required by the bpmn.io license.\n *\n * @see http://bpmn.io/license\n *\n * @param {Element} container\n */\nfunction addProjectLogo(container) {\n  var img = BPMNIO_IMG;\n  var linkMarkup = '<a href=\"http://bpmn.io\" ' + 'target=\"_blank\" ' + 'class=\"bjs-powered-by\" ' + 'title=\"Powered by bpmn.io\" ' + 'style=\"position: absolute; bottom: 15px; right: 15px; z-index: 100; ' + BPMNIO_LINK_STYLES + '\">' + img + '</a>';\n  var linkElement = domify(linkMarkup);\n  container.appendChild(linkElement);\n  domEvent.bind(linkElement, 'click', function (event) {\n    openPoweredBy();\n    event.preventDefault();\n  });\n}\n\n/* </project-logo> */","map":{"version":3,"names":["assign","find","isNumber","omit","domify","query","domQuery","remove","domRemove","innerSVG","Diagram","BpmnModdle","inherits","importBpmnDiagram","wrapForCompatibility","BaseViewer","options","DEFAULT_OPTIONS","_moddle","_createModdle","_container","_createContainer","addProjectLogo","_init","prototype","importXML","xml","bpmnDiagram","self","ParseCompleteEvent","data","event","get","createEvent","Object","defineProperty","enumerable","console","warn","Error","warnings","references","elementsById","Promise","resolve","reject","_emit","fromXML","then","result","definitions","rootElement","parseWarnings","error","importDefinitions","allWarnings","concat","catch","err","addWarningsToError","checkValidationError","_setDefinitions","open","bpmnDiagramOrId","_definitions","err1","findBPMNDiagram","err2","clear","saveXML","toXML","e","saveSVG","svg","canvas","contentNode","getDefaultLayer","defsNode","_svg","contents","defs","bbox","getBBox","width","height","x","y","getModules","_modules","getDefinitions","forEach","element","bo","businessObject","di","call","destroy","on","priority","callback","target","off","attachTo","parentNode","detach","constructor","jquery","appendChild","resized","container","removeChild","moddle","baseModules","modules","additionalModules","staticModules","bpmnjs","diagramModules","diagramOptions","type","fire","style","ensureUnit","position","moddleOptions","_moddleExtensions","moddleExtensions","warningsAry","pattern","match","exec","message","val","diagramId","diagrams","id","openPoweredBy","BPMNIO_IMG","LINK_STYLES","BPMNIO_LINK_STYLES","domEvent","img","linkMarkup","linkElement","bind","preventDefault"],"sources":["C:/Users/KondalaRaoThota/Truviq_Camunda/camunda-react/node_modules/bpmn-js/lib/BaseViewer.js"],"sourcesContent":["/**\n * The code in the <project-logo></project-logo> area\n * must not be changed.\n *\n * @see http://bpmn.io/license for more information.\n */\nimport {\n  assign,\n  find,\n  isNumber,\n  omit\n} from 'min-dash';\n\nimport {\n  domify,\n  query as domQuery,\n  remove as domRemove\n} from 'min-dom';\n\nimport {\n  innerSVG\n} from 'tiny-svg';\n\nimport Diagram from 'diagram-js';\nimport BpmnModdle from 'bpmn-moddle';\n\nimport inherits from 'inherits';\n\nimport {\n  importBpmnDiagram\n} from './import/Importer';\n\nimport {\n  wrapForCompatibility\n} from './util/CompatibilityUtil';\n\n/**\n * A base viewer for BPMN 2.0 diagrams.\n *\n * Have a look at {@link Viewer}, {@link NavigatedViewer} or {@link Modeler} for\n * bundles that include actual features.\n *\n * @param {Object} [options] configuration options to pass to the viewer\n * @param {DOMElement} [options.container] the container to render the viewer in, defaults to body.\n * @param {string|number} [options.width] the width of the viewer\n * @param {string|number} [options.height] the height of the viewer\n * @param {Object} [options.moddleExtensions] extension packages to provide\n * @param {Array<didi.Module>} [options.modules] a list of modules to override the default modules\n * @param {Array<didi.Module>} [options.additionalModules] a list of modules to use with the default modules\n */\nexport default function BaseViewer(options) {\n\n  options = assign({}, DEFAULT_OPTIONS, options);\n\n  this._moddle = this._createModdle(options);\n\n  this._container = this._createContainer(options);\n\n  /* <project-logo> */\n\n  addProjectLogo(this._container);\n\n  /* </project-logo> */\n\n  this._init(this._container, this._moddle, options);\n}\n\ninherits(BaseViewer, Diagram);\n\n/**\n* The importXML result.\n*\n* @typedef {Object} ImportXMLResult\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n* The importXML error.\n*\n* @typedef {Error} ImportXMLError\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n * Parse and render a BPMN 2.0 diagram.\n *\n * Once finished the viewer reports back the result to the\n * provided callback function with (err, warnings).\n *\n * ## Life-Cycle Events\n *\n * During import the viewer will fire life-cycle events:\n *\n *   * import.parse.start (about to read model from xml)\n *   * import.parse.complete (model read; may have worked or not)\n *   * import.render.start (graphical import start)\n *   * import.render.complete (graphical import finished)\n *   * import.done (everything done)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {string} xml the BPMN 2.0 xml\n * @param {ModdleElement<BPMNDiagram>|string} [bpmnDiagram] BPMN diagram or id of diagram to render (if not provided, the first one will be rendered)\n *\n * Returns {Promise<ImportXMLResult, ImportXMLError>}\n */\nBaseViewer.prototype.importXML = wrapForCompatibility(function importXML(xml, bpmnDiagram) {\n\n  var self = this;\n\n  function ParseCompleteEvent(data) {\n\n    var event = self.get('eventBus').createEvent(data);\n\n    // TODO(nikku): remove with future bpmn-js version\n    Object.defineProperty(event, 'context', {\n      enumerable: true,\n      get: function() {\n\n        console.warn(new Error(\n          'import.parse.complete <context> is deprecated ' +\n          'and will be removed in future library versions'\n        ));\n\n        return {\n          warnings: data.warnings,\n          references: data.references,\n          elementsById: data.elementsById\n        };\n      }\n    });\n\n    return event;\n  }\n\n  return new Promise(function(resolve, reject) {\n\n    // hook in pre-parse listeners +\n    // allow xml manipulation\n    xml = self._emit('import.parse.start', { xml: xml }) || xml;\n\n    self._moddle.fromXML(xml, 'bpmn:Definitions').then(function(result) {\n      var definitions = result.rootElement;\n      var references = result.references;\n      var parseWarnings = result.warnings;\n      var elementsById = result.elementsById;\n\n      // hook in post parse listeners +\n      // allow definitions manipulation\n      definitions = self._emit('import.parse.complete', ParseCompleteEvent({\n        error: null,\n        definitions: definitions,\n        elementsById: elementsById,\n        references: references,\n        warnings: parseWarnings\n      })) || definitions;\n\n      self.importDefinitions(definitions, bpmnDiagram).then(function(result) {\n        var allWarnings = [].concat(parseWarnings, result.warnings || []);\n\n        self._emit('import.done', { error: null, warnings: allWarnings });\n\n        return resolve({ warnings: allWarnings });\n      }).catch(function(err) {\n        var allWarnings = [].concat(parseWarnings, err.warnings || []);\n\n        self._emit('import.done', { error: err, warnings: allWarnings });\n\n        return reject(addWarningsToError(err, allWarnings));\n      });\n    }).catch(function(err) {\n\n      self._emit('import.parse.complete', {\n        error: err\n      });\n\n      err = checkValidationError(err);\n\n      self._emit('import.done', { error: err, warnings: err.warnings });\n\n      return reject(err);\n    });\n  });\n});\n\n/**\n* The importDefinitions result.\n*\n* @typedef {Object} ImportDefinitionsResult\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n* The importDefinitions error.\n*\n* @typedef {Error} ImportDefinitionsError\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n * Import parsed definitions and render a BPMN 2.0 diagram.\n *\n * Once finished the viewer reports back the result to the\n * provided callback function with (err, warnings).\n *\n * ## Life-Cycle Events\n *\n * During import the viewer will fire life-cycle events:\n *\n *   * import.render.start (graphical import start)\n *   * import.render.complete (graphical import finished)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {ModdleElement<Definitions>} definitions parsed BPMN 2.0 definitions\n * @param {ModdleElement<BPMNDiagram>|string} [bpmnDiagram] BPMN diagram or id of diagram to render (if not provided, the first one will be rendered)\n *\n * Returns {Promise<ImportDefinitionsResult, ImportDefinitionsError>}\n */\nBaseViewer.prototype.importDefinitions = wrapForCompatibility(function importDefinitions(definitions, bpmnDiagram) {\n\n  var self = this;\n\n  return new Promise(function(resolve, reject) {\n\n    self._setDefinitions(definitions);\n\n    self.open(bpmnDiagram).then(function(result) {\n\n      var warnings = result.warnings;\n\n      return resolve({ warnings: warnings });\n    }).catch(function(err) {\n\n      return reject(err);\n    });\n  });\n});\n\n/**\n * The open result.\n *\n * @typedef {Object} OpenResult\n *\n * @property {Array<string>} warnings\n */\n\n/**\n* The open error.\n*\n* @typedef {Error} OpenError\n*\n* @property {Array<string>} warnings\n*/\n\n/**\n * Open diagram of previously imported XML.\n *\n * Once finished the viewer reports back the result to the\n * provided callback function with (err, warnings).\n *\n * ## Life-Cycle Events\n *\n * During switch the viewer will fire life-cycle events:\n *\n *   * import.render.start (graphical import start)\n *   * import.render.complete (graphical import finished)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {string|ModdleElement<BPMNDiagram>} [bpmnDiagramOrId] id or the diagram to open\n *\n * Returns {Promise<OpenResult, OpenError>}\n */\nBaseViewer.prototype.open = wrapForCompatibility(function open(bpmnDiagramOrId) {\n\n  var definitions = this._definitions;\n  var bpmnDiagram = bpmnDiagramOrId;\n\n  var self = this;\n\n  return new Promise(function(resolve, reject) {\n    if (!definitions) {\n      var err1 = new Error('no XML imported');\n\n      return reject(addWarningsToError(err1, []));\n    }\n\n    if (typeof bpmnDiagramOrId === 'string') {\n      bpmnDiagram = findBPMNDiagram(definitions, bpmnDiagramOrId);\n\n      if (!bpmnDiagram) {\n        var err2 = new Error('BPMNDiagram <' + bpmnDiagramOrId + '> not found');\n\n        return reject(addWarningsToError(err2, []));\n      }\n    }\n\n    // clear existing rendered diagram\n    // catch synchronous exceptions during #clear()\n    try {\n      self.clear();\n    } catch (error) {\n\n      return reject(addWarningsToError(error, []));\n    }\n\n    // perform graphical import\n    importBpmnDiagram(self, definitions, bpmnDiagram).then(function(result) {\n\n      var warnings = result.warnings;\n\n      return resolve({ warnings: warnings });\n    }).catch(function(err) {\n\n      return reject(err);\n    });\n  });\n});\n\n/**\n * The saveXML result.\n *\n * @typedef {Object} SaveXMLResult\n *\n * @property {string} xml\n */\n\n/**\n * Export the currently displayed BPMN 2.0 diagram as\n * a BPMN 2.0 XML document.\n *\n * ## Life-Cycle Events\n *\n * During XML saving the viewer will fire life-cycle events:\n *\n *   * saveXML.start (before serialization)\n *   * saveXML.serialized (after xml generation)\n *   * saveXML.done (everything done)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {Object} [options] export options\n * @param {boolean} [options.format=false] output formatted XML\n * @param {boolean} [options.preamble=true] output preamble\n *\n * Returns {Promise<SaveXMLResult, Error>}\n */\nBaseViewer.prototype.saveXML = wrapForCompatibility(function saveXML(options) {\n\n  options = options || {};\n\n  var self = this;\n\n  var definitions = this._definitions;\n\n  return new Promise(function(resolve, reject) {\n\n    if (!definitions) {\n      var err = new Error('no definitions loaded');\n\n      return reject(err);\n    }\n\n    // allow to fiddle around with definitions\n    definitions = self._emit('saveXML.start', {\n      definitions: definitions\n    }) || definitions;\n\n    self._moddle.toXML(definitions, options).then(function(result) {\n\n      var xml = result.xml;\n\n      try {\n        xml = self._emit('saveXML.serialized', {\n          error: null,\n          xml: xml\n        }) || xml;\n\n        self._emit('saveXML.done', {\n          error: null,\n          xml: xml\n        });\n      } catch (e) {\n        console.error('error in saveXML life-cycle listener', e);\n      }\n\n      return resolve({ xml: xml });\n    }).catch(function(err) {\n\n      return reject(err);\n    });\n  });\n});\n\n/**\n * The saveSVG result.\n *\n * @typedef {Object} SaveSVGResult\n *\n * @property {string} svg\n */\n\n/**\n * Export the currently displayed BPMN 2.0 diagram as\n * an SVG image.\n *\n * ## Life-Cycle Events\n *\n * During SVG saving the viewer will fire life-cycle events:\n *\n *   * saveSVG.start (before serialization)\n *   * saveSVG.done (everything done)\n *\n * You can use these events to hook into the life-cycle.\n *\n * @param {Object} [options]\n *\n * Returns {Promise<SaveSVGResult, Error>}\n */\nBaseViewer.prototype.saveSVG = wrapForCompatibility(function saveSVG(options) {\n\n  options = options || {};\n\n  var self = this;\n\n  return new Promise(function(resolve, reject) {\n\n    self._emit('saveSVG.start');\n\n    var svg, err;\n\n    try {\n      var canvas = self.get('canvas');\n\n      var contentNode = canvas.getDefaultLayer(),\n          defsNode = domQuery('defs', canvas._svg);\n\n      var contents = innerSVG(contentNode),\n          defs = defsNode ? '<defs>' + innerSVG(defsNode) + '</defs>' : '';\n\n      var bbox = contentNode.getBBox();\n\n      svg =\n        '<?xml version=\"1.0\" encoding=\"utf-8\"?>\\n' +\n        '<!-- created with bpmn-js / http://bpmn.io -->\\n' +\n        '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n' +\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' +\n             'width=\"' + bbox.width + '\" height=\"' + bbox.height + '\" ' +\n             'viewBox=\"' + bbox.x + ' ' + bbox.y + ' ' + bbox.width + ' ' + bbox.height + '\" version=\"1.1\">' +\n          defs + contents +\n        '</svg>';\n    } catch (e) {\n      err = e;\n    }\n\n    self._emit('saveSVG.done', {\n      error: err,\n      svg: svg\n    });\n\n    if (!err) {\n      return resolve({ svg: svg });\n    }\n\n    return reject(err);\n  });\n});\n\n/**\n * Get a named diagram service.\n *\n * @example\n *\n * var elementRegistry = viewer.get('elementRegistry');\n * var startEventShape = elementRegistry.get('StartEvent_1');\n *\n * @param {string} name\n *\n * @return {Object} diagram service instance\n *\n * @method BaseViewer#get\n */\n\n/**\n * Invoke a function in the context of this viewer.\n *\n * @example\n *\n * viewer.invoke(function(elementRegistry) {\n *   var startEventShape = elementRegistry.get('StartEvent_1');\n * });\n *\n * @param {Function} fn to be invoked\n *\n * @return {Object} the functions return value\n *\n * @method BaseViewer#invoke\n */\n\n\nBaseViewer.prototype._setDefinitions = function(definitions) {\n  this._definitions = definitions;\n};\n\nBaseViewer.prototype.getModules = function() {\n  return this._modules;\n};\n\n/**\n * Remove all drawn elements from the viewer.\n *\n * After calling this method the viewer can still\n * be reused for opening another diagram.\n *\n * @method BaseViewer#clear\n */\nBaseViewer.prototype.clear = function() {\n  if (!this.getDefinitions()) {\n\n    // no diagram to clear\n    return;\n  }\n\n  // remove businessObject#di binding\n  //\n  // this is necessary, as we establish the bindings\n  // in the BpmnTreeWalker (and assume none are given\n  // on reimport)\n  this.get('elementRegistry').forEach(function(element) {\n    var bo = element.businessObject;\n\n    if (bo && bo.di) {\n      delete bo.di;\n    }\n  });\n\n  // remove drawn elements\n  Diagram.prototype.clear.call(this);\n};\n\n/**\n * Destroy the viewer instance and remove all its\n * remainders from the document tree.\n */\nBaseViewer.prototype.destroy = function() {\n\n  // diagram destroy\n  Diagram.prototype.destroy.call(this);\n\n  // dom detach\n  domRemove(this._container);\n};\n\n/**\n * Register an event listener\n *\n * Remove a previously added listener via {@link #off(event, callback)}.\n *\n * @param {string} event\n * @param {number} [priority]\n * @param {Function} callback\n * @param {Object} [that]\n */\nBaseViewer.prototype.on = function(event, priority, callback, target) {\n  return this.get('eventBus').on(event, priority, callback, target);\n};\n\n/**\n * De-register an event listener\n *\n * @param {string} event\n * @param {Function} callback\n */\nBaseViewer.prototype.off = function(event, callback) {\n  this.get('eventBus').off(event, callback);\n};\n\nBaseViewer.prototype.attachTo = function(parentNode) {\n\n  if (!parentNode) {\n    throw new Error('parentNode required');\n  }\n\n  // ensure we detach from the\n  // previous, old parent\n  this.detach();\n\n  // unwrap jQuery if provided\n  if (parentNode.get && parentNode.constructor.prototype.jquery) {\n    parentNode = parentNode.get(0);\n  }\n\n  if (typeof parentNode === 'string') {\n    parentNode = domQuery(parentNode);\n  }\n\n  parentNode.appendChild(this._container);\n\n  this._emit('attach', {});\n\n  this.get('canvas').resized();\n};\n\nBaseViewer.prototype.getDefinitions = function() {\n  return this._definitions;\n};\n\nBaseViewer.prototype.detach = function() {\n\n  var container = this._container,\n      parentNode = container.parentNode;\n\n  if (!parentNode) {\n    return;\n  }\n\n  this._emit('detach', {});\n\n  parentNode.removeChild(container);\n};\n\nBaseViewer.prototype._init = function(container, moddle, options) {\n\n  var baseModules = options.modules || this.getModules(),\n      additionalModules = options.additionalModules || [],\n      staticModules = [\n        {\n          bpmnjs: [ 'value', this ],\n          moddle: [ 'value', moddle ]\n        }\n      ];\n\n  var diagramModules = [].concat(staticModules, baseModules, additionalModules);\n\n  var diagramOptions = assign(omit(options, [ 'additionalModules' ]), {\n    canvas: assign({}, options.canvas, { container: container }),\n    modules: diagramModules\n  });\n\n  // invoke diagram constructor\n  Diagram.call(this, diagramOptions);\n\n  if (options && options.container) {\n    this.attachTo(options.container);\n  }\n};\n\n/**\n * Emit an event on the underlying {@link EventBus}\n *\n * @param  {string} type\n * @param  {Object} event\n *\n * @return {Object} event processing result (if any)\n */\nBaseViewer.prototype._emit = function(type, event) {\n  return this.get('eventBus').fire(type, event);\n};\n\nBaseViewer.prototype._createContainer = function(options) {\n\n  var container = domify('<div class=\"bjs-container\"></div>');\n\n  assign(container.style, {\n    width: ensureUnit(options.width),\n    height: ensureUnit(options.height),\n    position: options.position\n  });\n\n  return container;\n};\n\nBaseViewer.prototype._createModdle = function(options) {\n  var moddleOptions = assign({}, this._moddleExtensions, options.moddleExtensions);\n\n  return new BpmnModdle(moddleOptions);\n};\n\nBaseViewer.prototype._modules = [];\n\n// helpers ///////////////\n\nfunction addWarningsToError(err, warningsAry) {\n  err.warnings = warningsAry;\n  return err;\n}\n\nfunction checkValidationError(err) {\n\n  // check if we can help the user by indicating wrong BPMN 2.0 xml\n  // (in case he or the exporting tool did not get that right)\n\n  var pattern = /unparsable content <([^>]+)> detected([\\s\\S]*)$/;\n  var match = pattern.exec(err.message);\n\n  if (match) {\n    err.message =\n      'unparsable content <' + match[1] + '> detected; ' +\n      'this may indicate an invalid BPMN 2.0 diagram file' + match[2];\n  }\n\n  return err;\n}\n\nvar DEFAULT_OPTIONS = {\n  width: '100%',\n  height: '100%',\n  position: 'relative'\n};\n\n\n/**\n * Ensure the passed argument is a proper unit (defaulting to px)\n */\nfunction ensureUnit(val) {\n  return val + (isNumber(val) ? 'px' : '');\n}\n\n\n/**\n * Find BPMNDiagram in definitions by ID\n *\n * @param {ModdleElement<Definitions>} definitions\n * @param {string} diagramId\n *\n * @return {ModdleElement<BPMNDiagram>|null}\n */\nfunction findBPMNDiagram(definitions, diagramId) {\n  if (!diagramId) {\n    return null;\n  }\n\n  return find(definitions.diagrams, function(element) {\n    return element.id === diagramId;\n  }) || null;\n}\n\n\n/* <project-logo> */\n\nimport {\n  open as openPoweredBy,\n  BPMNIO_IMG,\n  LINK_STYLES as BPMNIO_LINK_STYLES\n} from './util/PoweredByUtil';\n\nimport {\n  event as domEvent\n} from 'min-dom';\n\n/**\n * Adds the project logo to the diagram container as\n * required by the bpmn.io license.\n *\n * @see http://bpmn.io/license\n *\n * @param {Element} container\n */\nfunction addProjectLogo(container) {\n  var img = BPMNIO_IMG;\n\n  var linkMarkup =\n    '<a href=\"http://bpmn.io\" ' +\n       'target=\"_blank\" ' +\n       'class=\"bjs-powered-by\" ' +\n       'title=\"Powered by bpmn.io\" ' +\n       'style=\"position: absolute; bottom: 15px; right: 15px; z-index: 100; ' + BPMNIO_LINK_STYLES + '\">' +\n      img +\n    '</a>';\n\n  var linkElement = domify(linkMarkup);\n\n  container.appendChild(linkElement);\n\n  domEvent.bind(linkElement, 'click', function(event) {\n    openPoweredBy();\n\n    event.preventDefault();\n  });\n}\n\n/* </project-logo> */\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}