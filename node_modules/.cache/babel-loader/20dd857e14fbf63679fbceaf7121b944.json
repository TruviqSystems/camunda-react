{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sam\\\\final\\\\camunda-react\\\\src\\\\containers\\\\TasklistPage.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, Link } from 'react-router-dom';\nimport { List, Grid } from 'semantic-ui-react';\nimport { loadTasks } from '../actions';\nimport Taskform from '../components/Taskform';\nimport sortBy from 'lodash/sortBy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TasklistPage extends Component {\n  componentWillMount() {\n    this.props.loadTasks();\n  }\n  renderItem(task) {\n    return /*#__PURE__*/_jsxDEV(List.Item, {\n      children: [/*#__PURE__*/_jsxDEV(List.Icon, {\n        name: \"browser\",\n        size: \"large\",\n        verticalAlign: \"middle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(List.Content, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/tasklist/${task.processDefinitionId}/${task.id}`,\n          children: [/*#__PURE__*/_jsxDEV(List.Header, {\n            children: task.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(List.Description, {\n            children: task.created\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this)]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  }\n  render() {\n    let {\n      task\n    } = this.props;\n    let taskForm = '';\n    if (this.props.processDefinitionId) {\n      taskForm = /*#__PURE__*/_jsxDEV(Taskform, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 18\n      }, this);\n    } else {\n      taskForm = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Please choose task.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 18\n      }, this);\n    }\n    if (!task) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 15\n      }, this);\n    } else {\n      task = sortBy(task, 'created').reverse();\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        divided: true,\n        columns: 3,\n        centered: true,\n        children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n            width: 4,\n            children: /*#__PURE__*/_jsxDEV(List, {\n              divided: true,\n              relaxed: true,\n              children: task.map(item => this.renderItem(item))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n            width: 12,\n            children: taskForm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this);\n    }\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  const params = ownProps.match.params;\n  return {\n    ...params,\n    ...state.entities\n  };\n};\nexport default withRouter(connect(mapStateToProps, {\n  loadTasks\n})(TasklistPage));","map":{"version":3,"names":["React","Component","connect","withRouter","Link","List","Grid","loadTasks","Taskform","sortBy","jsxDEV","_jsxDEV","TasklistPage","componentWillMount","props","renderItem","task","Item","children","Icon","name","size","verticalAlign","fileName","_jsxFileName","lineNumber","columnNumber","Content","to","processDefinitionId","id","Header","Description","created","render","taskForm","reverse","divided","columns","centered","Row","Column","width","relaxed","map","item","mapStateToProps","state","ownProps","params","match","entities"],"sources":["C:/Users/sam/final/camunda-react/src/containers/TasklistPage.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport { List, Grid } from 'semantic-ui-react'\r\nimport { loadTasks } from '../actions'\r\nimport Taskform from '../components/Taskform'\r\nimport sortBy from 'lodash/sortBy'\r\n\r\nclass TasklistPage extends Component {\r\n  componentWillMount() {\r\n    this.props.loadTasks();\r\n  }\r\n\r\n  renderItem(task) {\r\n    return (<List.Item key={task.id}>\r\n      <List.Icon name='browser' size='large' verticalAlign='middle' />\r\n      <List.Content>\r\n        <Link to={`/tasklist/${task.processDefinitionId}/${task.id}`}>\r\n          <List.Header>{task.name}</List.Header>\r\n          <List.Description>{task.created}</List.Description>\r\n        </Link>\r\n      </List.Content>\r\n    </List.Item>)\r\n  }\r\n\r\n  render() {\r\n    let { task } = this.props\r\n    let taskForm = ''\r\n    if (this.props.processDefinitionId) {\r\n      taskForm = <Taskform/>\r\n    } else {\r\n      taskForm = <div>Please choose task.</div>\r\n    }\r\n\r\n    if (!task) {\r\n      return (<div>Loading tasks</div>)\r\n    } else {\r\n      task = sortBy(task, 'created').reverse()\r\n      return (\r\n        <Grid divided columns={3} centered>\r\n          <Grid.Row>\r\n            <Grid.Column width={4}>\r\n              <List divided relaxed>\r\n              {task.map((item) => this.renderItem(item))}\r\n              </List>\r\n            </Grid.Column>\r\n            <Grid.Column width={12}>\r\n              {taskForm}\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        </Grid>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const params = ownProps.match.params\r\n  return {\r\n    ...params,\r\n    ...state.entities\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, {\r\n  loadTasks\r\n})(TasklistPage))\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}