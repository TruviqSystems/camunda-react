{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, META, useKeyOnly } from '../../lib';\n\n/**\r\n * A modal can contain content.\r\n */\nfunction ModalContent(props) {\n  var children = props.children,\n    className = props.className,\n    content = props.content,\n    image = props.image,\n    scrolling = props.scrolling;\n  var classes = cx(className, useKeyOnly(image, 'image'), useKeyOnly(scrolling, 'scrolling'), 'content');\n  var rest = getUnhandledProps(ModalContent, props);\n  var ElementType = getElementType(ModalContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\nModalContent.handledProps = ['as', 'children', 'className', 'content', 'image', 'scrolling'];\nModalContent._meta = {\n  name: 'ModalContent',\n  type: META.TYPES.MODULE,\n  parent: 'Modal'\n};\nModalContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n  /** A modal can contain image content. */\n  image: PropTypes.bool,\n  /** A modal can use the entire size of the screen. */\n  scrolling: PropTypes.bool\n} : {};\nModalContent.create = createShorthandFactory(ModalContent, function (content) {\n  return {\n    content: content\n  };\n});\nexport default ModalContent;","map":{"version":3,"names":["_extends","cx","PropTypes","React","childrenUtils","createShorthandFactory","customPropTypes","getElementType","getUnhandledProps","META","useKeyOnly","ModalContent","props","children","className","content","image","scrolling","classes","rest","ElementType","createElement","isNil","handledProps","_meta","name","type","TYPES","MODULE","parent","propTypes","process","env","NODE_ENV","as","node","string","contentShorthand","bool","create"],"sources":["C:/Users/sam/final/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/modules/Modal/ModalContent.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\r\nimport cx from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, META, useKeyOnly } from '../../lib';\r\n\r\n/**\r\n * A modal can contain content.\r\n */\r\nfunction ModalContent(props) {\r\n  var children = props.children,\r\n      className = props.className,\r\n      content = props.content,\r\n      image = props.image,\r\n      scrolling = props.scrolling;\r\n\r\n\r\n  var classes = cx(className, useKeyOnly(image, 'image'), useKeyOnly(scrolling, 'scrolling'), 'content');\r\n  var rest = getUnhandledProps(ModalContent, props);\r\n  var ElementType = getElementType(ModalContent, props);\r\n\r\n  return React.createElement(\r\n    ElementType,\r\n    _extends({}, rest, { className: classes }),\r\n    childrenUtils.isNil(children) ? content : children\r\n  );\r\n}\r\n\r\nModalContent.handledProps = ['as', 'children', 'className', 'content', 'image', 'scrolling'];\r\nModalContent._meta = {\r\n  name: 'ModalContent',\r\n  type: META.TYPES.MODULE,\r\n  parent: 'Modal'\r\n};\r\n\r\nModalContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: customPropTypes.as,\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** Shorthand for primary content. */\r\n  content: customPropTypes.contentShorthand,\r\n\r\n  /** A modal can contain image content. */\r\n  image: PropTypes.bool,\r\n\r\n  /** A modal can use the entire size of the screen. */\r\n  scrolling: PropTypes.bool\r\n} : {};\r\n\r\nModalContent.create = createShorthandFactory(ModalContent, function (content) {\r\n  return { content: content };\r\n});\r\n\r\nexport default ModalContent;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,+BAA+B;AACpD,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,aAAa,EAAEC,sBAAsB,EAAEC,eAAe,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,IAAI,EAAEC,UAAU,QAAQ,WAAW;;AAEvI;AACA;AACA;AACA,SAASC,YAAYA,CAACC,KAAK,EAAE;EAC3B,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;IACzBC,SAAS,GAAGF,KAAK,CAACE,SAAS;IAC3BC,OAAO,GAAGH,KAAK,CAACG,OAAO;IACvBC,KAAK,GAAGJ,KAAK,CAACI,KAAK;IACnBC,SAAS,GAAGL,KAAK,CAACK,SAAS;EAG/B,IAAIC,OAAO,GAAGjB,EAAE,CAACa,SAAS,EAAEJ,UAAU,CAACM,KAAK,EAAE,OAAO,CAAC,EAAEN,UAAU,CAACO,SAAS,EAAE,WAAW,CAAC,EAAE,SAAS,CAAC;EACtG,IAAIE,IAAI,GAAGX,iBAAiB,CAACG,YAAY,EAAEC,KAAK,CAAC;EACjD,IAAIQ,WAAW,GAAGb,cAAc,CAACI,YAAY,EAAEC,KAAK,CAAC;EAErD,OAAOT,KAAK,CAACkB,aAAa,CACxBD,WAAW,EACXpB,QAAQ,CAAC,CAAC,CAAC,EAAEmB,IAAI,EAAE;IAAEL,SAAS,EAAEI;EAAQ,CAAC,CAAC,EAC1Cd,aAAa,CAACkB,KAAK,CAACT,QAAQ,CAAC,GAAGE,OAAO,GAAGF,QAAQ,CACnD;AACH;AAEAF,YAAY,CAACY,YAAY,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,OAAO,EAAE,WAAW,CAAC;AAC5FZ,YAAY,CAACa,KAAK,GAAG;EACnBC,IAAI,EAAE,cAAc;EACpBC,IAAI,EAAEjB,IAAI,CAACkB,KAAK,CAACC,MAAM;EACvBC,MAAM,EAAE;AACV,CAAC;AAEDlB,YAAY,CAACmB,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAC/D;EACAC,EAAE,EAAE5B,eAAe,CAAC4B,EAAE;EAEtB;EACArB,QAAQ,EAAEX,SAAS,CAACiC,IAAI;EAExB;EACArB,SAAS,EAAEZ,SAAS,CAACkC,MAAM;EAE3B;EACArB,OAAO,EAAET,eAAe,CAAC+B,gBAAgB;EAEzC;EACArB,KAAK,EAAEd,SAAS,CAACoC,IAAI;EAErB;EACArB,SAAS,EAAEf,SAAS,CAACoC;AACvB,CAAC,GAAG,CAAC,CAAC;AAEN3B,YAAY,CAAC4B,MAAM,GAAGlC,sBAAsB,CAACM,YAAY,EAAE,UAAUI,OAAO,EAAE;EAC5E,OAAO;IAAEA,OAAO,EAAEA;EAAQ,CAAC;AAC7B,CAAC,CAAC;AAEF,eAAeJ,YAAY"},"metadata":{},"sourceType":"module"}