{"ast":null,"code":"import { isRefObject } from '@fluentui/react-component-ref';\nimport React from 'react';\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\nvar CLASS_NAME_DELITIMITER = /\\s+/;\n/**\r\n * Accepts a set of ref objects that contain classnames as a string and returns an array of unique\r\n * classNames.\r\n *\r\n * @param {Set<React.RefObject>|undefined} classNameRefs\r\n * @returns String[]\r\n */\n\nexport function computeClassNames(classNameRefs) {\n  var classNames = [];\n  if (classNameRefs) {\n    classNameRefs.forEach(function (classNameRef) {\n      if (typeof classNameRef.current === 'string') {\n        var classNamesForRef = classNameRef.current.split(CLASS_NAME_DELITIMITER);\n        classNamesForRef.forEach(function (className) {\n          classNames.push(className);\n        });\n      }\n    });\n    return classNames.filter(function (className, i, array) {\n      return className.length > 0 && array.indexOf(className) === i;\n    });\n  }\n  return [];\n}\n/**\r\n * Computes classnames that should be removed and added to a node based on input differences.\r\n *\r\n * @param {String[]} prevClassNames\r\n * @param {String[]} currentClassNames\r\n */\n\nexport function computeClassNamesDifference(prevClassNames, currentClassNames) {\n  return [currentClassNames.filter(function (className) {\n    return prevClassNames.indexOf(className) === -1;\n  }), prevClassNames.filter(function (className) {\n    return currentClassNames.indexOf(className) === -1;\n  })];\n}\nvar prevClassNames = new Map();\n/**\r\n * @param {HTMLElement} node\r\n * @param {Set<React.RefObject>|undefined} classNameRefs\r\n */\n\nexport var handleClassNamesChange = function handleClassNamesChange(node, classNameRefs) {\n  var currentClassNames = computeClassNames(classNameRefs);\n  var _computeClassNamesDif = computeClassNamesDifference(prevClassNames.get(node) || [], currentClassNames),\n    forAdd = _computeClassNamesDif[0],\n    forRemoval = _computeClassNamesDif[1];\n  if (node) {\n    forAdd.forEach(function (className) {\n      return node.classList.add(className);\n    });\n    forRemoval.forEach(function (className) {\n      return node.classList.remove(className);\n    });\n  }\n  prevClassNames.set(node, currentClassNames);\n};\nexport var NodeRegistry = function NodeRegistry() {\n  var _this = this;\n  this.add = function (node, classNameRef) {\n    if (_this.nodes.has(node)) {\n      var _set = _this.nodes.get(node);\n      _set.add(classNameRef);\n      return;\n    } // IE11 does not support constructor params\n\n    var set = new Set();\n    set.add(classNameRef);\n    _this.nodes.set(node, set);\n  };\n  this.del = function (node, classNameRef) {\n    if (!_this.nodes.has(node)) {\n      return;\n    }\n    var set = _this.nodes.get(node);\n    if (set.size === 1) {\n      _this.nodes.delete(node);\n      return;\n    }\n    set.delete(classNameRef);\n  };\n  this.emit = function (node, callback) {\n    callback(node, _this.nodes.get(node));\n  };\n  this.nodes = new Map();\n};\nvar nodeRegistry = new NodeRegistry();\n/**\r\n * A React hooks that allows to manage classNames on a DOM node in declarative manner. Accepts\r\n * a HTML element or React ref objects with it.\r\n *\r\n * @param {HTMLElement|React.RefObject} node\r\n * @param {String} className\r\n */\n\nexport default function useClassNamesOnNode(node, className) {\n  var classNameRef = React.useRef();\n  var isMounted = React.useRef(false);\n  useIsomorphicLayoutEffect(function () {\n    classNameRef.current = className;\n    if (isMounted.current) {\n      var element = isRefObject(node) ? node.current : node;\n      nodeRegistry.emit(element, handleClassNamesChange);\n    }\n    isMounted.current = true;\n  }, [className]);\n  useIsomorphicLayoutEffect(function () {\n    var element = isRefObject(node) ? node.current : node;\n    nodeRegistry.add(element, classNameRef);\n    nodeRegistry.emit(element, handleClassNamesChange);\n    return function () {\n      nodeRegistry.del(element, classNameRef);\n      nodeRegistry.emit(element, handleClassNamesChange);\n    };\n  }, [node]);\n}","map":{"version":3,"names":["isRefObject","React","useIsomorphicLayoutEffect","CLASS_NAME_DELITIMITER","computeClassNames","classNameRefs","classNames","forEach","classNameRef","current","classNamesForRef","split","className","push","filter","i","array","length","indexOf","computeClassNamesDifference","prevClassNames","currentClassNames","Map","handleClassNamesChange","node","_computeClassNamesDif","get","forAdd","forRemoval","classList","add","remove","set","NodeRegistry","_this","nodes","has","_set","Set","del","size","delete","emit","callback","nodeRegistry","useClassNamesOnNode","useRef","isMounted","element"],"sources":["C:/Users/sam/final/camunda-react/node_modules/semantic-ui-react/dist/es/lib/hooks/useClassNamesOnNode.js"],"sourcesContent":["import { isRefObject } from '@fluentui/react-component-ref';\r\nimport React from 'react';\r\nimport useIsomorphicLayoutEffect from './useIsomorphicLayoutEffect';\r\nvar CLASS_NAME_DELITIMITER = /\\s+/;\r\n/**\r\n * Accepts a set of ref objects that contain classnames as a string and returns an array of unique\r\n * classNames.\r\n *\r\n * @param {Set<React.RefObject>|undefined} classNameRefs\r\n * @returns String[]\r\n */\r\n\r\nexport function computeClassNames(classNameRefs) {\r\n  var classNames = [];\r\n\r\n  if (classNameRefs) {\r\n    classNameRefs.forEach(function (classNameRef) {\r\n      if (typeof classNameRef.current === 'string') {\r\n        var classNamesForRef = classNameRef.current.split(CLASS_NAME_DELITIMITER);\r\n        classNamesForRef.forEach(function (className) {\r\n          classNames.push(className);\r\n        });\r\n      }\r\n    });\r\n    return classNames.filter(function (className, i, array) {\r\n      return className.length > 0 && array.indexOf(className) === i;\r\n    });\r\n  }\r\n\r\n  return [];\r\n}\r\n/**\r\n * Computes classnames that should be removed and added to a node based on input differences.\r\n *\r\n * @param {String[]} prevClassNames\r\n * @param {String[]} currentClassNames\r\n */\r\n\r\nexport function computeClassNamesDifference(prevClassNames, currentClassNames) {\r\n  return [currentClassNames.filter(function (className) {\r\n    return prevClassNames.indexOf(className) === -1;\r\n  }), prevClassNames.filter(function (className) {\r\n    return currentClassNames.indexOf(className) === -1;\r\n  })];\r\n}\r\nvar prevClassNames = new Map();\r\n/**\r\n * @param {HTMLElement} node\r\n * @param {Set<React.RefObject>|undefined} classNameRefs\r\n */\r\n\r\nexport var handleClassNamesChange = function handleClassNamesChange(node, classNameRefs) {\r\n  var currentClassNames = computeClassNames(classNameRefs);\r\n\r\n  var _computeClassNamesDif = computeClassNamesDifference(prevClassNames.get(node) || [], currentClassNames),\r\n      forAdd = _computeClassNamesDif[0],\r\n      forRemoval = _computeClassNamesDif[1];\r\n\r\n  if (node) {\r\n    forAdd.forEach(function (className) {\r\n      return node.classList.add(className);\r\n    });\r\n    forRemoval.forEach(function (className) {\r\n      return node.classList.remove(className);\r\n    });\r\n  }\r\n\r\n  prevClassNames.set(node, currentClassNames);\r\n};\r\nexport var NodeRegistry = function NodeRegistry() {\r\n  var _this = this;\r\n\r\n  this.add = function (node, classNameRef) {\r\n    if (_this.nodes.has(node)) {\r\n      var _set = _this.nodes.get(node);\r\n\r\n      _set.add(classNameRef);\r\n\r\n      return;\r\n    } // IE11 does not support constructor params\r\n\r\n\r\n    var set = new Set();\r\n    set.add(classNameRef);\r\n\r\n    _this.nodes.set(node, set);\r\n  };\r\n\r\n  this.del = function (node, classNameRef) {\r\n    if (!_this.nodes.has(node)) {\r\n      return;\r\n    }\r\n\r\n    var set = _this.nodes.get(node);\r\n\r\n    if (set.size === 1) {\r\n      _this.nodes.delete(node);\r\n\r\n      return;\r\n    }\r\n\r\n    set.delete(classNameRef);\r\n  };\r\n\r\n  this.emit = function (node, callback) {\r\n    callback(node, _this.nodes.get(node));\r\n  };\r\n\r\n  this.nodes = new Map();\r\n};\r\nvar nodeRegistry = new NodeRegistry();\r\n/**\r\n * A React hooks that allows to manage classNames on a DOM node in declarative manner. Accepts\r\n * a HTML element or React ref objects with it.\r\n *\r\n * @param {HTMLElement|React.RefObject} node\r\n * @param {String} className\r\n */\r\n\r\nexport default function useClassNamesOnNode(node, className) {\r\n  var classNameRef = React.useRef();\r\n  var isMounted = React.useRef(false);\r\n  useIsomorphicLayoutEffect(function () {\r\n    classNameRef.current = className;\r\n\r\n    if (isMounted.current) {\r\n      var element = isRefObject(node) ? node.current : node;\r\n      nodeRegistry.emit(element, handleClassNamesChange);\r\n    }\r\n\r\n    isMounted.current = true;\r\n  }, [className]);\r\n  useIsomorphicLayoutEffect(function () {\r\n    var element = isRefObject(node) ? node.current : node;\r\n    nodeRegistry.add(element, classNameRef);\r\n    nodeRegistry.emit(element, handleClassNamesChange);\r\n    return function () {\r\n      nodeRegistry.del(element, classNameRef);\r\n      nodeRegistry.emit(element, handleClassNamesChange);\r\n    };\r\n  }, [node]);\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}