{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, useKeyOnly } from '../../lib';\n\n/**\r\n * A comment can contain an action.\r\n */\nfunction CommentAction(props) {\n  var active = props.active,\n    className = props.className,\n    children = props.children,\n    content = props.content;\n  var classes = cx(useKeyOnly(active, 'active'), className);\n  var rest = getUnhandledProps(CommentAction, props);\n  var ElementType = getElementType(CommentAction, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\nCommentAction.handledProps = ['active', 'as', 'children', 'className', 'content'];\nCommentAction._meta = {\n  name: 'CommentAction',\n  parent: 'Comment',\n  type: META.TYPES.VIEW\n};\nCommentAction.defaultProps = {\n  as: 'a'\n};\nCommentAction.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n  /** Style as the currently active action. */\n  active: PropTypes.bool,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand\n} : {};\nexport default CommentAction;","map":{"version":3,"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","META","useKeyOnly","CommentAction","props","active","className","children","content","classes","rest","ElementType","createElement","isNil","handledProps","_meta","name","parent","type","TYPES","VIEW","defaultProps","as","propTypes","process","env","NODE_ENV","bool","node","string","contentShorthand"],"sources":["C:/Users/sam/final/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/views/Comment/CommentAction.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\r\nimport cx from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, useKeyOnly } from '../../lib';\r\n\r\n/**\r\n * A comment can contain an action.\r\n */\r\nfunction CommentAction(props) {\r\n  var active = props.active,\r\n      className = props.className,\r\n      children = props.children,\r\n      content = props.content;\r\n\r\n\r\n  var classes = cx(useKeyOnly(active, 'active'), className);\r\n  var rest = getUnhandledProps(CommentAction, props);\r\n  var ElementType = getElementType(CommentAction, props);\r\n\r\n  return React.createElement(\r\n    ElementType,\r\n    _extends({}, rest, { className: classes }),\r\n    childrenUtils.isNil(children) ? content : children\r\n  );\r\n}\r\n\r\nCommentAction.handledProps = ['active', 'as', 'children', 'className', 'content'];\r\nCommentAction._meta = {\r\n  name: 'CommentAction',\r\n  parent: 'Comment',\r\n  type: META.TYPES.VIEW\r\n};\r\n\r\nCommentAction.defaultProps = {\r\n  as: 'a'\r\n};\r\n\r\nCommentAction.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: customPropTypes.as,\r\n\r\n  /** Style as the currently active action. */\r\n  active: PropTypes.bool,\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** Shorthand for primary content. */\r\n  content: customPropTypes.contentShorthand\r\n} : {};\r\n\r\nexport default CommentAction;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,+BAA+B;AACpD,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,aAAa,EAAEC,eAAe,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,IAAI,EAAEC,UAAU,QAAQ,WAAW;;AAE/G;AACA;AACA;AACA,SAASC,aAAaA,CAACC,KAAK,EAAE;EAC5B,IAAIC,MAAM,GAAGD,KAAK,CAACC,MAAM;IACrBC,SAAS,GAAGF,KAAK,CAACE,SAAS;IAC3BC,QAAQ,GAAGH,KAAK,CAACG,QAAQ;IACzBC,OAAO,GAAGJ,KAAK,CAACI,OAAO;EAG3B,IAAIC,OAAO,GAAGf,EAAE,CAACQ,UAAU,CAACG,MAAM,EAAE,QAAQ,CAAC,EAAEC,SAAS,CAAC;EACzD,IAAII,IAAI,GAAGV,iBAAiB,CAACG,aAAa,EAAEC,KAAK,CAAC;EAClD,IAAIO,WAAW,GAAGZ,cAAc,CAACI,aAAa,EAAEC,KAAK,CAAC;EAEtD,OAAOR,KAAK,CAACgB,aAAa,CACxBD,WAAW,EACXlB,QAAQ,CAAC,CAAC,CAAC,EAAEiB,IAAI,EAAE;IAAEJ,SAAS,EAAEG;EAAQ,CAAC,CAAC,EAC1CZ,aAAa,CAACgB,KAAK,CAACN,QAAQ,CAAC,GAAGC,OAAO,GAAGD,QAAQ,CACnD;AACH;AAEAJ,aAAa,CAACW,YAAY,GAAG,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,CAAC;AACjFX,aAAa,CAACY,KAAK,GAAG;EACpBC,IAAI,EAAE,eAAe;EACrBC,MAAM,EAAE,SAAS;EACjBC,IAAI,EAAEjB,IAAI,CAACkB,KAAK,CAACC;AACnB,CAAC;AAEDjB,aAAa,CAACkB,YAAY,GAAG;EAC3BC,EAAE,EAAE;AACN,CAAC;AAEDnB,aAAa,CAACoB,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAChE;EACAJ,EAAE,EAAExB,eAAe,CAACwB,EAAE;EAEtB;EACAjB,MAAM,EAAEV,SAAS,CAACgC,IAAI;EAEtB;EACApB,QAAQ,EAAEZ,SAAS,CAACiC,IAAI;EAExB;EACAtB,SAAS,EAAEX,SAAS,CAACkC,MAAM;EAE3B;EACArB,OAAO,EAAEV,eAAe,CAACgC;AAC3B,CAAC,GAAG,CAAC,CAAC;AAEN,eAAe3B,aAAa"},"metadata":{},"sourceType":"module"}