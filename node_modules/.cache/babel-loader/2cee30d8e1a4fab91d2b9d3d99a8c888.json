{"ast":null,"code":"import { event as domEvent, closest as domClosest } from 'min-dom';\nimport { getStepSize, cap } from './ZoomUtil';\nimport { log10 } from '../../util/Math';\nimport { bind } from 'min-dash';\nvar sign = Math.sign || function (n) {\n  return n >= 0 ? 1 : -1;\n};\nvar RANGE = {\n    min: 0.2,\n    max: 4\n  },\n  NUM_STEPS = 10;\nvar DELTA_THRESHOLD = 0.1;\nvar DEFAULT_SCALE = 0.75;\n\n/**\r\n * An implementation of zooming and scrolling within the\r\n * {@link Canvas} via the mouse wheel.\r\n *\r\n * Mouse wheel zooming / scrolling may be disabled using\r\n * the {@link toggle(enabled)} method.\r\n *\r\n * @param {Object} [config]\r\n * @param {boolean} [config.enabled=true] default enabled state\r\n * @param {number} [config.scale=.75] scroll sensivity\r\n * @param {EventBus} eventBus\r\n * @param {Canvas} canvas\r\n */\nexport default function ZoomScroll(config, eventBus, canvas) {\n  config = config || {};\n  this._enabled = false;\n  this._canvas = canvas;\n  this._container = canvas._container;\n  this._handleWheel = bind(this._handleWheel, this);\n  this._totalDelta = 0;\n  this._scale = config.scale || DEFAULT_SCALE;\n  var self = this;\n  eventBus.on('canvas.init', function (e) {\n    self._init(config.enabled !== false);\n  });\n}\nZoomScroll.$inject = ['config.zoomScroll', 'eventBus', 'canvas'];\nZoomScroll.prototype.scroll = function scroll(delta) {\n  this._canvas.scroll(delta);\n};\nZoomScroll.prototype.reset = function reset() {\n  this._canvas.zoom('fit-viewport');\n};\n\n/**\r\n * Zoom depending on delta.\r\n *\r\n * @param {number} delta\r\n * @param {Object} position\r\n */\nZoomScroll.prototype.zoom = function zoom(delta, position) {\n  // zoom with half the step size of stepZoom\n  var stepSize = getStepSize(RANGE, NUM_STEPS * 2);\n\n  // add until threshold reached\n  this._totalDelta += delta;\n  if (Math.abs(this._totalDelta) > DELTA_THRESHOLD) {\n    this._zoom(delta, position, stepSize);\n\n    // reset\n    this._totalDelta = 0;\n  }\n};\nZoomScroll.prototype._handleWheel = function handleWheel(event) {\n  // event is already handled by '.djs-scrollable'\n  if (domClosest(event.target, '.djs-scrollable', true)) {\n    return;\n  }\n  var element = this._container;\n  event.preventDefault();\n\n  // pinch to zoom is mapped to wheel + ctrlKey = true\n  // in modern browsers (!)\n\n  var isZoom = event.ctrlKey;\n  var isHorizontalScroll = event.shiftKey;\n  var factor = -1 * this._scale,\n    delta;\n  if (isZoom) {\n    factor *= event.deltaMode === 0 ? 0.020 : 0.32;\n  } else {\n    factor *= event.deltaMode === 0 ? 1.0 : 16.0;\n  }\n  if (isZoom) {\n    var elementRect = element.getBoundingClientRect();\n    var offset = {\n      x: event.clientX - elementRect.left,\n      y: event.clientY - elementRect.top\n    };\n    delta = Math.sqrt(Math.pow(event.deltaY, 2) + Math.pow(event.deltaX, 2)) * sign(event.deltaY) * factor;\n\n    // zoom in relative to diagram {x,y} coordinates\n    this.zoom(delta, offset);\n  } else {\n    if (isHorizontalScroll) {\n      delta = {\n        dx: factor * event.deltaY,\n        dy: 0\n      };\n    } else {\n      delta = {\n        dx: factor * event.deltaX,\n        dy: factor * event.deltaY\n      };\n    }\n    this.scroll(delta);\n  }\n};\n\n/**\r\n * Zoom with fixed step size.\r\n *\r\n * @param {number} delta - Zoom delta (1 for zooming in, -1 for out).\r\n * @param {Object} position\r\n */\nZoomScroll.prototype.stepZoom = function stepZoom(delta, position) {\n  var stepSize = getStepSize(RANGE, NUM_STEPS);\n  this._zoom(delta, position, stepSize);\n};\n\n/**\r\n * Zoom in/out given a step size.\r\n *\r\n * @param {number} delta\r\n * @param {Object} position\r\n * @param {number} stepSize\r\n */\nZoomScroll.prototype._zoom = function (delta, position, stepSize) {\n  var canvas = this._canvas;\n  var direction = delta > 0 ? 1 : -1;\n  var currentLinearZoomLevel = log10(canvas.zoom());\n\n  // snap to a proximate zoom step\n  var newLinearZoomLevel = Math.round(currentLinearZoomLevel / stepSize) * stepSize;\n\n  // increase or decrease one zoom step in the given direction\n  newLinearZoomLevel += stepSize * direction;\n\n  // calculate the absolute logarithmic zoom level based on the linear zoom level\n  // (e.g. 2 for an absolute x2 zoom)\n  var newLogZoomLevel = Math.pow(10, newLinearZoomLevel);\n  canvas.zoom(cap(RANGE, newLogZoomLevel), position);\n};\n\n/**\r\n * Toggle the zoom scroll ability via mouse wheel.\r\n *\r\n * @param  {boolean} [newEnabled] new enabled state\r\n */\nZoomScroll.prototype.toggle = function toggle(newEnabled) {\n  var element = this._container;\n  var handleWheel = this._handleWheel;\n  var oldEnabled = this._enabled;\n  if (typeof newEnabled === 'undefined') {\n    newEnabled = !oldEnabled;\n  }\n\n  // only react on actual changes\n  if (oldEnabled !== newEnabled) {\n    // add or remove wheel listener based on\n    // changed enabled state\n    domEvent[newEnabled ? 'bind' : 'unbind'](element, 'wheel', handleWheel, false);\n  }\n  this._enabled = newEnabled;\n  return newEnabled;\n};\nZoomScroll.prototype._init = function (newEnabled) {\n  this.toggle(newEnabled);\n};","map":{"version":3,"names":["event","domEvent","closest","domClosest","getStepSize","cap","log10","bind","sign","Math","n","RANGE","min","max","NUM_STEPS","DELTA_THRESHOLD","DEFAULT_SCALE","ZoomScroll","config","eventBus","canvas","_enabled","_canvas","_container","_handleWheel","_totalDelta","_scale","scale","self","on","e","_init","enabled","$inject","prototype","scroll","delta","reset","zoom","position","stepSize","abs","_zoom","handleWheel","target","element","preventDefault","isZoom","ctrlKey","isHorizontalScroll","shiftKey","factor","deltaMode","elementRect","getBoundingClientRect","offset","x","clientX","left","y","clientY","top","sqrt","pow","deltaY","deltaX","dx","dy","stepZoom","direction","currentLinearZoomLevel","newLinearZoomLevel","round","newLogZoomLevel","toggle","newEnabled","oldEnabled"],"sources":["C:/Users/sam/final/camunda-react/node_modules/diagram-js/lib/navigation/zoomscroll/ZoomScroll.js"],"sourcesContent":["import {\r\n  event as domEvent,\r\n  closest as domClosest\r\n} from 'min-dom';\r\n\r\nimport {\r\n  getStepSize,\r\n  cap\r\n} from './ZoomUtil';\r\n\r\nimport {\r\n  log10\r\n} from '../../util/Math';\r\n\r\nimport {\r\n  bind\r\n} from 'min-dash';\r\n\r\nvar sign = Math.sign || function(n) {\r\n  return n >= 0 ? 1 : -1;\r\n};\r\n\r\nvar RANGE = { min: 0.2, max: 4 },\r\n    NUM_STEPS = 10;\r\n\r\nvar DELTA_THRESHOLD = 0.1;\r\n\r\nvar DEFAULT_SCALE = 0.75;\r\n\r\n/**\r\n * An implementation of zooming and scrolling within the\r\n * {@link Canvas} via the mouse wheel.\r\n *\r\n * Mouse wheel zooming / scrolling may be disabled using\r\n * the {@link toggle(enabled)} method.\r\n *\r\n * @param {Object} [config]\r\n * @param {boolean} [config.enabled=true] default enabled state\r\n * @param {number} [config.scale=.75] scroll sensivity\r\n * @param {EventBus} eventBus\r\n * @param {Canvas} canvas\r\n */\r\nexport default function ZoomScroll(config, eventBus, canvas) {\r\n\r\n  config = config || {};\r\n\r\n  this._enabled = false;\r\n\r\n  this._canvas = canvas;\r\n  this._container = canvas._container;\r\n\r\n  this._handleWheel = bind(this._handleWheel, this);\r\n\r\n  this._totalDelta = 0;\r\n  this._scale = config.scale || DEFAULT_SCALE;\r\n\r\n  var self = this;\r\n\r\n  eventBus.on('canvas.init', function(e) {\r\n    self._init(config.enabled !== false);\r\n  });\r\n}\r\n\r\nZoomScroll.$inject = [\r\n  'config.zoomScroll',\r\n  'eventBus',\r\n  'canvas'\r\n];\r\n\r\nZoomScroll.prototype.scroll = function scroll(delta) {\r\n  this._canvas.scroll(delta);\r\n};\r\n\r\n\r\nZoomScroll.prototype.reset = function reset() {\r\n  this._canvas.zoom('fit-viewport');\r\n};\r\n\r\n/**\r\n * Zoom depending on delta.\r\n *\r\n * @param {number} delta\r\n * @param {Object} position\r\n */\r\nZoomScroll.prototype.zoom = function zoom(delta, position) {\r\n\r\n  // zoom with half the step size of stepZoom\r\n  var stepSize = getStepSize(RANGE, NUM_STEPS * 2);\r\n\r\n  // add until threshold reached\r\n  this._totalDelta += delta;\r\n\r\n  if (Math.abs(this._totalDelta) > DELTA_THRESHOLD) {\r\n    this._zoom(delta, position, stepSize);\r\n\r\n    // reset\r\n    this._totalDelta = 0;\r\n  }\r\n};\r\n\r\n\r\nZoomScroll.prototype._handleWheel = function handleWheel(event) {\r\n\r\n  // event is already handled by '.djs-scrollable'\r\n  if (domClosest(event.target, '.djs-scrollable', true)) {\r\n    return;\r\n  }\r\n\r\n  var element = this._container;\r\n\r\n  event.preventDefault();\r\n\r\n  // pinch to zoom is mapped to wheel + ctrlKey = true\r\n  // in modern browsers (!)\r\n\r\n  var isZoom = event.ctrlKey;\r\n\r\n  var isHorizontalScroll = event.shiftKey;\r\n\r\n  var factor = -1 * this._scale,\r\n      delta;\r\n\r\n  if (isZoom) {\r\n    factor *= event.deltaMode === 0 ? 0.020 : 0.32;\r\n  } else {\r\n    factor *= event.deltaMode === 0 ? 1.0 : 16.0;\r\n  }\r\n\r\n  if (isZoom) {\r\n    var elementRect = element.getBoundingClientRect();\r\n\r\n    var offset = {\r\n      x: event.clientX - elementRect.left,\r\n      y: event.clientY - elementRect.top\r\n    };\r\n\r\n    delta = (\r\n      Math.sqrt(\r\n        Math.pow(event.deltaY, 2) +\r\n        Math.pow(event.deltaX, 2)\r\n      ) * sign(event.deltaY) * factor\r\n    );\r\n\r\n    // zoom in relative to diagram {x,y} coordinates\r\n    this.zoom(delta, offset);\r\n  } else {\r\n\r\n    if (isHorizontalScroll) {\r\n      delta = {\r\n        dx: factor * event.deltaY,\r\n        dy: 0\r\n      };\r\n    } else {\r\n      delta = {\r\n        dx: factor * event.deltaX,\r\n        dy: factor * event.deltaY\r\n      };\r\n    }\r\n\r\n    this.scroll(delta);\r\n  }\r\n};\r\n\r\n/**\r\n * Zoom with fixed step size.\r\n *\r\n * @param {number} delta - Zoom delta (1 for zooming in, -1 for out).\r\n * @param {Object} position\r\n */\r\nZoomScroll.prototype.stepZoom = function stepZoom(delta, position) {\r\n\r\n  var stepSize = getStepSize(RANGE, NUM_STEPS);\r\n\r\n  this._zoom(delta, position, stepSize);\r\n};\r\n\r\n\r\n/**\r\n * Zoom in/out given a step size.\r\n *\r\n * @param {number} delta\r\n * @param {Object} position\r\n * @param {number} stepSize\r\n */\r\nZoomScroll.prototype._zoom = function(delta, position, stepSize) {\r\n  var canvas = this._canvas;\r\n\r\n  var direction = delta > 0 ? 1 : -1;\r\n\r\n  var currentLinearZoomLevel = log10(canvas.zoom());\r\n\r\n  // snap to a proximate zoom step\r\n  var newLinearZoomLevel = Math.round(currentLinearZoomLevel / stepSize) * stepSize;\r\n\r\n  // increase or decrease one zoom step in the given direction\r\n  newLinearZoomLevel += stepSize * direction;\r\n\r\n  // calculate the absolute logarithmic zoom level based on the linear zoom level\r\n  // (e.g. 2 for an absolute x2 zoom)\r\n  var newLogZoomLevel = Math.pow(10, newLinearZoomLevel);\r\n\r\n  canvas.zoom(cap(RANGE, newLogZoomLevel), position);\r\n};\r\n\r\n\r\n/**\r\n * Toggle the zoom scroll ability via mouse wheel.\r\n *\r\n * @param  {boolean} [newEnabled] new enabled state\r\n */\r\nZoomScroll.prototype.toggle = function toggle(newEnabled) {\r\n\r\n  var element = this._container;\r\n  var handleWheel = this._handleWheel;\r\n\r\n  var oldEnabled = this._enabled;\r\n\r\n  if (typeof newEnabled === 'undefined') {\r\n    newEnabled = !oldEnabled;\r\n  }\r\n\r\n  // only react on actual changes\r\n  if (oldEnabled !== newEnabled) {\r\n\r\n    // add or remove wheel listener based on\r\n    // changed enabled state\r\n    domEvent[newEnabled ? 'bind' : 'unbind'](element, 'wheel', handleWheel, false);\r\n  }\r\n\r\n  this._enabled = newEnabled;\r\n\r\n  return newEnabled;\r\n};\r\n\r\n\r\nZoomScroll.prototype._init = function(newEnabled) {\r\n  this.toggle(newEnabled);\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}