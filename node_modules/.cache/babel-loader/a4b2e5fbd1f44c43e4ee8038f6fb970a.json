{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, useKeyOnly } from '../../lib';\n\n/**\n * A content sub-component for the Reveal.\n */\nfunction RevealContent(props) {\n  var children = props.children,\n    className = props.className,\n    content = props.content,\n    hidden = props.hidden,\n    visible = props.visible;\n  var classes = cx('ui', useKeyOnly(hidden, 'hidden'), useKeyOnly(visible, 'visible'), 'content', className);\n  var rest = getUnhandledProps(RevealContent, props);\n  var ElementType = getElementType(RevealContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\nRevealContent.handledProps = ['as', 'children', 'className', 'content', 'hidden', 'visible'];\nRevealContent._meta = {\n  name: 'RevealContent',\n  parent: 'Reveal',\n  type: META.TYPES.ELEMENT\n};\nRevealContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n  /** A reveal may contain content that is visible before interaction. */\n  hidden: PropTypes.bool,\n  /** A reveal may contain content that is hidden before user interaction. */\n  visible: PropTypes.bool\n} : {};\nexport default RevealContent;","map":{"version":3,"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","META","useKeyOnly","RevealContent","props","children","className","content","hidden","visible","classes","rest","ElementType","createElement","isNil","handledProps","_meta","name","parent","type","TYPES","ELEMENT","propTypes","process","env","NODE_ENV","as","node","string","contentShorthand","bool"],"sources":["C:/Users/KondalaRaoThota/Truviq_Camunda/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/elements/Reveal/RevealContent.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, useKeyOnly } from '../../lib';\n\n/**\n * A content sub-component for the Reveal.\n */\nfunction RevealContent(props) {\n  var children = props.children,\n      className = props.className,\n      content = props.content,\n      hidden = props.hidden,\n      visible = props.visible;\n\n\n  var classes = cx('ui', useKeyOnly(hidden, 'hidden'), useKeyOnly(visible, 'visible'), 'content', className);\n  var rest = getUnhandledProps(RevealContent, props);\n  var ElementType = getElementType(RevealContent, props);\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    childrenUtils.isNil(children) ? content : children\n  );\n}\n\nRevealContent.handledProps = ['as', 'children', 'className', 'content', 'hidden', 'visible'];\nRevealContent._meta = {\n  name: 'RevealContent',\n  parent: 'Reveal',\n  type: META.TYPES.ELEMENT\n};\n\nRevealContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A reveal may contain content that is visible before interaction. */\n  hidden: PropTypes.bool,\n\n  /** A reveal may contain content that is hidden before user interaction. */\n  visible: PropTypes.bool\n} : {};\n\nexport default RevealContent;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,+BAA+B;AACpD,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,aAAa,EAAEC,eAAe,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,IAAI,EAAEC,UAAU,QAAQ,WAAW;;AAE/G;AACA;AACA;AACA,SAASC,aAAaA,CAACC,KAAK,EAAE;EAC5B,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;IACzBC,SAAS,GAAGF,KAAK,CAACE,SAAS;IAC3BC,OAAO,GAAGH,KAAK,CAACG,OAAO;IACvBC,MAAM,GAAGJ,KAAK,CAACI,MAAM;IACrBC,OAAO,GAAGL,KAAK,CAACK,OAAO;EAG3B,IAAIC,OAAO,GAAGhB,EAAE,CAAC,IAAI,EAAEQ,UAAU,CAACM,MAAM,EAAE,QAAQ,CAAC,EAAEN,UAAU,CAACO,OAAO,EAAE,SAAS,CAAC,EAAE,SAAS,EAAEH,SAAS,CAAC;EAC1G,IAAIK,IAAI,GAAGX,iBAAiB,CAACG,aAAa,EAAEC,KAAK,CAAC;EAClD,IAAIQ,WAAW,GAAGb,cAAc,CAACI,aAAa,EAAEC,KAAK,CAAC;EAEtD,OAAOR,KAAK,CAACiB,aAAa,CACxBD,WAAW,EACXnB,QAAQ,CAAC,CAAC,CAAC,EAAEkB,IAAI,EAAE;IAAEL,SAAS,EAAEI;EAAQ,CAAC,CAAC,EAC1Cb,aAAa,CAACiB,KAAK,CAACT,QAAQ,CAAC,GAAGE,OAAO,GAAGF,QAAQ,CACnD;AACH;AAEAF,aAAa,CAACY,YAAY,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC;AAC5FZ,aAAa,CAACa,KAAK,GAAG;EACpBC,IAAI,EAAE,eAAe;EACrBC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAElB,IAAI,CAACmB,KAAK,CAACC;AACnB,CAAC;AAEDlB,aAAa,CAACmB,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAChE;EACAC,EAAE,EAAE5B,eAAe,CAAC4B,EAAE;EAEtB;EACArB,QAAQ,EAAEV,SAAS,CAACgC,IAAI;EAExB;EACArB,SAAS,EAAEX,SAAS,CAACiC,MAAM;EAE3B;EACArB,OAAO,EAAET,eAAe,CAAC+B,gBAAgB;EAEzC;EACArB,MAAM,EAAEb,SAAS,CAACmC,IAAI;EAEtB;EACArB,OAAO,EAAEd,SAAS,CAACmC;AACrB,CAAC,GAAG,CAAC,CAAC;AAEN,eAAe3B,aAAa"},"metadata":{},"sourceType":"module"}