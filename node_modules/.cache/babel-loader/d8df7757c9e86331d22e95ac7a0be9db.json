{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _without from 'lodash/without';\nimport _map from 'lodash/map';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n\n/**\n * A group of cards.\n */\nfunction CardGroup(props) {\n  var centered = props.centered,\n    children = props.children,\n    className = props.className,\n    content = props.content,\n    doubling = props.doubling,\n    items = props.items,\n    itemsPerRow = props.itemsPerRow,\n    stackable = props.stackable,\n    textAlign = props.textAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n  if (!childrenUtils.isNil(children)) return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n  if (!childrenUtils.isNil(content)) return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content);\n  var itemsJSX = _map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return React.createElement(Card, _extends({\n      key: key\n    }, item));\n  });\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), itemsJSX);\n}\nCardGroup.handledProps = ['as', 'centered', 'children', 'className', 'content', 'doubling', 'items', 'itemsPerRow', 'stackable', 'textAlign'];\nCardGroup._meta = {\n  name: 'CardGroup',\n  parent: 'Card',\n  type: META.TYPES.VIEW\n};\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardGroup;","map":{"version":3,"names":["_extends","_without","_map","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","META","SUI","useKeyOnly","useTextAlignProp","useWidthProp","Card","CardGroup","props","centered","children","className","content","doubling","items","itemsPerRow","stackable","textAlign","classes","rest","ElementType","isNil","createElement","itemsJSX","item","key","header","description","join","handledProps","_meta","name","parent","type","TYPES","VIEW","propTypes","process","env","NODE_ENV","as","bool","node","string","contentShorthand","collectionShorthand","oneOf","WIDTHS","TEXT_ALIGNMENTS"],"sources":["C:/Users/KondalaRaoThota/Truviq_Camunda/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/views/Card/CardGroup.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _without from 'lodash/without';\nimport _map from 'lodash/map';\nimport cx from 'classnames';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useTextAlignProp, useWidthProp } from '../../lib';\nimport Card from './Card';\n\n/**\n * A group of cards.\n */\nfunction CardGroup(props) {\n  var centered = props.centered,\n      children = props.children,\n      className = props.className,\n      content = props.content,\n      doubling = props.doubling,\n      items = props.items,\n      itemsPerRow = props.itemsPerRow,\n      stackable = props.stackable,\n      textAlign = props.textAlign;\n\n\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(doubling, 'doubling'), useKeyOnly(stackable, 'stackable'), useTextAlignProp(textAlign), useWidthProp(itemsPerRow), 'cards', className);\n  var rest = getUnhandledProps(CardGroup, props);\n  var ElementType = getElementType(CardGroup, props);\n\n  if (!childrenUtils.isNil(children)) return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    children\n  );\n  if (!childrenUtils.isNil(content)) return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    content\n  );\n\n  var itemsJSX = _map(items, function (item) {\n    var key = item.key || [item.header, item.description].join('-');\n    return React.createElement(Card, _extends({ key: key }, item));\n  });\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    itemsJSX\n  );\n}\n\nCardGroup.handledProps = ['as', 'centered', 'children', 'className', 'content', 'doubling', 'items', 'itemsPerRow', 'stackable', 'textAlign'];\nCardGroup._meta = {\n  name: 'CardGroup',\n  parent: 'Card',\n  type: META.TYPES.VIEW\n};\n\nCardGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A group of cards can center itself inside its container. */\n  centered: PropTypes.bool,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n\n  /** A group of cards can double its column width for mobile. */\n  doubling: PropTypes.bool,\n\n  /** Shorthand array of props for Card. */\n  items: customPropTypes.collectionShorthand,\n\n  /** A group of cards can set how many cards should exist in a row. */\n  itemsPerRow: PropTypes.oneOf(SUI.WIDTHS),\n\n  /** A group of cards can automatically stack rows to a single columns on mobile devices. */\n  stackable: PropTypes.bool,\n\n  /** A card group can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\n\nexport default CardGroup;"],"mappings":"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"},"metadata":{},"sourceType":"module"}