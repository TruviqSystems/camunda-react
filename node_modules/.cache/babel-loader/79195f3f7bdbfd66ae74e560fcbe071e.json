{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\nimport Select from '../../addons/Select';\nimport FormField from './FormField';\n\n/**\r\n * Sugar for <Form.Field control={Select} />.\r\n * @see Form\r\n * @see Select\r\n */\nfunction FormSelect(props) {\n  var control = props.control;\n  var rest = getUnhandledProps(FormSelect, props);\n  var ElementType = getElementType(FormSelect, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    control: control\n  }));\n}\nFormSelect.handledProps = ['as', 'control'];\nFormSelect._meta = {\n  name: 'FormSelect',\n  parent: 'Form',\n  type: META.TYPES.COLLECTION\n};\nFormSelect.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\nFormSelect.defaultProps = {\n  as: FormField,\n  control: Select\n};\nexport default FormSelect;","map":{"version":3,"names":["_extends","React","customPropTypes","getElementType","getUnhandledProps","META","Select","FormField","FormSelect","props","control","rest","ElementType","createElement","handledProps","_meta","name","parent","type","TYPES","COLLECTION","propTypes","process","env","NODE_ENV","as","defaultProps"],"sources":["C:/Users/sam/final/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/collections/Form/FormSelect.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\r\nimport React from 'react';\r\n\r\nimport { customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\r\nimport Select from '../../addons/Select';\r\nimport FormField from './FormField';\r\n\r\n/**\r\n * Sugar for <Form.Field control={Select} />.\r\n * @see Form\r\n * @see Select\r\n */\r\nfunction FormSelect(props) {\r\n  var control = props.control;\r\n\r\n  var rest = getUnhandledProps(FormSelect, props);\r\n  var ElementType = getElementType(FormSelect, props);\r\n\r\n  return React.createElement(ElementType, _extends({}, rest, { control: control }));\r\n}\r\n\r\nFormSelect.handledProps = ['as', 'control'];\r\nFormSelect._meta = {\r\n  name: 'FormSelect',\r\n  parent: 'Form',\r\n  type: META.TYPES.COLLECTION\r\n};\r\n\r\nFormSelect.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: customPropTypes.as,\r\n\r\n  /** A FormField control prop. */\r\n  control: FormField.propTypes.control\r\n} : {};\r\n\r\nFormSelect.defaultProps = {\r\n  as: FormField,\r\n  control: Select\r\n};\r\n\r\nexport default FormSelect;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,+BAA+B;AACpD,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,eAAe,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,IAAI,QAAQ,WAAW;AACpF,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,aAAa;;AAEnC;AACA;AACA;AACA;AACA;AACA,SAASC,UAAUA,CAACC,KAAK,EAAE;EACzB,IAAIC,OAAO,GAAGD,KAAK,CAACC,OAAO;EAE3B,IAAIC,IAAI,GAAGP,iBAAiB,CAACI,UAAU,EAAEC,KAAK,CAAC;EAC/C,IAAIG,WAAW,GAAGT,cAAc,CAACK,UAAU,EAAEC,KAAK,CAAC;EAEnD,OAAOR,KAAK,CAACY,aAAa,CAACD,WAAW,EAAEZ,QAAQ,CAAC,CAAC,CAAC,EAAEW,IAAI,EAAE;IAAED,OAAO,EAAEA;EAAQ,CAAC,CAAC,CAAC;AACnF;AAEAF,UAAU,CAACM,YAAY,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC;AAC3CN,UAAU,CAACO,KAAK,GAAG;EACjBC,IAAI,EAAE,YAAY;EAClBC,MAAM,EAAE,MAAM;EACdC,IAAI,EAAEb,IAAI,CAACc,KAAK,CAACC;AACnB,CAAC;AAEDZ,UAAU,CAACa,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAC7D;EACAC,EAAE,EAAEvB,eAAe,CAACuB,EAAE;EAEtB;EACAf,OAAO,EAAEH,SAAS,CAACc,SAAS,CAACX;AAC/B,CAAC,GAAG,CAAC,CAAC;AAENF,UAAU,CAACkB,YAAY,GAAG;EACxBD,EAAE,EAAElB,SAAS;EACbG,OAAO,EAAEJ;AACX,CAAC;AAED,eAAeE,UAAU"},"metadata":{},"sourceType":"module"}