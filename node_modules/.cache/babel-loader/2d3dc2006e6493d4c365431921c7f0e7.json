{"ast":null,"code":"import { is } from '../../util/ModelUtil';\nfunction getLabelAttr(semantic) {\n  if (is(semantic, 'bpmn:FlowElement') || is(semantic, 'bpmn:Participant') || is(semantic, 'bpmn:Lane') || is(semantic, 'bpmn:SequenceFlow') || is(semantic, 'bpmn:MessageFlow') || is(semantic, 'bpmn:DataInput') || is(semantic, 'bpmn:DataOutput')) {\n    return 'name';\n  }\n  if (is(semantic, 'bpmn:TextAnnotation')) {\n    return 'text';\n  }\n  if (is(semantic, 'bpmn:Group')) {\n    return 'categoryValueRef';\n  }\n}\nfunction getCategoryValue(semantic) {\n  var categoryValueRef = semantic['categoryValueRef'];\n  if (!categoryValueRef) {\n    return '';\n  }\n  return categoryValueRef.value || '';\n}\nexport function getLabel(element) {\n  var semantic = element.businessObject,\n    attr = getLabelAttr(semantic);\n  if (attr) {\n    if (attr === 'categoryValueRef') {\n      return getCategoryValue(semantic);\n    }\n    return semantic[attr] || '';\n  }\n}\nexport function setLabel(element, text, isExternal) {\n  var semantic = element.businessObject,\n    attr = getLabelAttr(semantic);\n  if (attr) {\n    if (attr === 'categoryValueRef') {\n      semantic['categoryValueRef'].value = text;\n    } else {\n      semantic[attr] = text;\n    }\n  }\n  return element;\n}","map":{"version":3,"names":["is","getLabelAttr","semantic","getCategoryValue","categoryValueRef","value","getLabel","element","businessObject","attr","setLabel","text","isExternal"],"sources":["C:/Users/KondalaRaoThota/Truviq_Camunda/camunda-react/node_modules/bpmn-js/lib/features/label-editing/LabelUtil.js"],"sourcesContent":["import { is } from '../../util/ModelUtil';\n\nfunction getLabelAttr(semantic) {\n  if (\n    is(semantic, 'bpmn:FlowElement') ||\n    is(semantic, 'bpmn:Participant') ||\n    is(semantic, 'bpmn:Lane') ||\n    is(semantic, 'bpmn:SequenceFlow') ||\n    is(semantic, 'bpmn:MessageFlow') ||\n    is(semantic, 'bpmn:DataInput') ||\n    is(semantic, 'bpmn:DataOutput')\n  ) {\n    return 'name';\n  }\n\n  if (is(semantic, 'bpmn:TextAnnotation')) {\n    return 'text';\n  }\n\n  if (is(semantic, 'bpmn:Group')) {\n    return 'categoryValueRef';\n  }\n}\n\nfunction getCategoryValue(semantic) {\n  var categoryValueRef = semantic['categoryValueRef'];\n\n  if (!categoryValueRef) {\n    return '';\n  }\n\n\n  return categoryValueRef.value || '';\n}\n\nexport function getLabel(element) {\n  var semantic = element.businessObject,\n      attr = getLabelAttr(semantic);\n\n  if (attr) {\n\n    if (attr === 'categoryValueRef') {\n\n      return getCategoryValue(semantic);\n    }\n\n    return semantic[attr] || '';\n  }\n}\n\n\nexport function setLabel(element, text, isExternal) {\n  var semantic = element.businessObject,\n      attr = getLabelAttr(semantic);\n\n  if (attr) {\n\n    if (attr === 'categoryValueRef') {\n      semantic['categoryValueRef'].value = text;\n    } else {\n      semantic[attr] = text;\n    }\n\n  }\n\n  return element;\n}"],"mappings":"AAAA,SAASA,EAAE,QAAQ,sBAAsB;AAEzC,SAASC,YAAYA,CAACC,QAAQ,EAAE;EAC9B,IACEF,EAAE,CAACE,QAAQ,EAAE,kBAAkB,CAAC,IAChCF,EAAE,CAACE,QAAQ,EAAE,kBAAkB,CAAC,IAChCF,EAAE,CAACE,QAAQ,EAAE,WAAW,CAAC,IACzBF,EAAE,CAACE,QAAQ,EAAE,mBAAmB,CAAC,IACjCF,EAAE,CAACE,QAAQ,EAAE,kBAAkB,CAAC,IAChCF,EAAE,CAACE,QAAQ,EAAE,gBAAgB,CAAC,IAC9BF,EAAE,CAACE,QAAQ,EAAE,iBAAiB,CAAC,EAC/B;IACA,OAAO,MAAM;EACf;EAEA,IAAIF,EAAE,CAACE,QAAQ,EAAE,qBAAqB,CAAC,EAAE;IACvC,OAAO,MAAM;EACf;EAEA,IAAIF,EAAE,CAACE,QAAQ,EAAE,YAAY,CAAC,EAAE;IAC9B,OAAO,kBAAkB;EAC3B;AACF;AAEA,SAASC,gBAAgBA,CAACD,QAAQ,EAAE;EAClC,IAAIE,gBAAgB,GAAGF,QAAQ,CAAC,kBAAkB,CAAC;EAEnD,IAAI,CAACE,gBAAgB,EAAE;IACrB,OAAO,EAAE;EACX;EAGA,OAAOA,gBAAgB,CAACC,KAAK,IAAI,EAAE;AACrC;AAEA,OAAO,SAASC,QAAQA,CAACC,OAAO,EAAE;EAChC,IAAIL,QAAQ,GAAGK,OAAO,CAACC,cAAc;IACjCC,IAAI,GAAGR,YAAY,CAACC,QAAQ,CAAC;EAEjC,IAAIO,IAAI,EAAE;IAER,IAAIA,IAAI,KAAK,kBAAkB,EAAE;MAE/B,OAAON,gBAAgB,CAACD,QAAQ,CAAC;IACnC;IAEA,OAAOA,QAAQ,CAACO,IAAI,CAAC,IAAI,EAAE;EAC7B;AACF;AAGA,OAAO,SAASC,QAAQA,CAACH,OAAO,EAAEI,IAAI,EAAEC,UAAU,EAAE;EAClD,IAAIV,QAAQ,GAAGK,OAAO,CAACC,cAAc;IACjCC,IAAI,GAAGR,YAAY,CAACC,QAAQ,CAAC;EAEjC,IAAIO,IAAI,EAAE;IAER,IAAIA,IAAI,KAAK,kBAAkB,EAAE;MAC/BP,QAAQ,CAAC,kBAAkB,CAAC,CAACG,KAAK,GAAGM,IAAI;IAC3C,CAAC,MAAM;MACLT,QAAQ,CAACO,IAAI,CAAC,GAAGE,IAAI;IACvB;EAEF;EAEA,OAAOJ,OAAO;AAChB"},"metadata":{},"sourceType":"module"}