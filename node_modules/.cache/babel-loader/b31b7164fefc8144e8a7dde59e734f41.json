{"ast":null,"code":"import { assign } from 'min-dash';\nvar DEFAULT_CONFIG = {\n  moveSpeed: 50,\n  moveSpeedAccelerated: 200\n};\n\n/**\r\n * A feature that allows users to move the canvas using the keyboard.\r\n *\r\n * @param {Object} config\r\n * @param {number} [config.moveSpeed=50]\r\n * @param {number} [config.moveSpeedAccelerated=200]\r\n * @param {Keyboard} keyboard\r\n * @param {Canvas} canvas\r\n */\nexport default function KeyboardMove(config, keyboard, canvas) {\n  var self = this;\n  this._config = assign({}, DEFAULT_CONFIG, config || {});\n  keyboard.addListener(arrowsListener);\n  function arrowsListener(context) {\n    var event = context.keyEvent,\n      config = self._config;\n    if (!keyboard.isCmd(event)) {\n      return;\n    }\n    if (keyboard.isKey(['ArrowLeft', 'Left', 'ArrowUp', 'Up', 'ArrowDown', 'Down', 'ArrowRight', 'Right'], event)) {\n      var speed = keyboard.isShift(event) ? config.moveSpeedAccelerated : config.moveSpeed;\n      var direction;\n      switch (event.key) {\n        case 'ArrowLeft':\n        case 'Left':\n          direction = 'left';\n          break;\n        case 'ArrowUp':\n        case 'Up':\n          direction = 'up';\n          break;\n        case 'ArrowRight':\n        case 'Right':\n          direction = 'right';\n          break;\n        case 'ArrowDown':\n        case 'Down':\n          direction = 'down';\n          break;\n      }\n      self.moveCanvas({\n        speed: speed,\n        direction: direction\n      });\n      return true;\n    }\n  }\n  this.moveCanvas = function (opts) {\n    var dx = 0,\n      dy = 0,\n      speed = opts.speed;\n    var actualSpeed = speed / Math.min(Math.sqrt(canvas.viewbox().scale), 1);\n    switch (opts.direction) {\n      case 'left':\n        // Left\n        dx = actualSpeed;\n        break;\n      case 'up':\n        // Up\n        dy = actualSpeed;\n        break;\n      case 'right':\n        // Right\n        dx = -actualSpeed;\n        break;\n      case 'down':\n        // Down\n        dy = -actualSpeed;\n        break;\n    }\n    canvas.scroll({\n      dx: dx,\n      dy: dy\n    });\n  };\n}\nKeyboardMove.$inject = ['config.keyboardMove', 'keyboard', 'canvas'];","map":{"version":3,"names":["assign","DEFAULT_CONFIG","moveSpeed","moveSpeedAccelerated","KeyboardMove","config","keyboard","canvas","self","_config","addListener","arrowsListener","context","event","keyEvent","isCmd","isKey","speed","isShift","direction","key","moveCanvas","opts","dx","dy","actualSpeed","Math","min","sqrt","viewbox","scale","scroll","$inject"],"sources":["C:/Users/sam/final/camunda-react/node_modules/diagram-js/lib/navigation/keyboard-move/KeyboardMove.js"],"sourcesContent":["import { assign } from 'min-dash';\r\n\r\n\r\nvar DEFAULT_CONFIG = {\r\n  moveSpeed: 50,\r\n  moveSpeedAccelerated: 200\r\n};\r\n\r\n\r\n/**\r\n * A feature that allows users to move the canvas using the keyboard.\r\n *\r\n * @param {Object} config\r\n * @param {number} [config.moveSpeed=50]\r\n * @param {number} [config.moveSpeedAccelerated=200]\r\n * @param {Keyboard} keyboard\r\n * @param {Canvas} canvas\r\n */\r\nexport default function KeyboardMove(\r\n    config,\r\n    keyboard,\r\n    canvas\r\n) {\r\n\r\n  var self = this;\r\n\r\n  this._config = assign({}, DEFAULT_CONFIG, config || {});\r\n\r\n  keyboard.addListener(arrowsListener);\r\n\r\n\r\n  function arrowsListener(context) {\r\n\r\n    var event = context.keyEvent,\r\n        config = self._config;\r\n\r\n    if (!keyboard.isCmd(event)) {\r\n      return;\r\n    }\r\n\r\n    if (keyboard.isKey([\r\n      'ArrowLeft', 'Left',\r\n      'ArrowUp', 'Up',\r\n      'ArrowDown', 'Down',\r\n      'ArrowRight', 'Right'\r\n    ], event)) {\r\n\r\n      var speed = (\r\n        keyboard.isShift(event) ?\r\n          config.moveSpeedAccelerated :\r\n          config.moveSpeed\r\n      );\r\n\r\n      var direction;\r\n\r\n      switch (event.key) {\r\n      case 'ArrowLeft':\r\n      case 'Left':\r\n        direction = 'left';\r\n        break;\r\n      case 'ArrowUp':\r\n      case 'Up':\r\n        direction = 'up';\r\n        break;\r\n      case 'ArrowRight':\r\n      case 'Right':\r\n        direction = 'right';\r\n        break;\r\n      case 'ArrowDown':\r\n      case 'Down':\r\n        direction = 'down';\r\n        break;\r\n      }\r\n\r\n      self.moveCanvas({\r\n        speed: speed,\r\n        direction: direction\r\n      });\r\n\r\n      return true;\r\n    }\r\n  }\r\n\r\n  this.moveCanvas = function(opts) {\r\n\r\n    var dx = 0,\r\n        dy = 0,\r\n        speed = opts.speed;\r\n\r\n    var actualSpeed = speed / Math.min(Math.sqrt(canvas.viewbox().scale), 1);\r\n\r\n    switch (opts.direction) {\r\n    case 'left': // Left\r\n      dx = actualSpeed;\r\n      break;\r\n    case 'up': // Up\r\n      dy = actualSpeed;\r\n      break;\r\n    case 'right': // Right\r\n      dx = -actualSpeed;\r\n      break;\r\n    case 'down': // Down\r\n      dy = -actualSpeed;\r\n      break;\r\n    }\r\n\r\n    canvas.scroll({\r\n      dx: dx,\r\n      dy: dy\r\n    });\r\n  };\r\n\r\n}\r\n\r\n\r\nKeyboardMove.$inject = [\r\n  'config.keyboardMove',\r\n  'keyboard',\r\n  'canvas'\r\n];\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,UAAU;AAGjC,IAAIC,cAAc,GAAG;EACnBC,SAAS,EAAE,EAAE;EACbC,oBAAoB,EAAE;AACxB,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,YAAYA,CAChCC,MAAM,EACNC,QAAQ,EACRC,MAAM,EACR;EAEA,IAAIC,IAAI,GAAG,IAAI;EAEf,IAAI,CAACC,OAAO,GAAGT,MAAM,CAAC,CAAC,CAAC,EAAEC,cAAc,EAAEI,MAAM,IAAI,CAAC,CAAC,CAAC;EAEvDC,QAAQ,CAACI,WAAW,CAACC,cAAc,CAAC;EAGpC,SAASA,cAAcA,CAACC,OAAO,EAAE;IAE/B,IAAIC,KAAK,GAAGD,OAAO,CAACE,QAAQ;MACxBT,MAAM,GAAGG,IAAI,CAACC,OAAO;IAEzB,IAAI,CAACH,QAAQ,CAACS,KAAK,CAACF,KAAK,CAAC,EAAE;MAC1B;IACF;IAEA,IAAIP,QAAQ,CAACU,KAAK,CAAC,CACjB,WAAW,EAAE,MAAM,EACnB,SAAS,EAAE,IAAI,EACf,WAAW,EAAE,MAAM,EACnB,YAAY,EAAE,OAAO,CACtB,EAAEH,KAAK,CAAC,EAAE;MAET,IAAII,KAAK,GACPX,QAAQ,CAACY,OAAO,CAACL,KAAK,CAAC,GACrBR,MAAM,CAACF,oBAAoB,GAC3BE,MAAM,CAACH,SACV;MAED,IAAIiB,SAAS;MAEb,QAAQN,KAAK,CAACO,GAAG;QACjB,KAAK,WAAW;QAChB,KAAK,MAAM;UACTD,SAAS,GAAG,MAAM;UAClB;QACF,KAAK,SAAS;QACd,KAAK,IAAI;UACPA,SAAS,GAAG,IAAI;UAChB;QACF,KAAK,YAAY;QACjB,KAAK,OAAO;UACVA,SAAS,GAAG,OAAO;UACnB;QACF,KAAK,WAAW;QAChB,KAAK,MAAM;UACTA,SAAS,GAAG,MAAM;UAClB;MAAM;MAGRX,IAAI,CAACa,UAAU,CAAC;QACdJ,KAAK,EAAEA,KAAK;QACZE,SAAS,EAAEA;MACb,CAAC,CAAC;MAEF,OAAO,IAAI;IACb;EACF;EAEA,IAAI,CAACE,UAAU,GAAG,UAASC,IAAI,EAAE;IAE/B,IAAIC,EAAE,GAAG,CAAC;MACNC,EAAE,GAAG,CAAC;MACNP,KAAK,GAAGK,IAAI,CAACL,KAAK;IAEtB,IAAIQ,WAAW,GAAGR,KAAK,GAAGS,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,IAAI,CAACrB,MAAM,CAACsB,OAAO,EAAE,CAACC,KAAK,CAAC,EAAE,CAAC,CAAC;IAExE,QAAQR,IAAI,CAACH,SAAS;MACtB,KAAK,MAAM;QAAE;QACXI,EAAE,GAAGE,WAAW;QAChB;MACF,KAAK,IAAI;QAAE;QACTD,EAAE,GAAGC,WAAW;QAChB;MACF,KAAK,OAAO;QAAE;QACZF,EAAE,GAAG,CAACE,WAAW;QACjB;MACF,KAAK,MAAM;QAAE;QACXD,EAAE,GAAG,CAACC,WAAW;QACjB;IAAM;IAGRlB,MAAM,CAACwB,MAAM,CAAC;MACZR,EAAE,EAAEA,EAAE;MACNC,EAAE,EAAEA;IACN,CAAC,CAAC;EACJ,CAAC;AAEH;AAGApB,YAAY,CAAC4B,OAAO,GAAG,CACrB,qBAAqB,EACrB,UAAU,EACV,QAAQ,CACT"},"metadata":{},"sourceType":"module"}