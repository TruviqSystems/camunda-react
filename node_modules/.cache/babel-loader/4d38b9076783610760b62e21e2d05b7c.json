{"ast":null,"code":"import { getBBox } from '../../util/Elements';\nvar LOW_PRIORITY = 500;\nimport { append as svgAppend, attr as svgAttr, create as svgCreate } from 'tiny-svg';\nimport { query as domQuery } from 'min-dom';\nimport { assign } from 'min-dash';\n\n/**\r\n * @class\r\n *\r\n * A plugin that adds an outline to shapes and connections that may be activated and styled\r\n * via CSS classes.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Styles} styles\r\n * @param {ElementRegistry} elementRegistry\r\n */\nexport default function Outline(eventBus, styles, elementRegistry) {\n  this.offset = 6;\n  var OUTLINE_STYLE = styles.cls('djs-outline', ['no-fill']);\n  var self = this;\n  function createOutline(gfx, bounds) {\n    var outline = svgCreate('rect');\n    svgAttr(outline, assign({\n      x: 10,\n      y: 10,\n      width: 100,\n      height: 100\n    }, OUTLINE_STYLE));\n    svgAppend(gfx, outline);\n    return outline;\n  }\n\n  // A low priortity is necessary, because outlines of labels have to be updated\n  // after the label bounds have been updated in the renderer.\n  eventBus.on(['shape.added', 'shape.changed'], LOW_PRIORITY, function (event) {\n    var element = event.element,\n      gfx = event.gfx;\n    var outline = domQuery('.djs-outline', gfx);\n    if (!outline) {\n      outline = createOutline(gfx, element);\n    }\n    self.updateShapeOutline(outline, element);\n  });\n  eventBus.on(['connection.added', 'connection.changed'], function (event) {\n    var element = event.element,\n      gfx = event.gfx;\n    var outline = domQuery('.djs-outline', gfx);\n    if (!outline) {\n      outline = createOutline(gfx, element);\n    }\n    self.updateConnectionOutline(outline, element);\n  });\n}\n\n/**\r\n * Updates the outline of a shape respecting the dimension of the\r\n * element and an outline offset.\r\n *\r\n * @param  {SVGElement} outline\r\n * @param  {djs.model.Base} element\r\n */\nOutline.prototype.updateShapeOutline = function (outline, element) {\n  svgAttr(outline, {\n    x: -this.offset,\n    y: -this.offset,\n    width: element.width + this.offset * 2,\n    height: element.height + this.offset * 2\n  });\n};\n\n/**\r\n * Updates the outline of a connection respecting the bounding box of\r\n * the connection and an outline offset.\r\n *\r\n * @param  {SVGElement} outline\r\n * @param  {djs.model.Base} element\r\n */\nOutline.prototype.updateConnectionOutline = function (outline, connection) {\n  var bbox = getBBox(connection);\n  svgAttr(outline, {\n    x: bbox.x - this.offset,\n    y: bbox.y - this.offset,\n    width: bbox.width + this.offset * 2,\n    height: bbox.height + this.offset * 2\n  });\n};\nOutline.$inject = ['eventBus', 'styles', 'elementRegistry'];","map":{"version":3,"names":["getBBox","LOW_PRIORITY","append","svgAppend","attr","svgAttr","create","svgCreate","query","domQuery","assign","Outline","eventBus","styles","elementRegistry","offset","OUTLINE_STYLE","cls","self","createOutline","gfx","bounds","outline","x","y","width","height","on","event","element","updateShapeOutline","updateConnectionOutline","prototype","connection","bbox","$inject"],"sources":["C:/Users/sam/final/camunda-react/node_modules/diagram-js/lib/features/outline/Outline.js"],"sourcesContent":["import { getBBox } from '../../util/Elements';\r\n\r\nvar LOW_PRIORITY = 500;\r\n\r\nimport {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  create as svgCreate\r\n} from 'tiny-svg';\r\n\r\nimport {\r\n  query as domQuery\r\n} from 'min-dom';\r\n\r\nimport {\r\n  assign\r\n} from 'min-dash';\r\n\r\n\r\n/**\r\n * @class\r\n *\r\n * A plugin that adds an outline to shapes and connections that may be activated and styled\r\n * via CSS classes.\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {Styles} styles\r\n * @param {ElementRegistry} elementRegistry\r\n */\r\nexport default function Outline(eventBus, styles, elementRegistry) {\r\n\r\n  this.offset = 6;\r\n\r\n  var OUTLINE_STYLE = styles.cls('djs-outline', [ 'no-fill' ]);\r\n\r\n  var self = this;\r\n\r\n  function createOutline(gfx, bounds) {\r\n    var outline = svgCreate('rect');\r\n\r\n    svgAttr(outline, assign({\r\n      x: 10,\r\n      y: 10,\r\n      width: 100,\r\n      height: 100\r\n    }, OUTLINE_STYLE));\r\n\r\n    svgAppend(gfx, outline);\r\n\r\n    return outline;\r\n  }\r\n\r\n  // A low priortity is necessary, because outlines of labels have to be updated\r\n  // after the label bounds have been updated in the renderer.\r\n  eventBus.on([ 'shape.added', 'shape.changed' ], LOW_PRIORITY, function(event) {\r\n    var element = event.element,\r\n        gfx = event.gfx;\r\n\r\n    var outline = domQuery('.djs-outline', gfx);\r\n\r\n    if (!outline) {\r\n      outline = createOutline(gfx, element);\r\n    }\r\n\r\n    self.updateShapeOutline(outline, element);\r\n  });\r\n\r\n  eventBus.on([ 'connection.added', 'connection.changed' ], function(event) {\r\n    var element = event.element,\r\n        gfx = event.gfx;\r\n\r\n    var outline = domQuery('.djs-outline', gfx);\r\n\r\n    if (!outline) {\r\n      outline = createOutline(gfx, element);\r\n    }\r\n\r\n    self.updateConnectionOutline(outline, element);\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * Updates the outline of a shape respecting the dimension of the\r\n * element and an outline offset.\r\n *\r\n * @param  {SVGElement} outline\r\n * @param  {djs.model.Base} element\r\n */\r\nOutline.prototype.updateShapeOutline = function(outline, element) {\r\n\r\n  svgAttr(outline, {\r\n    x: -this.offset,\r\n    y: -this.offset,\r\n    width: element.width + this.offset * 2,\r\n    height: element.height + this.offset * 2\r\n  });\r\n\r\n};\r\n\r\n\r\n/**\r\n * Updates the outline of a connection respecting the bounding box of\r\n * the connection and an outline offset.\r\n *\r\n * @param  {SVGElement} outline\r\n * @param  {djs.model.Base} element\r\n */\r\nOutline.prototype.updateConnectionOutline = function(outline, connection) {\r\n\r\n  var bbox = getBBox(connection);\r\n\r\n  svgAttr(outline, {\r\n    x: bbox.x - this.offset,\r\n    y: bbox.y - this.offset,\r\n    width: bbox.width + this.offset * 2,\r\n    height: bbox.height + this.offset * 2\r\n  });\r\n\r\n};\r\n\r\n\r\nOutline.$inject = ['eventBus', 'styles', 'elementRegistry'];"],"mappings":"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"},"metadata":{},"sourceType":"module"}