{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _without from 'lodash/without';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI, useTextAlignProp } from '../../lib';\n\n/**\r\n * A card can contain content metadata.\r\n */\nfunction CardMeta(props) {\n  var children = props.children,\n    className = props.className,\n    content = props.content,\n    textAlign = props.textAlign;\n  var classes = cx(useTextAlignProp(textAlign), 'meta', className);\n  var rest = getUnhandledProps(CardMeta, props);\n  var ElementType = getElementType(CardMeta, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\nCardMeta.handledProps = ['as', 'children', 'className', 'content', 'textAlign'];\nCardMeta._meta = {\n  name: 'CardMeta',\n  parent: 'Card',\n  type: META.TYPES.VIEW\n};\nCardMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n  /** A card meta can adjust its text alignment. */\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\n} : {};\nexport default CardMeta;","map":{"version":3,"names":["_extends","_without","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","META","SUI","useTextAlignProp","CardMeta","props","children","className","content","textAlign","classes","rest","ElementType","createElement","isNil","handledProps","_meta","name","parent","type","TYPES","VIEW","propTypes","process","env","NODE_ENV","as","node","string","contentShorthand","oneOf","TEXT_ALIGNMENTS"],"sources":["C:/Users/sam/final/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/views/Card/CardMeta.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\r\nimport _without from 'lodash/without';\r\nimport cx from 'classnames';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI, useTextAlignProp } from '../../lib';\r\n\r\n/**\r\n * A card can contain content metadata.\r\n */\r\nfunction CardMeta(props) {\r\n  var children = props.children,\r\n      className = props.className,\r\n      content = props.content,\r\n      textAlign = props.textAlign;\r\n\r\n  var classes = cx(useTextAlignProp(textAlign), 'meta', className);\r\n  var rest = getUnhandledProps(CardMeta, props);\r\n  var ElementType = getElementType(CardMeta, props);\r\n\r\n  return React.createElement(\r\n    ElementType,\r\n    _extends({}, rest, { className: classes }),\r\n    childrenUtils.isNil(children) ? content : children\r\n  );\r\n}\r\n\r\nCardMeta.handledProps = ['as', 'children', 'className', 'content', 'textAlign'];\r\nCardMeta._meta = {\r\n  name: 'CardMeta',\r\n  parent: 'Card',\r\n  type: META.TYPES.VIEW\r\n};\r\n\r\nCardMeta.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: customPropTypes.as,\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** Shorthand for primary content. */\r\n  content: customPropTypes.contentShorthand,\r\n\r\n  /** A card meta can adjust its text alignment. */\r\n  textAlign: PropTypes.oneOf(_without(SUI.TEXT_ALIGNMENTS, 'justified'))\r\n} : {};\r\n\r\nexport default CardMeta;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,+BAA+B;AACpD,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,EAAE,MAAM,YAAY;AAE3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,aAAa,EAAEC,eAAe,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,IAAI,EAAEC,GAAG,EAAEC,gBAAgB,QAAQ,WAAW;;AAE1H;AACA;AACA;AACA,SAASC,QAAQA,CAACC,KAAK,EAAE;EACvB,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;IACzBC,SAAS,GAAGF,KAAK,CAACE,SAAS;IAC3BC,OAAO,GAAGH,KAAK,CAACG,OAAO;IACvBC,SAAS,GAAGJ,KAAK,CAACI,SAAS;EAE/B,IAAIC,OAAO,GAAGhB,EAAE,CAACS,gBAAgB,CAACM,SAAS,CAAC,EAAE,MAAM,EAAEF,SAAS,CAAC;EAChE,IAAII,IAAI,GAAGX,iBAAiB,CAACI,QAAQ,EAAEC,KAAK,CAAC;EAC7C,IAAIO,WAAW,GAAGb,cAAc,CAACK,QAAQ,EAAEC,KAAK,CAAC;EAEjD,OAAOT,KAAK,CAACiB,aAAa,CACxBD,WAAW,EACXpB,QAAQ,CAAC,CAAC,CAAC,EAAEmB,IAAI,EAAE;IAAEJ,SAAS,EAAEG;EAAQ,CAAC,CAAC,EAC1Cb,aAAa,CAACiB,KAAK,CAACR,QAAQ,CAAC,GAAGE,OAAO,GAAGF,QAAQ,CACnD;AACH;AAEAF,QAAQ,CAACW,YAAY,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,WAAW,CAAC;AAC/EX,QAAQ,CAACY,KAAK,GAAG;EACfC,IAAI,EAAE,UAAU;EAChBC,MAAM,EAAE,MAAM;EACdC,IAAI,EAAElB,IAAI,CAACmB,KAAK,CAACC;AACnB,CAAC;AAEDjB,QAAQ,CAACkB,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAC3D;EACAC,EAAE,EAAE5B,eAAe,CAAC4B,EAAE;EAEtB;EACApB,QAAQ,EAAEX,SAAS,CAACgC,IAAI;EAExB;EACApB,SAAS,EAAEZ,SAAS,CAACiC,MAAM;EAE3B;EACApB,OAAO,EAAEV,eAAe,CAAC+B,gBAAgB;EAEzC;EACApB,SAAS,EAAEd,SAAS,CAACmC,KAAK,CAACrC,QAAQ,CAACS,GAAG,CAAC6B,eAAe,EAAE,WAAW,CAAC;AACvE,CAAC,GAAG,CAAC,CAAC;AAEN,eAAe3B,QAAQ"},"metadata":{},"sourceType":"module"}