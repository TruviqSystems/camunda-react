{"ast":null,"code":"import { isFunction } from 'min-dash';\n\n// TODO(nikku): remove with future bpmn-js version\n\n/**\r\n * Wraps APIs to check:\r\n *\r\n * 1) If a callback is passed -> Warn users about callback deprecation.\r\n * 2) If Promise class is implemented in current environment.\r\n *\r\n * @private\r\n */\nexport function wrapForCompatibility(api) {\n  return function () {\n    if (!window.Promise) {\n      throw new Error('Promises is not supported in this environment. Please polyfill Promise.');\n    }\n    var argLen = arguments.length;\n    if (argLen >= 1 && isFunction(arguments[argLen - 1])) {\n      var callback = arguments[argLen - 1];\n      console.warn(new Error('Passing callbacks to ' + api.name + ' is deprecated and will be removed in a future major release. ' + 'Please switch to promises: https://bpmn.io/l/moving-to-promises.html'));\n      var argsWithoutCallback = Array.prototype.slice.call(arguments, 0, -1);\n      api.apply(this, argsWithoutCallback).then(function (result) {\n        var firstKey = Object.keys(result)[0];\n\n        // The APIs we are wrapping all resolve a single item depending on the API.\n        // For instance, importXML resolves { warnings } and saveXML returns { xml }.\n        // That's why we can call the callback with the first item of result.\n        return callback(null, result[firstKey]);\n\n        // Passing a second paramter instead of catch because we don't want to\n        // catch errors thrown by callback().\n      }, function (err) {\n        return callback(err, err.warnings);\n      });\n    } else {\n      return api.apply(this, arguments);\n    }\n  };\n}","map":{"version":3,"names":["isFunction","wrapForCompatibility","api","window","Promise","Error","argLen","arguments","length","callback","console","warn","name","argsWithoutCallback","Array","prototype","slice","call","apply","then","result","firstKey","Object","keys","err","warnings"],"sources":["C:/Users/sam/final/camunda-react/node_modules/bpmn-js/lib/util/CompatibilityUtil.js"],"sourcesContent":["import { isFunction } from 'min-dash';\r\n\r\n// TODO(nikku): remove with future bpmn-js version\r\n\r\n/**\r\n * Wraps APIs to check:\r\n *\r\n * 1) If a callback is passed -> Warn users about callback deprecation.\r\n * 2) If Promise class is implemented in current environment.\r\n *\r\n * @private\r\n */\r\nexport function wrapForCompatibility(api) {\r\n\r\n  return function() {\r\n\r\n    if (!window.Promise) {\r\n      throw new Error('Promises is not supported in this environment. Please polyfill Promise.');\r\n    }\r\n\r\n    var argLen = arguments.length;\r\n    if (argLen >= 1 && isFunction(arguments[argLen - 1])) {\r\n\r\n      var callback = arguments[argLen - 1];\r\n\r\n      console.warn(new Error(\r\n        'Passing callbacks to ' + api.name + ' is deprecated and will be removed in a future major release. ' +\r\n        'Please switch to promises: https://bpmn.io/l/moving-to-promises.html'\r\n      ));\r\n\r\n      var argsWithoutCallback = Array.prototype.slice.call(arguments, 0, -1);\r\n\r\n      api.apply(this, argsWithoutCallback).then(function(result) {\r\n\r\n        var firstKey = Object.keys(result)[0];\r\n\r\n        // The APIs we are wrapping all resolve a single item depending on the API.\r\n        // For instance, importXML resolves { warnings } and saveXML returns { xml }.\r\n        // That's why we can call the callback with the first item of result.\r\n        return callback(null, result[firstKey]);\r\n\r\n        // Passing a second paramter instead of catch because we don't want to\r\n        // catch errors thrown by callback().\r\n      }, function(err) {\r\n\r\n        return callback(err, err.warnings);\r\n      });\r\n    } else {\r\n\r\n      return api.apply(this, arguments);\r\n    }\r\n  };\r\n}\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,UAAU;;AAErC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,oBAAoBA,CAACC,GAAG,EAAE;EAExC,OAAO,YAAW;IAEhB,IAAI,CAACC,MAAM,CAACC,OAAO,EAAE;MACnB,MAAM,IAAIC,KAAK,CAAC,yEAAyE,CAAC;IAC5F;IAEA,IAAIC,MAAM,GAAGC,SAAS,CAACC,MAAM;IAC7B,IAAIF,MAAM,IAAI,CAAC,IAAIN,UAAU,CAACO,SAAS,CAACD,MAAM,GAAG,CAAC,CAAC,CAAC,EAAE;MAEpD,IAAIG,QAAQ,GAAGF,SAAS,CAACD,MAAM,GAAG,CAAC,CAAC;MAEpCI,OAAO,CAACC,IAAI,CAAC,IAAIN,KAAK,CACpB,uBAAuB,GAAGH,GAAG,CAACU,IAAI,GAAG,gEAAgE,GACrG,sEAAsE,CACvE,CAAC;MAEF,IAAIC,mBAAmB,GAAGC,KAAK,CAACC,SAAS,CAACC,KAAK,CAACC,IAAI,CAACV,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;MAEtEL,GAAG,CAACgB,KAAK,CAAC,IAAI,EAAEL,mBAAmB,CAAC,CAACM,IAAI,CAAC,UAASC,MAAM,EAAE;QAEzD,IAAIC,QAAQ,GAAGC,MAAM,CAACC,IAAI,CAACH,MAAM,CAAC,CAAC,CAAC,CAAC;;QAErC;QACA;QACA;QACA,OAAOX,QAAQ,CAAC,IAAI,EAAEW,MAAM,CAACC,QAAQ,CAAC,CAAC;;QAEvC;QACA;MACF,CAAC,EAAE,UAASG,GAAG,EAAE;QAEf,OAAOf,QAAQ,CAACe,GAAG,EAAEA,GAAG,CAACC,QAAQ,CAAC;MACpC,CAAC,CAAC;IACJ,CAAC,MAAM;MAEL,OAAOvB,GAAG,CAACgB,KAAK,CAAC,IAAI,EAAEX,SAAS,CAAC;IACnC;EACF,CAAC;AACH"},"metadata":{},"sourceType":"module"}