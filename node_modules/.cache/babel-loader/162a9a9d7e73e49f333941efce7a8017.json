{"ast":null,"code":"var arrayMap = require('./_arrayMap'),\n  baseIntersection = require('./_baseIntersection'),\n  baseRest = require('./_baseRest'),\n  castArrayLikeObject = require('./_castArrayLikeObject');\n\n/**\r\n * Creates an array of unique values that are included in all given arrays\r\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * for equality comparisons. The order and references of result values are\r\n * determined by the first array.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {...Array} [arrays] The arrays to inspect.\r\n * @returns {Array} Returns the new array of intersecting values.\r\n * @example\r\n *\r\n * _.intersection([2, 1], [2, 3]);\r\n * // => [2]\r\n */\nvar intersection = baseRest(function (arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return mapped.length && mapped[0] === arrays[0] ? baseIntersection(mapped) : [];\n});\nmodule.exports = intersection;","map":{"version":3,"names":["arrayMap","require","baseIntersection","baseRest","castArrayLikeObject","intersection","arrays","mapped","length","module","exports"],"sources":["C:/Users/sam/final/camunda-react/node_modules/lodash/intersection.js"],"sourcesContent":["var arrayMap = require('./_arrayMap'),\r\n    baseIntersection = require('./_baseIntersection'),\r\n    baseRest = require('./_baseRest'),\r\n    castArrayLikeObject = require('./_castArrayLikeObject');\r\n\r\n/**\r\n * Creates an array of unique values that are included in all given arrays\r\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\r\n * for equality comparisons. The order and references of result values are\r\n * determined by the first array.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 0.1.0\r\n * @category Array\r\n * @param {...Array} [arrays] The arrays to inspect.\r\n * @returns {Array} Returns the new array of intersecting values.\r\n * @example\r\n *\r\n * _.intersection([2, 1], [2, 3]);\r\n * // => [2]\r\n */\r\nvar intersection = baseRest(function(arrays) {\r\n  var mapped = arrayMap(arrays, castArrayLikeObject);\r\n  return (mapped.length && mapped[0] === arrays[0])\r\n    ? baseIntersection(mapped)\r\n    : [];\r\n});\r\n\r\nmodule.exports = intersection;\r\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAa,CAAC;EACjCC,gBAAgB,GAAGD,OAAO,CAAC,qBAAqB,CAAC;EACjDE,QAAQ,GAAGF,OAAO,CAAC,aAAa,CAAC;EACjCG,mBAAmB,GAAGH,OAAO,CAAC,wBAAwB,CAAC;;AAE3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAII,YAAY,GAAGF,QAAQ,CAAC,UAASG,MAAM,EAAE;EAC3C,IAAIC,MAAM,GAAGP,QAAQ,CAACM,MAAM,EAAEF,mBAAmB,CAAC;EAClD,OAAQG,MAAM,CAACC,MAAM,IAAID,MAAM,CAAC,CAAC,CAAC,KAAKD,MAAM,CAAC,CAAC,CAAC,GAC5CJ,gBAAgB,CAACK,MAAM,CAAC,GACxB,EAAE;AACR,CAAC,CAAC;AAEFE,MAAM,CAACC,OAAO,GAAGL,YAAY"},"metadata":{},"sourceType":"script"}