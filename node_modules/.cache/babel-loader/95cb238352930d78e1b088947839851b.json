{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly } from '../../lib';\n\n/**\r\n * A label can be grouped.\r\n */\nfunction LabelGroup(props) {\n  var children = props.children,\n    circular = props.circular,\n    className = props.className,\n    color = props.color,\n    content = props.content,\n    size = props.size,\n    tag = props.tag;\n  var classes = cx('ui', color, size, useKeyOnly(circular, 'circular'), useKeyOnly(tag, 'tag'), 'labels', className);\n  var rest = getUnhandledProps(LabelGroup, props);\n  var ElementType = getElementType(LabelGroup, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\nLabelGroup.handledProps = ['as', 'children', 'circular', 'className', 'color', 'content', 'size', 'tag'];\nLabelGroup._meta = {\n  name: 'LabelGroup',\n  parent: 'Label',\n  type: META.TYPES.ELEMENT\n};\nLabelGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Labels can share shapes. */\n  circular: PropTypes.bool,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Label group can share colors together. */\n  color: PropTypes.oneOf(SUI.COLORS),\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n  /** Label group can share sizes together. */\n  size: PropTypes.oneOf(SUI.SIZES),\n  /** Label group can share tag formatting. */\n  tag: PropTypes.bool\n} : {};\nexport default LabelGroup;","map":{"version":3,"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","META","SUI","useKeyOnly","LabelGroup","props","children","circular","className","color","content","size","tag","classes","rest","ElementType","createElement","isNil","handledProps","_meta","name","parent","type","TYPES","ELEMENT","propTypes","process","env","NODE_ENV","as","node","bool","string","oneOf","COLORS","contentShorthand","SIZES"],"sources":["C:/Users/sam/final/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/elements/Label/LabelGroup.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\r\nimport cx from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly } from '../../lib';\r\n\r\n/**\r\n * A label can be grouped.\r\n */\r\nfunction LabelGroup(props) {\r\n  var children = props.children,\r\n      circular = props.circular,\r\n      className = props.className,\r\n      color = props.color,\r\n      content = props.content,\r\n      size = props.size,\r\n      tag = props.tag;\r\n\r\n\r\n  var classes = cx('ui', color, size, useKeyOnly(circular, 'circular'), useKeyOnly(tag, 'tag'), 'labels', className);\r\n  var rest = getUnhandledProps(LabelGroup, props);\r\n  var ElementType = getElementType(LabelGroup, props);\r\n\r\n  return React.createElement(\r\n    ElementType,\r\n    _extends({}, rest, { className: classes }),\r\n    childrenUtils.isNil(children) ? content : children\r\n  );\r\n}\r\n\r\nLabelGroup.handledProps = ['as', 'children', 'circular', 'className', 'color', 'content', 'size', 'tag'];\r\nLabelGroup._meta = {\r\n  name: 'LabelGroup',\r\n  parent: 'Label',\r\n  type: META.TYPES.ELEMENT\r\n};\r\n\r\nLabelGroup.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: customPropTypes.as,\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Labels can share shapes. */\r\n  circular: PropTypes.bool,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** Label group can share colors together. */\r\n  color: PropTypes.oneOf(SUI.COLORS),\r\n\r\n  /** Shorthand for primary content. */\r\n  content: customPropTypes.contentShorthand,\r\n\r\n  /** Label group can share sizes together. */\r\n  size: PropTypes.oneOf(SUI.SIZES),\r\n\r\n  /** Label group can share tag formatting. */\r\n  tag: PropTypes.bool\r\n} : {};\r\n\r\nexport default LabelGroup;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,+BAA+B;AACpD,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,aAAa,EAAEC,eAAe,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,IAAI,EAAEC,GAAG,EAAEC,UAAU,QAAQ,WAAW;;AAEpH;AACA;AACA;AACA,SAASC,UAAUA,CAACC,KAAK,EAAE;EACzB,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;IACzBC,QAAQ,GAAGF,KAAK,CAACE,QAAQ;IACzBC,SAAS,GAAGH,KAAK,CAACG,SAAS;IAC3BC,KAAK,GAAGJ,KAAK,CAACI,KAAK;IACnBC,OAAO,GAAGL,KAAK,CAACK,OAAO;IACvBC,IAAI,GAAGN,KAAK,CAACM,IAAI;IACjBC,GAAG,GAAGP,KAAK,CAACO,GAAG;EAGnB,IAAIC,OAAO,GAAGnB,EAAE,CAAC,IAAI,EAAEe,KAAK,EAAEE,IAAI,EAAER,UAAU,CAACI,QAAQ,EAAE,UAAU,CAAC,EAAEJ,UAAU,CAACS,GAAG,EAAE,KAAK,CAAC,EAAE,QAAQ,EAAEJ,SAAS,CAAC;EAClH,IAAIM,IAAI,GAAGd,iBAAiB,CAACI,UAAU,EAAEC,KAAK,CAAC;EAC/C,IAAIU,WAAW,GAAGhB,cAAc,CAACK,UAAU,EAAEC,KAAK,CAAC;EAEnD,OAAOT,KAAK,CAACoB,aAAa,CACxBD,WAAW,EACXtB,QAAQ,CAAC,CAAC,CAAC,EAAEqB,IAAI,EAAE;IAAEN,SAAS,EAAEK;EAAQ,CAAC,CAAC,EAC1ChB,aAAa,CAACoB,KAAK,CAACX,QAAQ,CAAC,GAAGI,OAAO,GAAGJ,QAAQ,CACnD;AACH;AAEAF,UAAU,CAACc,YAAY,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,CAAC;AACxGd,UAAU,CAACe,KAAK,GAAG;EACjBC,IAAI,EAAE,YAAY;EAClBC,MAAM,EAAE,OAAO;EACfC,IAAI,EAAErB,IAAI,CAACsB,KAAK,CAACC;AACnB,CAAC;AAEDpB,UAAU,CAACqB,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAC7D;EACAC,EAAE,EAAE/B,eAAe,CAAC+B,EAAE;EAEtB;EACAvB,QAAQ,EAAEX,SAAS,CAACmC,IAAI;EAExB;EACAvB,QAAQ,EAAEZ,SAAS,CAACoC,IAAI;EAExB;EACAvB,SAAS,EAAEb,SAAS,CAACqC,MAAM;EAE3B;EACAvB,KAAK,EAAEd,SAAS,CAACsC,KAAK,CAAC/B,GAAG,CAACgC,MAAM,CAAC;EAElC;EACAxB,OAAO,EAAEZ,eAAe,CAACqC,gBAAgB;EAEzC;EACAxB,IAAI,EAAEhB,SAAS,CAACsC,KAAK,CAAC/B,GAAG,CAACkC,KAAK,CAAC;EAEhC;EACAxB,GAAG,EAAEjB,SAAS,CAACoC;AACjB,CAAC,GAAG,CAAC,CAAC;AAEN,eAAe3B,UAAU"},"metadata":{},"sourceType":"module"}