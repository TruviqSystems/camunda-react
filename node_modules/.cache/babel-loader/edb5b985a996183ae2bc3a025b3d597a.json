{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\nimport Button from '../../elements/Button';\nimport FormField from './FormField';\n\n/**\n * Sugar for <Form.Field control={Button} />.\n * @see Button\n * @see Form\n */\nfunction FormButton(props) {\n  var control = props.control;\n  var rest = getUnhandledProps(FormButton, props);\n  var ElementType = getElementType(FormButton, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    control: control\n  }));\n}\nFormButton.handledProps = ['as', 'control'];\nFormButton._meta = {\n  name: 'FormButton',\n  parent: 'Form',\n  type: META.TYPES.COLLECTION\n};\nFormButton.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\nFormButton.defaultProps = {\n  as: FormField,\n  control: Button\n};\nexport default FormButton;","map":{"version":3,"names":["_extends","React","customPropTypes","getElementType","getUnhandledProps","META","Button","FormField","FormButton","props","control","rest","ElementType","createElement","handledProps","_meta","name","parent","type","TYPES","COLLECTION","propTypes","process","env","NODE_ENV","as","defaultProps"],"sources":["C:/Users/KondalaRaoThota/Truviq_Camunda/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/collections/Form/FormButton.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\n\nimport { customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\nimport Button from '../../elements/Button';\nimport FormField from './FormField';\n\n/**\n * Sugar for <Form.Field control={Button} />.\n * @see Button\n * @see Form\n */\nfunction FormButton(props) {\n  var control = props.control;\n\n  var rest = getUnhandledProps(FormButton, props);\n  var ElementType = getElementType(FormButton, props);\n\n  return React.createElement(ElementType, _extends({}, rest, { control: control }));\n}\n\nFormButton.handledProps = ['as', 'control'];\nFormButton._meta = {\n  name: 'FormButton',\n  parent: 'Form',\n  type: META.TYPES.COLLECTION\n};\n\nFormButton.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\n\nFormButton.defaultProps = {\n  as: FormField,\n  control: Button\n};\n\nexport default FormButton;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,+BAA+B;AACpD,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,eAAe,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,IAAI,QAAQ,WAAW;AACpF,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,OAAOC,SAAS,MAAM,aAAa;;AAEnC;AACA;AACA;AACA;AACA;AACA,SAASC,UAAUA,CAACC,KAAK,EAAE;EACzB,IAAIC,OAAO,GAAGD,KAAK,CAACC,OAAO;EAE3B,IAAIC,IAAI,GAAGP,iBAAiB,CAACI,UAAU,EAAEC,KAAK,CAAC;EAC/C,IAAIG,WAAW,GAAGT,cAAc,CAACK,UAAU,EAAEC,KAAK,CAAC;EAEnD,OAAOR,KAAK,CAACY,aAAa,CAACD,WAAW,EAAEZ,QAAQ,CAAC,CAAC,CAAC,EAAEW,IAAI,EAAE;IAAED,OAAO,EAAEA;EAAQ,CAAC,CAAC,CAAC;AACnF;AAEAF,UAAU,CAACM,YAAY,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC;AAC3CN,UAAU,CAACO,KAAK,GAAG;EACjBC,IAAI,EAAE,YAAY;EAClBC,MAAM,EAAE,MAAM;EACdC,IAAI,EAAEb,IAAI,CAACc,KAAK,CAACC;AACnB,CAAC;AAEDZ,UAAU,CAACa,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAC7D;EACAC,EAAE,EAAEvB,eAAe,CAACuB,EAAE;EAEtB;EACAf,OAAO,EAAEH,SAAS,CAACc,SAAS,CAACX;AAC/B,CAAC,GAAG,CAAC,CAAC;AAENF,UAAU,CAACkB,YAAY,GAAG;EACxBD,EAAE,EAAElB,SAAS;EACbG,OAAO,EAAEJ;AACX,CAAC;AAED,eAAeE,UAAU"},"metadata":{},"sourceType":"module"}