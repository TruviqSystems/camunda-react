{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { ModernAutoControlledComponent as Component, childrenUtils, createHTMLIframe, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\nimport Icon from '../../elements/Icon';\n/**\r\n * An embed displays content from other websites like YouTube videos or Google Maps.\r\n */\n\nvar Embed = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Embed, _Component);\n  function Embed() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.handleClick = function (e) {\n      var onClick = _this.props.onClick;\n      var active = _this.state.active;\n      if (onClick) onClick(e, _extends({}, _this.props, {\n        active: true\n      }));\n      if (!active) _this.setState({\n        active: true\n      });\n    };\n    return _this;\n  }\n  var _proto = Embed.prototype;\n  _proto.getSrc = function getSrc() {\n    var _this$props = this.props,\n      _this$props$autoplay = _this$props.autoplay,\n      autoplay = _this$props$autoplay === void 0 ? true : _this$props$autoplay,\n      _this$props$brandedUI = _this$props.brandedUI,\n      brandedUI = _this$props$brandedUI === void 0 ? false : _this$props$brandedUI,\n      _this$props$color = _this$props.color,\n      color = _this$props$color === void 0 ? '#444444' : _this$props$color,\n      _this$props$hd = _this$props.hd,\n      hd = _this$props$hd === void 0 ? true : _this$props$hd,\n      id = _this$props.id,\n      source = _this$props.source,\n      url = _this$props.url;\n    if (source === 'youtube') {\n      return [\"//www.youtube.com/embed/\" + id, '?autohide=true', \"&amp;autoplay=\" + autoplay, \"&amp;color=\" + encodeURIComponent(color), \"&amp;hq=\" + hd, '&amp;jsapi=false', \"&amp;modestbranding=\" + brandedUI, \"&amp;rel=\" + (brandedUI ? 0 : 1)].join('');\n    }\n    if (source === 'vimeo') {\n      return [\"//player.vimeo.com/video/\" + id, '?api=false', \"&amp;autoplay=\" + autoplay, '&amp;byline=false', \"&amp;color=\" + encodeURIComponent(color), '&amp;portrait=false', '&amp;title=false'].join('');\n    }\n    return url;\n  };\n  _proto.render = function render() {\n    var _this$props2 = this.props,\n      aspectRatio = _this$props2.aspectRatio,\n      className = _this$props2.className,\n      icon = _this$props2.icon,\n      placeholder = _this$props2.placeholder;\n    var active = this.state.active;\n    var classes = cx('ui', aspectRatio, useKeyOnly(active, 'active'), 'embed', className);\n    var rest = getUnhandledProps(Embed, this.props);\n    var ElementType = getElementType(Embed, this.props);\n    var iconShorthand = icon !== undefined ? icon : 'video play';\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      onClick: this.handleClick\n    }), Icon.create(iconShorthand, {\n      autoGenerateKey: false\n    }), placeholder && /*#__PURE__*/React.createElement(\"img\", {\n      className: \"placeholder\",\n      src: placeholder\n    }), this.renderEmbed());\n  };\n  _proto.renderEmbed = function renderEmbed() {\n    var _this$props3 = this.props,\n      children = _this$props3.children,\n      content = _this$props3.content,\n      iframe = _this$props3.iframe,\n      source = _this$props3.source;\n    var active = this.state.active;\n    if (!active) return null;\n    if (!childrenUtils.isNil(children)) return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"embed\"\n    }, children);\n    if (!childrenUtils.isNil(content)) return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"embed\"\n    }, content);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"embed\"\n    }, createHTMLIframe(childrenUtils.isNil(iframe) ? this.getSrc() : iframe, {\n      defaultProps: {\n        allowFullScreen: false,\n        frameBorder: 0,\n        height: '100%',\n        scrolling: 'no',\n        src: this.getSrc(),\n        title: \"Embedded content from \" + source + \".\",\n        width: '100%'\n      },\n      autoGenerateKey: false\n    }));\n  };\n  return Embed;\n}(Component);\nEmbed.handledProps = [\"active\", \"as\", \"aspectRatio\", \"autoplay\", \"brandedUI\", \"children\", \"className\", \"color\", \"content\", \"defaultActive\", \"hd\", \"icon\", \"id\", \"iframe\", \"onClick\", \"placeholder\", \"source\", \"url\"];\nexport { Embed as default };\nEmbed.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n  /** An embed can be active. */\n  active: PropTypes.bool,\n  /** An embed can specify an alternative aspect ratio. */\n  aspectRatio: PropTypes.oneOf(['4:3', '16:9', '21:9']),\n  /** Setting to true or false will force autoplay. */\n  autoplay: customPropTypes.every([customPropTypes.demand(['source']), PropTypes.bool]),\n  /** Whether to show networks branded UI like title cards, or after video calls to action. */\n  brandedUI: customPropTypes.every([customPropTypes.demand(['source']), PropTypes.bool]),\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Specifies a default chrome color with Vimeo or YouTube. */\n  color: customPropTypes.every([customPropTypes.demand(['source']), PropTypes.string]),\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n  /** Initial value of active. */\n  defaultActive: PropTypes.bool,\n  /** Whether to prefer HD content. */\n  hd: customPropTypes.every([customPropTypes.demand(['source']), PropTypes.bool]),\n  /** Specifies an icon to use with placeholder content. */\n  icon: customPropTypes.itemShorthand,\n  /** Specifies an id for source. */\n  id: customPropTypes.every([customPropTypes.demand(['source']), PropTypes.string]),\n  /** Shorthand for HTML iframe. */\n  iframe: customPropTypes.every([customPropTypes.demand(['source']), customPropTypes.itemShorthand]),\n  /**\r\n   * Called on click.\r\n   *\r\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\r\n   * @param {object} data - All props and proposed value.\r\n   */\n  onClick: PropTypes.func,\n  /** A placeholder image for embed. */\n  placeholder: PropTypes.string,\n  /** Specifies a source to use. */\n  source: customPropTypes.every([customPropTypes.disallow(['sourceUrl']), PropTypes.oneOf(['youtube', 'vimeo'])]),\n  /** Specifies a url to use for embed. */\n  url: customPropTypes.every([customPropTypes.disallow(['source']), PropTypes.string])\n} : {};\nEmbed.autoControlledProps = ['active'];","map":{"version":3,"names":["_extends","_inheritsLoose","cx","PropTypes","React","ModernAutoControlledComponent","Component","childrenUtils","createHTMLIframe","customPropTypes","getElementType","getUnhandledProps","useKeyOnly","Icon","Embed","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","handleClick","e","onClick","props","active","state","setState","_proto","prototype","getSrc","_this$props","_this$props$autoplay","autoplay","_this$props$brandedUI","brandedUI","_this$props$color","color","_this$props$hd","hd","id","source","url","encodeURIComponent","join","render","_this$props2","aspectRatio","className","icon","placeholder","classes","rest","ElementType","iconShorthand","undefined","createElement","create","autoGenerateKey","src","renderEmbed","_this$props3","children","content","iframe","isNil","defaultProps","allowFullScreen","frameBorder","height","scrolling","title","width","handledProps","default","propTypes","process","env","NODE_ENV","as","elementType","bool","oneOf","every","demand","node","string","contentShorthand","defaultActive","itemShorthand","func","disallow","autoControlledProps"],"sources":["C:/Users/sam/final/camunda-react/node_modules/semantic-ui-react/dist/es/modules/Embed/Embed.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\r\nimport cx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { ModernAutoControlledComponent as Component, childrenUtils, createHTMLIframe, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\r\nimport Icon from '../../elements/Icon';\r\n/**\r\n * An embed displays content from other websites like YouTube videos or Google Maps.\r\n */\r\n\r\nvar Embed = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(Embed, _Component);\r\n\r\n  function Embed() {\r\n    var _this;\r\n\r\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n      args[_key] = arguments[_key];\r\n    }\r\n\r\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\r\n\r\n    _this.handleClick = function (e) {\r\n      var onClick = _this.props.onClick;\r\n      var active = _this.state.active;\r\n      if (onClick) onClick(e, _extends({}, _this.props, {\r\n        active: true\r\n      }));\r\n      if (!active) _this.setState({\r\n        active: true\r\n      });\r\n    };\r\n\r\n    return _this;\r\n  }\r\n\r\n  var _proto = Embed.prototype;\r\n\r\n  _proto.getSrc = function getSrc() {\r\n    var _this$props = this.props,\r\n        _this$props$autoplay = _this$props.autoplay,\r\n        autoplay = _this$props$autoplay === void 0 ? true : _this$props$autoplay,\r\n        _this$props$brandedUI = _this$props.brandedUI,\r\n        brandedUI = _this$props$brandedUI === void 0 ? false : _this$props$brandedUI,\r\n        _this$props$color = _this$props.color,\r\n        color = _this$props$color === void 0 ? '#444444' : _this$props$color,\r\n        _this$props$hd = _this$props.hd,\r\n        hd = _this$props$hd === void 0 ? true : _this$props$hd,\r\n        id = _this$props.id,\r\n        source = _this$props.source,\r\n        url = _this$props.url;\r\n\r\n    if (source === 'youtube') {\r\n      return [\"//www.youtube.com/embed/\" + id, '?autohide=true', \"&amp;autoplay=\" + autoplay, \"&amp;color=\" + encodeURIComponent(color), \"&amp;hq=\" + hd, '&amp;jsapi=false', \"&amp;modestbranding=\" + brandedUI, \"&amp;rel=\" + (brandedUI ? 0 : 1)].join('');\r\n    }\r\n\r\n    if (source === 'vimeo') {\r\n      return [\"//player.vimeo.com/video/\" + id, '?api=false', \"&amp;autoplay=\" + autoplay, '&amp;byline=false', \"&amp;color=\" + encodeURIComponent(color), '&amp;portrait=false', '&amp;title=false'].join('');\r\n    }\r\n\r\n    return url;\r\n  };\r\n\r\n  _proto.render = function render() {\r\n    var _this$props2 = this.props,\r\n        aspectRatio = _this$props2.aspectRatio,\r\n        className = _this$props2.className,\r\n        icon = _this$props2.icon,\r\n        placeholder = _this$props2.placeholder;\r\n    var active = this.state.active;\r\n    var classes = cx('ui', aspectRatio, useKeyOnly(active, 'active'), 'embed', className);\r\n    var rest = getUnhandledProps(Embed, this.props);\r\n    var ElementType = getElementType(Embed, this.props);\r\n    var iconShorthand = icon !== undefined ? icon : 'video play';\r\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\r\n      className: classes,\r\n      onClick: this.handleClick\r\n    }), Icon.create(iconShorthand, {\r\n      autoGenerateKey: false\r\n    }), placeholder && /*#__PURE__*/React.createElement(\"img\", {\r\n      className: \"placeholder\",\r\n      src: placeholder\r\n    }), this.renderEmbed());\r\n  };\r\n\r\n  _proto.renderEmbed = function renderEmbed() {\r\n    var _this$props3 = this.props,\r\n        children = _this$props3.children,\r\n        content = _this$props3.content,\r\n        iframe = _this$props3.iframe,\r\n        source = _this$props3.source;\r\n    var active = this.state.active;\r\n    if (!active) return null;\r\n    if (!childrenUtils.isNil(children)) return /*#__PURE__*/React.createElement(\"div\", {\r\n      className: \"embed\"\r\n    }, children);\r\n    if (!childrenUtils.isNil(content)) return /*#__PURE__*/React.createElement(\"div\", {\r\n      className: \"embed\"\r\n    }, content);\r\n    return /*#__PURE__*/React.createElement(\"div\", {\r\n      className: \"embed\"\r\n    }, createHTMLIframe(childrenUtils.isNil(iframe) ? this.getSrc() : iframe, {\r\n      defaultProps: {\r\n        allowFullScreen: false,\r\n        frameBorder: 0,\r\n        height: '100%',\r\n        scrolling: 'no',\r\n        src: this.getSrc(),\r\n        title: \"Embedded content from \" + source + \".\",\r\n        width: '100%'\r\n      },\r\n      autoGenerateKey: false\r\n    }));\r\n  };\r\n\r\n  return Embed;\r\n}(Component);\r\n\r\nEmbed.handledProps = [\"active\", \"as\", \"aspectRatio\", \"autoplay\", \"brandedUI\", \"children\", \"className\", \"color\", \"content\", \"defaultActive\", \"hd\", \"icon\", \"id\", \"iframe\", \"onClick\", \"placeholder\", \"source\", \"url\"];\r\nexport { Embed as default };\r\nEmbed.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: PropTypes.elementType,\r\n\r\n  /** An embed can be active. */\r\n  active: PropTypes.bool,\r\n\r\n  /** An embed can specify an alternative aspect ratio. */\r\n  aspectRatio: PropTypes.oneOf(['4:3', '16:9', '21:9']),\r\n\r\n  /** Setting to true or false will force autoplay. */\r\n  autoplay: customPropTypes.every([customPropTypes.demand(['source']), PropTypes.bool]),\r\n\r\n  /** Whether to show networks branded UI like title cards, or after video calls to action. */\r\n  brandedUI: customPropTypes.every([customPropTypes.demand(['source']), PropTypes.bool]),\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** Specifies a default chrome color with Vimeo or YouTube. */\r\n  color: customPropTypes.every([customPropTypes.demand(['source']), PropTypes.string]),\r\n\r\n  /** Shorthand for primary content. */\r\n  content: customPropTypes.contentShorthand,\r\n\r\n  /** Initial value of active. */\r\n  defaultActive: PropTypes.bool,\r\n\r\n  /** Whether to prefer HD content. */\r\n  hd: customPropTypes.every([customPropTypes.demand(['source']), PropTypes.bool]),\r\n\r\n  /** Specifies an icon to use with placeholder content. */\r\n  icon: customPropTypes.itemShorthand,\r\n\r\n  /** Specifies an id for source. */\r\n  id: customPropTypes.every([customPropTypes.demand(['source']), PropTypes.string]),\r\n\r\n  /** Shorthand for HTML iframe. */\r\n  iframe: customPropTypes.every([customPropTypes.demand(['source']), customPropTypes.itemShorthand]),\r\n\r\n  /**\r\n   * Called on click.\r\n   *\r\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\r\n   * @param {object} data - All props and proposed value.\r\n   */\r\n  onClick: PropTypes.func,\r\n\r\n  /** A placeholder image for embed. */\r\n  placeholder: PropTypes.string,\r\n\r\n  /** Specifies a source to use. */\r\n  source: customPropTypes.every([customPropTypes.disallow(['sourceUrl']), PropTypes.oneOf(['youtube', 'vimeo'])]),\r\n\r\n  /** Specifies a url to use for embed. */\r\n  url: customPropTypes.every([customPropTypes.disallow(['source']), PropTypes.string])\r\n} : {};\r\nEmbed.autoControlledProps = ['active'];"],"mappings":"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"},"metadata":{},"sourceType":"module"}