{"ast":null,"code":"var SetCache = require('./_SetCache'),\n  arrayIncludes = require('./_arrayIncludes'),\n  arrayIncludesWith = require('./_arrayIncludesWith'),\n  arrayMap = require('./_arrayMap'),\n  baseUnary = require('./_baseUnary'),\n  cacheHas = require('./_cacheHas');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\r\n * The base implementation of methods like `_.intersection`, without support\r\n * for iteratee shorthands, that accepts an array of arrays to inspect.\r\n *\r\n * @private\r\n * @param {Array} arrays The arrays to inspect.\r\n * @param {Function} [iteratee] The iteratee invoked per element.\r\n * @param {Function} [comparator] The comparator invoked per element.\r\n * @returns {Array} Returns the new array of shared values.\r\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n    length = arrays[0].length,\n    othLength = arrays.length,\n    othIndex = othLength,\n    caches = Array(othLength),\n    maxLength = Infinity,\n    result = [];\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || length >= 120 && array.length >= 120) ? new SetCache(othIndex && array) : undefined;\n  }\n  array = arrays[0];\n  var index = -1,\n    seen = caches[0];\n  outer: while (++index < length && result.length < maxLength) {\n    var value = array[index],\n      computed = iteratee ? iteratee(value) : value;\n    value = comparator || value !== 0 ? value : 0;\n    if (!(seen ? cacheHas(seen, computed) : includes(result, computed, comparator))) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache ? cacheHas(cache, computed) : includes(arrays[othIndex], computed, comparator))) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\nmodule.exports = baseIntersection;","map":{"version":3,"names":["SetCache","require","arrayIncludes","arrayIncludesWith","arrayMap","baseUnary","cacheHas","nativeMin","Math","min","baseIntersection","arrays","iteratee","comparator","includes","length","othLength","othIndex","caches","Array","maxLength","Infinity","result","array","undefined","index","seen","outer","value","computed","cache","push","module","exports"],"sources":["C:/Users/sam/final/camunda-react/node_modules/lodash/_baseIntersection.js"],"sourcesContent":["var SetCache = require('./_SetCache'),\r\n    arrayIncludes = require('./_arrayIncludes'),\r\n    arrayIncludesWith = require('./_arrayIncludesWith'),\r\n    arrayMap = require('./_arrayMap'),\r\n    baseUnary = require('./_baseUnary'),\r\n    cacheHas = require('./_cacheHas');\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMin = Math.min;\r\n\r\n/**\r\n * The base implementation of methods like `_.intersection`, without support\r\n * for iteratee shorthands, that accepts an array of arrays to inspect.\r\n *\r\n * @private\r\n * @param {Array} arrays The arrays to inspect.\r\n * @param {Function} [iteratee] The iteratee invoked per element.\r\n * @param {Function} [comparator] The comparator invoked per element.\r\n * @returns {Array} Returns the new array of shared values.\r\n */\r\nfunction baseIntersection(arrays, iteratee, comparator) {\r\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\r\n      length = arrays[0].length,\r\n      othLength = arrays.length,\r\n      othIndex = othLength,\r\n      caches = Array(othLength),\r\n      maxLength = Infinity,\r\n      result = [];\r\n\r\n  while (othIndex--) {\r\n    var array = arrays[othIndex];\r\n    if (othIndex && iteratee) {\r\n      array = arrayMap(array, baseUnary(iteratee));\r\n    }\r\n    maxLength = nativeMin(array.length, maxLength);\r\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\r\n      ? new SetCache(othIndex && array)\r\n      : undefined;\r\n  }\r\n  array = arrays[0];\r\n\r\n  var index = -1,\r\n      seen = caches[0];\r\n\r\n  outer:\r\n  while (++index < length && result.length < maxLength) {\r\n    var value = array[index],\r\n        computed = iteratee ? iteratee(value) : value;\r\n\r\n    value = (comparator || value !== 0) ? value : 0;\r\n    if (!(seen\r\n          ? cacheHas(seen, computed)\r\n          : includes(result, computed, comparator)\r\n        )) {\r\n      othIndex = othLength;\r\n      while (--othIndex) {\r\n        var cache = caches[othIndex];\r\n        if (!(cache\r\n              ? cacheHas(cache, computed)\r\n              : includes(arrays[othIndex], computed, comparator))\r\n            ) {\r\n          continue outer;\r\n        }\r\n      }\r\n      if (seen) {\r\n        seen.push(computed);\r\n      }\r\n      result.push(value);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\nmodule.exports = baseIntersection;\r\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAa,CAAC;EACjCC,aAAa,GAAGD,OAAO,CAAC,kBAAkB,CAAC;EAC3CE,iBAAiB,GAAGF,OAAO,CAAC,sBAAsB,CAAC;EACnDG,QAAQ,GAAGH,OAAO,CAAC,aAAa,CAAC;EACjCI,SAAS,GAAGJ,OAAO,CAAC,cAAc,CAAC;EACnCK,QAAQ,GAAGL,OAAO,CAAC,aAAa,CAAC;;AAErC;AACA,IAAIM,SAAS,GAAGC,IAAI,CAACC,GAAG;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,gBAAgBA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAE;EACtD,IAAIC,QAAQ,GAAGD,UAAU,GAAGV,iBAAiB,GAAGD,aAAa;IACzDa,MAAM,GAAGJ,MAAM,CAAC,CAAC,CAAC,CAACI,MAAM;IACzBC,SAAS,GAAGL,MAAM,CAACI,MAAM;IACzBE,QAAQ,GAAGD,SAAS;IACpBE,MAAM,GAAGC,KAAK,CAACH,SAAS,CAAC;IACzBI,SAAS,GAAGC,QAAQ;IACpBC,MAAM,GAAG,EAAE;EAEf,OAAOL,QAAQ,EAAE,EAAE;IACjB,IAAIM,KAAK,GAAGZ,MAAM,CAACM,QAAQ,CAAC;IAC5B,IAAIA,QAAQ,IAAIL,QAAQ,EAAE;MACxBW,KAAK,GAAGnB,QAAQ,CAACmB,KAAK,EAAElB,SAAS,CAACO,QAAQ,CAAC,CAAC;IAC9C;IACAQ,SAAS,GAAGb,SAAS,CAACgB,KAAK,CAACR,MAAM,EAAEK,SAAS,CAAC;IAC9CF,MAAM,CAACD,QAAQ,CAAC,GAAG,CAACJ,UAAU,KAAKD,QAAQ,IAAKG,MAAM,IAAI,GAAG,IAAIQ,KAAK,CAACR,MAAM,IAAI,GAAI,CAAC,GAClF,IAAIf,QAAQ,CAACiB,QAAQ,IAAIM,KAAK,CAAC,GAC/BC,SAAS;EACf;EACAD,KAAK,GAAGZ,MAAM,CAAC,CAAC,CAAC;EAEjB,IAAIc,KAAK,GAAG,CAAC,CAAC;IACVC,IAAI,GAAGR,MAAM,CAAC,CAAC,CAAC;EAEpBS,KAAK,EACL,OAAO,EAAEF,KAAK,GAAGV,MAAM,IAAIO,MAAM,CAACP,MAAM,GAAGK,SAAS,EAAE;IACpD,IAAIQ,KAAK,GAAGL,KAAK,CAACE,KAAK,CAAC;MACpBI,QAAQ,GAAGjB,QAAQ,GAAGA,QAAQ,CAACgB,KAAK,CAAC,GAAGA,KAAK;IAEjDA,KAAK,GAAIf,UAAU,IAAIe,KAAK,KAAK,CAAC,GAAIA,KAAK,GAAG,CAAC;IAC/C,IAAI,EAAEF,IAAI,GACFpB,QAAQ,CAACoB,IAAI,EAAEG,QAAQ,CAAC,GACxBf,QAAQ,CAACQ,MAAM,EAAEO,QAAQ,EAAEhB,UAAU,CAAC,CACzC,EAAE;MACLI,QAAQ,GAAGD,SAAS;MACpB,OAAO,EAAEC,QAAQ,EAAE;QACjB,IAAIa,KAAK,GAAGZ,MAAM,CAACD,QAAQ,CAAC;QAC5B,IAAI,EAAEa,KAAK,GACHxB,QAAQ,CAACwB,KAAK,EAAED,QAAQ,CAAC,GACzBf,QAAQ,CAACH,MAAM,CAACM,QAAQ,CAAC,EAAEY,QAAQ,EAAEhB,UAAU,CAAC,CAAC,EACnD;UACJ,SAASc,KAAK;QAChB;MACF;MACA,IAAID,IAAI,EAAE;QACRA,IAAI,CAACK,IAAI,CAACF,QAAQ,CAAC;MACrB;MACAP,MAAM,CAACS,IAAI,CAACH,KAAK,CAAC;IACpB;EACF;EACA,OAAON,MAAM;AACf;AAEAU,MAAM,CAACC,OAAO,GAAGvB,gBAAgB"},"metadata":{},"sourceType":"script"}