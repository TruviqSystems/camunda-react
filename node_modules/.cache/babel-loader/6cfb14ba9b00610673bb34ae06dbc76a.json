{"ast":null,"code":"// =========\n// = humps =\n// =========\n// Underscore-to-camelCase converter (and vice versa)\n// for strings and object keys\n\n// humps is copyright © 2012+ Dom Christie\n// Released under the MIT license.\n\n;\n(function (global) {\n  var _processKeys = function (convert, obj, options) {\n    if (!_isObject(obj) || _isDate(obj) || _isRegExp(obj) || _isBoolean(obj) || _isFunction(obj)) {\n      return obj;\n    }\n    var output,\n      i = 0,\n      l = 0;\n    if (_isArray(obj)) {\n      output = [];\n      for (l = obj.length; i < l; i++) {\n        output.push(_processKeys(convert, obj[i], options));\n      }\n    } else {\n      output = {};\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          output[convert(key, options)] = _processKeys(convert, obj[key], options);\n        }\n      }\n    }\n    return output;\n  };\n\n  // String conversion methods\n\n  var separateWords = function (string, options) {\n    options = options || {};\n    var separator = options.separator || '_';\n    var split = options.split || /(?=[A-Z])/;\n    return string.split(split).join(separator);\n  };\n  var camelize = function (string) {\n    if (_isNumerical(string)) {\n      return string;\n    }\n    string = string.replace(/[\\-_\\s]+(.)?/g, function (match, chr) {\n      return chr ? chr.toUpperCase() : '';\n    });\n    // Ensure 1st char is always lowercase\n    return string.substr(0, 1).toLowerCase() + string.substr(1);\n  };\n  var pascalize = function (string) {\n    var camelized = camelize(string);\n    // Ensure 1st char is always uppercase\n    return camelized.substr(0, 1).toUpperCase() + camelized.substr(1);\n  };\n  var decamelize = function (string, options) {\n    return separateWords(string, options).toLowerCase();\n  };\n\n  // Utilities\n  // Taken from Underscore.js\n\n  var toString = Object.prototype.toString;\n  var _isFunction = function (obj) {\n    return typeof obj === 'function';\n  };\n  var _isObject = function (obj) {\n    return obj === Object(obj);\n  };\n  var _isArray = function (obj) {\n    return toString.call(obj) == '[object Array]';\n  };\n  var _isDate = function (obj) {\n    return toString.call(obj) == '[object Date]';\n  };\n  var _isRegExp = function (obj) {\n    return toString.call(obj) == '[object RegExp]';\n  };\n  var _isBoolean = function (obj) {\n    return toString.call(obj) == '[object Boolean]';\n  };\n\n  // Performant way to determine if obj coerces to a number\n  var _isNumerical = function (obj) {\n    obj = obj - 0;\n    return obj === obj;\n  };\n\n  // Sets up function which handles processing keys\n  // allowing the convert function to be modified by a callback\n  var _processor = function (convert, options) {\n    var callback = options && 'process' in options ? options.process : options;\n    if (typeof callback !== 'function') {\n      return convert;\n    }\n    return function (string, options) {\n      return callback(string, convert, options);\n    };\n  };\n  var humps = {\n    camelize: camelize,\n    decamelize: decamelize,\n    pascalize: pascalize,\n    depascalize: decamelize,\n    camelizeKeys: function (object, options) {\n      return _processKeys(_processor(camelize, options), object);\n    },\n    decamelizeKeys: function (object, options) {\n      return _processKeys(_processor(decamelize, options), object, options);\n    },\n    pascalizeKeys: function (object, options) {\n      return _processKeys(_processor(pascalize, options), object);\n    },\n    depascalizeKeys: function () {\n      return this.decamelizeKeys.apply(this, arguments);\n    }\n  };\n  if (typeof define === 'function' && define.amd) {\n    define(humps);\n  } else if (typeof module !== 'undefined' && module.exports) {\n    module.exports = humps;\n  } else {\n    global.humps = humps;\n  }\n})(this);","map":{"version":3,"names":["global","_processKeys","convert","obj","options","_isObject","_isDate","_isRegExp","_isBoolean","_isFunction","output","i","l","_isArray","length","push","key","Object","prototype","hasOwnProperty","call","separateWords","string","separator","split","join","camelize","_isNumerical","replace","match","chr","toUpperCase","substr","toLowerCase","pascalize","camelized","decamelize","toString","_processor","callback","process","humps","depascalize","camelizeKeys","object","decamelizeKeys","pascalizeKeys","depascalizeKeys","apply","arguments","define","amd","module","exports"],"sources":["C:/Users/sam/final/camunda-react/node_modules/humps/humps.js"],"sourcesContent":["// =========\r\n// = humps =\r\n// =========\r\n// Underscore-to-camelCase converter (and vice versa)\r\n// for strings and object keys\r\n\r\n// humps is copyright © 2012+ Dom Christie\r\n// Released under the MIT license.\r\n\r\n\r\n;(function(global) {\r\n\r\n  var _processKeys = function(convert, obj, options) {\r\n    if(!_isObject(obj) || _isDate(obj) || _isRegExp(obj) || _isBoolean(obj) || _isFunction(obj)) {\r\n      return obj;\r\n    }\r\n\r\n    var output,\r\n        i = 0,\r\n        l = 0;\r\n\r\n    if(_isArray(obj)) {\r\n      output = [];\r\n      for(l=obj.length; i<l; i++) {\r\n        output.push(_processKeys(convert, obj[i], options));\r\n      }\r\n    }\r\n    else {\r\n      output = {};\r\n      for(var key in obj) {\r\n        if(Object.prototype.hasOwnProperty.call(obj, key)) {\r\n          output[convert(key, options)] = _processKeys(convert, obj[key], options);\r\n        }\r\n      }\r\n    }\r\n    return output;\r\n  };\r\n\r\n  // String conversion methods\r\n\r\n  var separateWords = function(string, options) {\r\n    options = options || {};\r\n    var separator = options.separator || '_';\r\n    var split = options.split || /(?=[A-Z])/;\r\n\r\n    return string.split(split).join(separator);\r\n  };\r\n\r\n  var camelize = function(string) {\r\n    if (_isNumerical(string)) {\r\n      return string;\r\n    }\r\n    string = string.replace(/[\\-_\\s]+(.)?/g, function(match, chr) {\r\n      return chr ? chr.toUpperCase() : '';\r\n    });\r\n    // Ensure 1st char is always lowercase\r\n    return string.substr(0, 1).toLowerCase() + string.substr(1);\r\n  };\r\n\r\n  var pascalize = function(string) {\r\n    var camelized = camelize(string);\r\n    // Ensure 1st char is always uppercase\r\n    return camelized.substr(0, 1).toUpperCase() + camelized.substr(1);\r\n  };\r\n\r\n  var decamelize = function(string, options) {\r\n    return separateWords(string, options).toLowerCase();\r\n  };\r\n\r\n  // Utilities\r\n  // Taken from Underscore.js\r\n\r\n  var toString = Object.prototype.toString;\r\n\r\n  var _isFunction = function(obj) {\r\n    return typeof(obj) === 'function';\r\n  };\r\n  var _isObject = function(obj) {\r\n    return obj === Object(obj);\r\n  };\r\n  var _isArray = function(obj) {\r\n    return toString.call(obj) == '[object Array]';\r\n  };\r\n  var _isDate = function(obj) {\r\n    return toString.call(obj) == '[object Date]';\r\n  };\r\n  var _isRegExp = function(obj) {\r\n    return toString.call(obj) == '[object RegExp]';\r\n  };\r\n  var _isBoolean = function(obj) {\r\n    return toString.call(obj) == '[object Boolean]';\r\n  };\r\n\r\n  // Performant way to determine if obj coerces to a number\r\n  var _isNumerical = function(obj) {\r\n    obj = obj - 0;\r\n    return obj === obj;\r\n  };\r\n\r\n  // Sets up function which handles processing keys\r\n  // allowing the convert function to be modified by a callback\r\n  var _processor = function(convert, options) {\r\n    var callback = options && 'process' in options ? options.process : options;\r\n\r\n    if(typeof(callback) !== 'function') {\r\n      return convert;\r\n    }\r\n\r\n    return function(string, options) {\r\n      return callback(string, convert, options);\r\n    }\r\n  };\r\n\r\n  var humps = {\r\n    camelize: camelize,\r\n    decamelize: decamelize,\r\n    pascalize: pascalize,\r\n    depascalize: decamelize,\r\n    camelizeKeys: function(object, options) {\r\n      return _processKeys(_processor(camelize, options), object);\r\n    },\r\n    decamelizeKeys: function(object, options) {\r\n      return _processKeys(_processor(decamelize, options), object, options);\r\n    },\r\n    pascalizeKeys: function(object, options) {\r\n      return _processKeys(_processor(pascalize, options), object);\r\n    },\r\n    depascalizeKeys: function () {\r\n      return this.decamelizeKeys.apply(this, arguments);\r\n    }\r\n  };\r\n\r\n  if (typeof define === 'function' && define.amd) {\r\n    define(humps);\r\n  } else if (typeof module !== 'undefined' && module.exports) {\r\n    module.exports = humps;\r\n  } else {\r\n    global.humps = humps;\r\n  }\r\n\r\n})(this);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}