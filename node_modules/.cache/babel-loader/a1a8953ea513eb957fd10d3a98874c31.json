{"ast":null,"code":"/**\r\n * Failsafe remove an element from a collection\r\n *\r\n * @param  {Array<Object>} [collection]\r\n * @param  {Object} [element]\r\n *\r\n * @return {number} the previous index of the element\r\n */\nexport function remove(collection, element) {\n  if (!collection || !element) {\n    return -1;\n  }\n  var idx = collection.indexOf(element);\n  if (idx !== -1) {\n    collection.splice(idx, 1);\n  }\n  return idx;\n}\n\n/**\r\n * Fail save add an element to the given connection, ensuring\r\n * it does not yet exist.\r\n *\r\n * @param {Array<Object>} collection\r\n * @param {Object} element\r\n * @param {number} idx\r\n */\nexport function add(collection, element, idx) {\n  if (!collection || !element) {\n    return;\n  }\n  if (typeof idx !== 'number') {\n    idx = -1;\n  }\n  var currentIdx = collection.indexOf(element);\n  if (currentIdx !== -1) {\n    if (currentIdx === idx) {\n      // nothing to do, position has not changed\n      return;\n    } else {\n      if (idx !== -1) {\n        // remove from current position\n        collection.splice(currentIdx, 1);\n      } else {\n        // already exists in collection\n        return;\n      }\n    }\n  }\n  if (idx !== -1) {\n    // insert at specified position\n    collection.splice(idx, 0, element);\n  } else {\n    // push to end\n    collection.push(element);\n  }\n}\n\n/**\r\n * Fail save get the index of an element in a collection.\r\n *\r\n * @param {Array<Object>} collection\r\n * @param {Object} element\r\n *\r\n * @return {number} the index or -1 if collection or element do\r\n *                  not exist or the element is not contained.\r\n */\nexport function indexOf(collection, element) {\n  if (!collection || !element) {\n    return -1;\n  }\n  return collection.indexOf(element);\n}","map":{"version":3,"names":["remove","collection","element","idx","indexOf","splice","add","currentIdx","push"],"sources":["C:/Users/sam/final/camunda-react/node_modules/diagram-js/lib/util/Collections.js"],"sourcesContent":["/**\r\n * Failsafe remove an element from a collection\r\n *\r\n * @param  {Array<Object>} [collection]\r\n * @param  {Object} [element]\r\n *\r\n * @return {number} the previous index of the element\r\n */\r\nexport function remove(collection, element) {\r\n\r\n  if (!collection || !element) {\r\n    return -1;\r\n  }\r\n\r\n  var idx = collection.indexOf(element);\r\n\r\n  if (idx !== -1) {\r\n    collection.splice(idx, 1);\r\n  }\r\n\r\n  return idx;\r\n}\r\n\r\n/**\r\n * Fail save add an element to the given connection, ensuring\r\n * it does not yet exist.\r\n *\r\n * @param {Array<Object>} collection\r\n * @param {Object} element\r\n * @param {number} idx\r\n */\r\nexport function add(collection, element, idx) {\r\n\r\n  if (!collection || !element) {\r\n    return;\r\n  }\r\n\r\n  if (typeof idx !== 'number') {\r\n    idx = -1;\r\n  }\r\n\r\n  var currentIdx = collection.indexOf(element);\r\n\r\n  if (currentIdx !== -1) {\r\n\r\n    if (currentIdx === idx) {\r\n\r\n      // nothing to do, position has not changed\r\n      return;\r\n    } else {\r\n\r\n      if (idx !== -1) {\r\n\r\n        // remove from current position\r\n        collection.splice(currentIdx, 1);\r\n      } else {\r\n\r\n        // already exists in collection\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  if (idx !== -1) {\r\n\r\n    // insert at specified position\r\n    collection.splice(idx, 0, element);\r\n  } else {\r\n\r\n    // push to end\r\n    collection.push(element);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Fail save get the index of an element in a collection.\r\n *\r\n * @param {Array<Object>} collection\r\n * @param {Object} element\r\n *\r\n * @return {number} the index or -1 if collection or element do\r\n *                  not exist or the element is not contained.\r\n */\r\nexport function indexOf(collection, element) {\r\n\r\n  if (!collection || !element) {\r\n    return -1;\r\n  }\r\n\r\n  return collection.indexOf(element);\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,MAAMA,CAACC,UAAU,EAAEC,OAAO,EAAE;EAE1C,IAAI,CAACD,UAAU,IAAI,CAACC,OAAO,EAAE;IAC3B,OAAO,CAAC,CAAC;EACX;EAEA,IAAIC,GAAG,GAAGF,UAAU,CAACG,OAAO,CAACF,OAAO,CAAC;EAErC,IAAIC,GAAG,KAAK,CAAC,CAAC,EAAE;IACdF,UAAU,CAACI,MAAM,CAACF,GAAG,EAAE,CAAC,CAAC;EAC3B;EAEA,OAAOA,GAAG;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,GAAGA,CAACL,UAAU,EAAEC,OAAO,EAAEC,GAAG,EAAE;EAE5C,IAAI,CAACF,UAAU,IAAI,CAACC,OAAO,EAAE;IAC3B;EACF;EAEA,IAAI,OAAOC,GAAG,KAAK,QAAQ,EAAE;IAC3BA,GAAG,GAAG,CAAC,CAAC;EACV;EAEA,IAAII,UAAU,GAAGN,UAAU,CAACG,OAAO,CAACF,OAAO,CAAC;EAE5C,IAAIK,UAAU,KAAK,CAAC,CAAC,EAAE;IAErB,IAAIA,UAAU,KAAKJ,GAAG,EAAE;MAEtB;MACA;IACF,CAAC,MAAM;MAEL,IAAIA,GAAG,KAAK,CAAC,CAAC,EAAE;QAEd;QACAF,UAAU,CAACI,MAAM,CAACE,UAAU,EAAE,CAAC,CAAC;MAClC,CAAC,MAAM;QAEL;QACA;MACF;IACF;EACF;EAEA,IAAIJ,GAAG,KAAK,CAAC,CAAC,EAAE;IAEd;IACAF,UAAU,CAACI,MAAM,CAACF,GAAG,EAAE,CAAC,EAAED,OAAO,CAAC;EACpC,CAAC,MAAM;IAEL;IACAD,UAAU,CAACO,IAAI,CAACN,OAAO,CAAC;EAC1B;AACF;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,OAAOA,CAACH,UAAU,EAAEC,OAAO,EAAE;EAE3C,IAAI,CAACD,UAAU,IAAI,CAACC,OAAO,EAAE;IAC3B,OAAO,CAAC,CAAC;EACX;EAEA,OAAOD,UAAU,CAACG,OAAO,CAACF,OAAO,CAAC;AACpC"},"metadata":{},"sourceType":"module"}