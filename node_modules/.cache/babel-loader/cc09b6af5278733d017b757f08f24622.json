{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\nimport Icon from '../../elements/Icon';\n\n/**\r\n * A dropdown menu can contain a header.\r\n */\nfunction DropdownHeader(props) {\n  var children = props.children,\n    className = props.className,\n    content = props.content,\n    icon = props.icon;\n  var classes = cx('header', className);\n  var rest = getUnhandledProps(DropdownHeader, props);\n  var ElementType = getElementType(DropdownHeader, props);\n  if (!childrenUtils.isNil(children)) return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), Icon.create(icon), content);\n}\nDropdownHeader.handledProps = ['as', 'children', 'className', 'content', 'icon'];\nDropdownHeader._meta = {\n  name: 'DropdownHeader',\n  parent: 'Dropdown',\n  type: META.TYPES.MODULE\n};\nDropdownHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function) */\n  as: customPropTypes.as,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n  /** Shorthand for Icon. */\n  icon: customPropTypes.itemShorthand\n} : {};\nDropdownHeader.create = createShorthandFactory(DropdownHeader, function (content) {\n  return {\n    content: content\n  };\n});\nexport default DropdownHeader;","map":{"version":3,"names":["_extends","cx","PropTypes","React","childrenUtils","createShorthandFactory","customPropTypes","getElementType","getUnhandledProps","META","Icon","DropdownHeader","props","children","className","content","icon","classes","rest","ElementType","isNil","createElement","create","handledProps","_meta","name","parent","type","TYPES","MODULE","propTypes","process","env","NODE_ENV","as","node","string","contentShorthand","itemShorthand"],"sources":["C:/Users/sam/final/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/modules/Dropdown/DropdownHeader.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\r\nimport cx from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\r\nimport Icon from '../../elements/Icon';\r\n\r\n/**\r\n * A dropdown menu can contain a header.\r\n */\r\nfunction DropdownHeader(props) {\r\n  var children = props.children,\r\n      className = props.className,\r\n      content = props.content,\r\n      icon = props.icon;\r\n\r\n\r\n  var classes = cx('header', className);\r\n  var rest = getUnhandledProps(DropdownHeader, props);\r\n  var ElementType = getElementType(DropdownHeader, props);\r\n\r\n  if (!childrenUtils.isNil(children)) return React.createElement(\r\n    ElementType,\r\n    _extends({}, rest, { className: classes }),\r\n    children\r\n  );\r\n\r\n  return React.createElement(\r\n    ElementType,\r\n    _extends({}, rest, { className: classes }),\r\n    Icon.create(icon),\r\n    content\r\n  );\r\n}\r\n\r\nDropdownHeader.handledProps = ['as', 'children', 'className', 'content', 'icon'];\r\nDropdownHeader._meta = {\r\n  name: 'DropdownHeader',\r\n  parent: 'Dropdown',\r\n  type: META.TYPES.MODULE\r\n};\r\n\r\nDropdownHeader.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function) */\r\n  as: customPropTypes.as,\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** Shorthand for primary content. */\r\n  content: customPropTypes.contentShorthand,\r\n\r\n  /** Shorthand for Icon. */\r\n  icon: customPropTypes.itemShorthand\r\n} : {};\r\n\r\nDropdownHeader.create = createShorthandFactory(DropdownHeader, function (content) {\r\n  return { content: content };\r\n});\r\n\r\nexport default DropdownHeader;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,+BAA+B;AACpD,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,aAAa,EAAEC,sBAAsB,EAAEC,eAAe,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,IAAI,QAAQ,WAAW;AAC3H,OAAOC,IAAI,MAAM,qBAAqB;;AAEtC;AACA;AACA;AACA,SAASC,cAAcA,CAACC,KAAK,EAAE;EAC7B,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;IACzBC,SAAS,GAAGF,KAAK,CAACE,SAAS;IAC3BC,OAAO,GAAGH,KAAK,CAACG,OAAO;IACvBC,IAAI,GAAGJ,KAAK,CAACI,IAAI;EAGrB,IAAIC,OAAO,GAAGhB,EAAE,CAAC,QAAQ,EAAEa,SAAS,CAAC;EACrC,IAAII,IAAI,GAAGV,iBAAiB,CAACG,cAAc,EAAEC,KAAK,CAAC;EACnD,IAAIO,WAAW,GAAGZ,cAAc,CAACI,cAAc,EAAEC,KAAK,CAAC;EAEvD,IAAI,CAACR,aAAa,CAACgB,KAAK,CAACP,QAAQ,CAAC,EAAE,OAAOV,KAAK,CAACkB,aAAa,CAC5DF,WAAW,EACXnB,QAAQ,CAAC,CAAC,CAAC,EAAEkB,IAAI,EAAE;IAAEJ,SAAS,EAAEG;EAAQ,CAAC,CAAC,EAC1CJ,QAAQ,CACT;EAED,OAAOV,KAAK,CAACkB,aAAa,CACxBF,WAAW,EACXnB,QAAQ,CAAC,CAAC,CAAC,EAAEkB,IAAI,EAAE;IAAEJ,SAAS,EAAEG;EAAQ,CAAC,CAAC,EAC1CP,IAAI,CAACY,MAAM,CAACN,IAAI,CAAC,EACjBD,OAAO,CACR;AACH;AAEAJ,cAAc,CAACY,YAAY,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,CAAC;AAChFZ,cAAc,CAACa,KAAK,GAAG;EACrBC,IAAI,EAAE,gBAAgB;EACtBC,MAAM,EAAE,UAAU;EAClBC,IAAI,EAAElB,IAAI,CAACmB,KAAK,CAACC;AACnB,CAAC;AAEDlB,cAAc,CAACmB,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EACjE;EACAC,EAAE,EAAE5B,eAAe,CAAC4B,EAAE;EAEtB;EACArB,QAAQ,EAAEX,SAAS,CAACiC,IAAI;EAExB;EACArB,SAAS,EAAEZ,SAAS,CAACkC,MAAM;EAE3B;EACArB,OAAO,EAAET,eAAe,CAAC+B,gBAAgB;EAEzC;EACArB,IAAI,EAAEV,eAAe,CAACgC;AACxB,CAAC,GAAG,CAAC,CAAC;AAEN3B,cAAc,CAACW,MAAM,GAAGjB,sBAAsB,CAACM,cAAc,EAAE,UAAUI,OAAO,EAAE;EAChF,OAAO;IAAEA,OAAO,EAAEA;EAAQ,CAAC;AAC7B,CAAC,CAAC;AAEF,eAAeJ,cAAc"},"metadata":{},"sourceType":"module"}