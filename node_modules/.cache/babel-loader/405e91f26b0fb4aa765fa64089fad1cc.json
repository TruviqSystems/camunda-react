{"ast":null,"code":"import inherits from 'inherits';\nimport { isObject, assign, forEach } from 'min-dash';\nimport BaseRenderer from 'diagram-js/lib/draw/BaseRenderer';\nimport { isExpanded, isEventSubProcess } from '../util/DiUtil';\nimport { getLabel } from '../features/label-editing/LabelUtil';\nimport { is } from '../util/ModelUtil';\nimport { createLine } from 'diagram-js/lib/util/RenderUtil';\nimport { isTypedEvent, isThrowEvent, isCollection, getDi, getSemantic, getCirclePath, getRoundRectPath, getDiamondPath, getRectPath, getFillColor, getStrokeColor } from './BpmnRenderUtil';\nimport { query as domQuery } from 'min-dom';\nimport { append as svgAppend, attr as svgAttr, create as svgCreate, classes as svgClasses } from 'tiny-svg';\nimport { rotate, transform, translate } from 'diagram-js/lib/util/SvgTransformUtil';\nimport Ids from 'ids';\nvar RENDERER_IDS = new Ids();\nvar TASK_BORDER_RADIUS = 10;\nvar INNER_OUTER_DIST = 3;\nvar DEFAULT_FILL_OPACITY = .95,\n  HIGH_FILL_OPACITY = .35;\nexport default function BpmnRenderer(config, eventBus, styles, pathMap, canvas, textRenderer, priority) {\n  BaseRenderer.call(this, eventBus, priority);\n  var defaultFillColor = config && config.defaultFillColor,\n    defaultStrokeColor = config && config.defaultStrokeColor;\n  var rendererId = RENDERER_IDS.next();\n  var markers = {};\n  var computeStyle = styles.computeStyle;\n  function addMarker(id, options) {\n    var attrs = assign({\n      fill: 'black',\n      strokeWidth: 1,\n      strokeLinecap: 'round',\n      strokeDasharray: 'none'\n    }, options.attrs);\n    var ref = options.ref || {\n      x: 0,\n      y: 0\n    };\n    var scale = options.scale || 1;\n\n    // fix for safari / chrome / firefox bug not correctly\n    // resetting stroke dash array\n    if (attrs.strokeDasharray === 'none') {\n      attrs.strokeDasharray = [10000, 1];\n    }\n    var marker = svgCreate('marker');\n    svgAttr(options.element, attrs);\n    svgAppend(marker, options.element);\n    svgAttr(marker, {\n      id: id,\n      viewBox: '0 0 20 20',\n      refX: ref.x,\n      refY: ref.y,\n      markerWidth: 20 * scale,\n      markerHeight: 20 * scale,\n      orient: 'auto'\n    });\n    var defs = domQuery('defs', canvas._svg);\n    if (!defs) {\n      defs = svgCreate('defs');\n      svgAppend(canvas._svg, defs);\n    }\n    svgAppend(defs, marker);\n    markers[id] = marker;\n  }\n  function colorEscape(str) {\n    // only allow characters and numbers\n    return str.replace(/[^0-9a-zA-z]+/g, '_');\n  }\n  function marker(type, fill, stroke) {\n    var id = type + '-' + colorEscape(fill) + '-' + colorEscape(stroke) + '-' + rendererId;\n    if (!markers[id]) {\n      createMarker(id, type, fill, stroke);\n    }\n    return 'url(#' + id + ')';\n  }\n  function createMarker(id, type, fill, stroke) {\n    if (type === 'sequenceflow-end') {\n      var sequenceflowEnd = svgCreate('path');\n      svgAttr(sequenceflowEnd, {\n        d: 'M 1 5 L 11 10 L 1 15 Z'\n      });\n      addMarker(id, {\n        element: sequenceflowEnd,\n        ref: {\n          x: 11,\n          y: 10\n        },\n        scale: 0.5,\n        attrs: {\n          fill: stroke,\n          stroke: stroke\n        }\n      });\n    }\n    if (type === 'messageflow-start') {\n      var messageflowStart = svgCreate('circle');\n      svgAttr(messageflowStart, {\n        cx: 6,\n        cy: 6,\n        r: 3.5\n      });\n      addMarker(id, {\n        element: messageflowStart,\n        attrs: {\n          fill: fill,\n          stroke: stroke\n        },\n        ref: {\n          x: 6,\n          y: 6\n        }\n      });\n    }\n    if (type === 'messageflow-end') {\n      var messageflowEnd = svgCreate('path');\n      svgAttr(messageflowEnd, {\n        d: 'm 1 5 l 0 -3 l 7 3 l -7 3 z'\n      });\n      addMarker(id, {\n        element: messageflowEnd,\n        attrs: {\n          fill: fill,\n          stroke: stroke,\n          strokeLinecap: 'butt'\n        },\n        ref: {\n          x: 8.5,\n          y: 5\n        }\n      });\n    }\n    if (type === 'association-start') {\n      var associationStart = svgCreate('path');\n      svgAttr(associationStart, {\n        d: 'M 11 5 L 1 10 L 11 15'\n      });\n      addMarker(id, {\n        element: associationStart,\n        attrs: {\n          fill: 'none',\n          stroke: stroke,\n          strokeWidth: 1.5\n        },\n        ref: {\n          x: 1,\n          y: 10\n        },\n        scale: 0.5\n      });\n    }\n    if (type === 'association-end') {\n      var associationEnd = svgCreate('path');\n      svgAttr(associationEnd, {\n        d: 'M 1 5 L 11 10 L 1 15'\n      });\n      addMarker(id, {\n        element: associationEnd,\n        attrs: {\n          fill: 'none',\n          stroke: stroke,\n          strokeWidth: 1.5\n        },\n        ref: {\n          x: 12,\n          y: 10\n        },\n        scale: 0.5\n      });\n    }\n    if (type === 'conditional-flow-marker') {\n      var conditionalflowMarker = svgCreate('path');\n      svgAttr(conditionalflowMarker, {\n        d: 'M 0 10 L 8 6 L 16 10 L 8 14 Z'\n      });\n      addMarker(id, {\n        element: conditionalflowMarker,\n        attrs: {\n          fill: fill,\n          stroke: stroke\n        },\n        ref: {\n          x: -1,\n          y: 10\n        },\n        scale: 0.5\n      });\n    }\n    if (type === 'conditional-default-flow-marker') {\n      var conditionaldefaultflowMarker = svgCreate('path');\n      svgAttr(conditionaldefaultflowMarker, {\n        d: 'M 6 4 L 10 16'\n      });\n      addMarker(id, {\n        element: conditionaldefaultflowMarker,\n        attrs: {\n          stroke: stroke\n        },\n        ref: {\n          x: 0,\n          y: 10\n        },\n        scale: 0.5\n      });\n    }\n  }\n  function drawCircle(parentGfx, width, height, offset, attrs) {\n    if (isObject(offset)) {\n      attrs = offset;\n      offset = 0;\n    }\n    offset = offset || 0;\n    attrs = computeStyle(attrs, {\n      stroke: 'black',\n      strokeWidth: 2,\n      fill: 'white'\n    });\n    if (attrs.fill === 'none') {\n      delete attrs.fillOpacity;\n    }\n    var cx = width / 2,\n      cy = height / 2;\n    var circle = svgCreate('circle');\n    svgAttr(circle, {\n      cx: cx,\n      cy: cy,\n      r: Math.round((width + height) / 4 - offset)\n    });\n    svgAttr(circle, attrs);\n    svgAppend(parentGfx, circle);\n    return circle;\n  }\n  function drawRect(parentGfx, width, height, r, offset, attrs) {\n    if (isObject(offset)) {\n      attrs = offset;\n      offset = 0;\n    }\n    offset = offset || 0;\n    attrs = computeStyle(attrs, {\n      stroke: 'black',\n      strokeWidth: 2,\n      fill: 'white'\n    });\n    var rect = svgCreate('rect');\n    svgAttr(rect, {\n      x: offset,\n      y: offset,\n      width: width - offset * 2,\n      height: height - offset * 2,\n      rx: r,\n      ry: r\n    });\n    svgAttr(rect, attrs);\n    svgAppend(parentGfx, rect);\n    return rect;\n  }\n  function drawDiamond(parentGfx, width, height, attrs) {\n    var x_2 = width / 2;\n    var y_2 = height / 2;\n    var points = [{\n      x: x_2,\n      y: 0\n    }, {\n      x: width,\n      y: y_2\n    }, {\n      x: x_2,\n      y: height\n    }, {\n      x: 0,\n      y: y_2\n    }];\n    var pointsString = points.map(function (point) {\n      return point.x + ',' + point.y;\n    }).join(' ');\n    attrs = computeStyle(attrs, {\n      stroke: 'black',\n      strokeWidth: 2,\n      fill: 'white'\n    });\n    var polygon = svgCreate('polygon');\n    svgAttr(polygon, {\n      points: pointsString\n    });\n    svgAttr(polygon, attrs);\n    svgAppend(parentGfx, polygon);\n    return polygon;\n  }\n  function drawLine(parentGfx, waypoints, attrs) {\n    attrs = computeStyle(attrs, ['no-fill'], {\n      stroke: 'black',\n      strokeWidth: 2,\n      fill: 'none'\n    });\n    var line = createLine(waypoints, attrs);\n    svgAppend(parentGfx, line);\n    return line;\n  }\n  function drawPath(parentGfx, d, attrs) {\n    attrs = computeStyle(attrs, ['no-fill'], {\n      strokeWidth: 2,\n      stroke: 'black'\n    });\n    var path = svgCreate('path');\n    svgAttr(path, {\n      d: d\n    });\n    svgAttr(path, attrs);\n    svgAppend(parentGfx, path);\n    return path;\n  }\n  function drawMarker(type, parentGfx, path, attrs) {\n    return drawPath(parentGfx, path, assign({\n      'data-marker': type\n    }, attrs));\n  }\n  function as(type) {\n    return function (parentGfx, element) {\n      return handlers[type](parentGfx, element);\n    };\n  }\n  function renderer(type) {\n    return handlers[type];\n  }\n  function renderEventContent(element, parentGfx) {\n    var event = getSemantic(element);\n    var isThrowing = isThrowEvent(event);\n    if (event.eventDefinitions && event.eventDefinitions.length > 1) {\n      if (event.parallelMultiple) {\n        return renderer('bpmn:ParallelMultipleEventDefinition')(parentGfx, element, isThrowing);\n      } else {\n        return renderer('bpmn:MultipleEventDefinition')(parentGfx, element, isThrowing);\n      }\n    }\n    if (isTypedEvent(event, 'bpmn:MessageEventDefinition')) {\n      return renderer('bpmn:MessageEventDefinition')(parentGfx, element, isThrowing);\n    }\n    if (isTypedEvent(event, 'bpmn:TimerEventDefinition')) {\n      return renderer('bpmn:TimerEventDefinition')(parentGfx, element, isThrowing);\n    }\n    if (isTypedEvent(event, 'bpmn:ConditionalEventDefinition')) {\n      return renderer('bpmn:ConditionalEventDefinition')(parentGfx, element);\n    }\n    if (isTypedEvent(event, 'bpmn:SignalEventDefinition')) {\n      return renderer('bpmn:SignalEventDefinition')(parentGfx, element, isThrowing);\n    }\n    if (isTypedEvent(event, 'bpmn:EscalationEventDefinition')) {\n      return renderer('bpmn:EscalationEventDefinition')(parentGfx, element, isThrowing);\n    }\n    if (isTypedEvent(event, 'bpmn:LinkEventDefinition')) {\n      return renderer('bpmn:LinkEventDefinition')(parentGfx, element, isThrowing);\n    }\n    if (isTypedEvent(event, 'bpmn:ErrorEventDefinition')) {\n      return renderer('bpmn:ErrorEventDefinition')(parentGfx, element, isThrowing);\n    }\n    if (isTypedEvent(event, 'bpmn:CancelEventDefinition')) {\n      return renderer('bpmn:CancelEventDefinition')(parentGfx, element, isThrowing);\n    }\n    if (isTypedEvent(event, 'bpmn:CompensateEventDefinition')) {\n      return renderer('bpmn:CompensateEventDefinition')(parentGfx, element, isThrowing);\n    }\n    if (isTypedEvent(event, 'bpmn:TerminateEventDefinition')) {\n      return renderer('bpmn:TerminateEventDefinition')(parentGfx, element, isThrowing);\n    }\n    return null;\n  }\n  function renderLabel(parentGfx, label, options) {\n    options = assign({\n      size: {\n        width: 100\n      }\n    }, options);\n    var text = textRenderer.createText(label || '', options);\n    svgClasses(text).add('djs-label');\n    svgAppend(parentGfx, text);\n    return text;\n  }\n  function renderEmbeddedLabel(parentGfx, element, align) {\n    var semantic = getSemantic(element);\n    return renderLabel(parentGfx, semantic.name, {\n      box: element,\n      align: align,\n      padding: 5,\n      style: {\n        fill: getStrokeColor(element, defaultStrokeColor)\n      }\n    });\n  }\n  function renderExternalLabel(parentGfx, element) {\n    var box = {\n      width: 90,\n      height: 30,\n      x: element.width / 2 + element.x,\n      y: element.height / 2 + element.y\n    };\n    return renderLabel(parentGfx, getLabel(element), {\n      box: box,\n      fitBox: true,\n      style: assign({}, textRenderer.getExternalStyle(), {\n        fill: getStrokeColor(element, defaultStrokeColor)\n      })\n    });\n  }\n  function renderLaneLabel(parentGfx, text, element) {\n    var textBox = renderLabel(parentGfx, text, {\n      box: {\n        height: 30,\n        width: element.height\n      },\n      align: 'center-middle',\n      style: {\n        fill: getStrokeColor(element, defaultStrokeColor)\n      }\n    });\n    var top = -1 * element.height;\n    transform(textBox, 0, -top, 270);\n  }\n  function createPathFromConnection(connection) {\n    var waypoints = connection.waypoints;\n    var pathData = 'm  ' + waypoints[0].x + ',' + waypoints[0].y;\n    for (var i = 1; i < waypoints.length; i++) {\n      pathData += 'L' + waypoints[i].x + ',' + waypoints[i].y + ' ';\n    }\n    return pathData;\n  }\n  var handlers = this.handlers = {\n    'bpmn:Event': function (parentGfx, element, attrs) {\n      if (!('fillOpacity' in attrs)) {\n        attrs.fillOpacity = DEFAULT_FILL_OPACITY;\n      }\n      return drawCircle(parentGfx, element.width, element.height, attrs);\n    },\n    'bpmn:StartEvent': function (parentGfx, element) {\n      var attrs = {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n      var semantic = getSemantic(element);\n      if (!semantic.isInterrupting) {\n        attrs = {\n          strokeDasharray: '6',\n          strokeLinecap: 'round',\n          fill: getFillColor(element, defaultFillColor),\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        };\n      }\n      var circle = renderer('bpmn:Event')(parentGfx, element, attrs);\n      renderEventContent(element, parentGfx);\n      return circle;\n    },\n    'bpmn:MessageEventDefinition': function (parentGfx, element, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_MESSAGE', {\n        xScaleFactor: 0.9,\n        yScaleFactor: 0.9,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.235,\n          my: 0.315\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(element, defaultStrokeColor) : getFillColor(element, defaultFillColor);\n      var stroke = isThrowing ? getFillColor(element, defaultFillColor) : getStrokeColor(element, defaultStrokeColor);\n      var messagePath = drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: stroke\n      });\n      return messagePath;\n    },\n    'bpmn:TimerEventDefinition': function (parentGfx, element) {\n      var circle = drawCircle(parentGfx, element.width, element.height, 0.2 * element.height, {\n        strokeWidth: 2,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      var pathData = pathMap.getScaledPath('EVENT_TIMER_WH', {\n        xScaleFactor: 0.75,\n        yScaleFactor: 0.75,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.5,\n          my: 0.5\n        }\n      });\n      drawPath(parentGfx, pathData, {\n        strokeWidth: 2,\n        strokeLinecap: 'square',\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      for (var i = 0; i < 12; i++) {\n        var linePathData = pathMap.getScaledPath('EVENT_TIMER_LINE', {\n          xScaleFactor: 0.75,\n          yScaleFactor: 0.75,\n          containerWidth: element.width,\n          containerHeight: element.height,\n          position: {\n            mx: 0.5,\n            my: 0.5\n          }\n        });\n        var width = element.width / 2;\n        var height = element.height / 2;\n        drawPath(parentGfx, linePathData, {\n          strokeWidth: 1,\n          strokeLinecap: 'square',\n          transform: 'rotate(' + i * 30 + ',' + height + ',' + width + ')',\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        });\n      }\n      return circle;\n    },\n    'bpmn:EscalationEventDefinition': function (parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_ESCALATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.5,\n          my: 0.2\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:ConditionalEventDefinition': function (parentGfx, event) {\n      var pathData = pathMap.getScaledPath('EVENT_CONDITIONAL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.5,\n          my: 0.222\n        }\n      });\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:LinkEventDefinition': function (parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_LINK', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.57,\n          my: 0.263\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:ErrorEventDefinition': function (parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_ERROR', {\n        xScaleFactor: 1.1,\n        yScaleFactor: 1.1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.2,\n          my: 0.722\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:CancelEventDefinition': function (parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_CANCEL_45', {\n        xScaleFactor: 1.0,\n        yScaleFactor: 1.0,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.638,\n          my: -0.055\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n      var path = drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n      rotate(path, 45);\n      return path;\n    },\n    'bpmn:CompensateEventDefinition': function (parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_COMPENSATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.22,\n          my: 0.5\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:SignalEventDefinition': function (parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_SIGNAL', {\n        xScaleFactor: 0.9,\n        yScaleFactor: 0.9,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.5,\n          my: 0.2\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:MultipleEventDefinition': function (parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_MULTIPLE', {\n        xScaleFactor: 1.1,\n        yScaleFactor: 1.1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.222,\n          my: 0.36\n        }\n      });\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill\n      });\n    },\n    'bpmn:ParallelMultipleEventDefinition': function (parentGfx, event) {\n      var pathData = pathMap.getScaledPath('EVENT_PARALLEL_MULTIPLE', {\n        xScaleFactor: 1.2,\n        yScaleFactor: 1.2,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.458,\n          my: 0.194\n        }\n      });\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getStrokeColor(event, defaultStrokeColor),\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:EndEvent': function (parentGfx, element) {\n      var circle = renderer('bpmn:Event')(parentGfx, element, {\n        strokeWidth: 4,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      renderEventContent(element, parentGfx, true);\n      return circle;\n    },\n    'bpmn:TerminateEventDefinition': function (parentGfx, element) {\n      var circle = drawCircle(parentGfx, element.width, element.height, 8, {\n        strokeWidth: 4,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      return circle;\n    },\n    'bpmn:IntermediateEvent': function (parentGfx, element) {\n      var outer = renderer('bpmn:Event')(parentGfx, element, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      /* inner */\n      drawCircle(parentGfx, element.width, element.height, INNER_OUTER_DIST, {\n        strokeWidth: 1,\n        fill: getFillColor(element, 'none'),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      renderEventContent(element, parentGfx);\n      return outer;\n    },\n    'bpmn:IntermediateCatchEvent': as('bpmn:IntermediateEvent'),\n    'bpmn:IntermediateThrowEvent': as('bpmn:IntermediateEvent'),\n    'bpmn:Activity': function (parentGfx, element, attrs) {\n      attrs = attrs || {};\n      if (!('fillOpacity' in attrs)) {\n        attrs.fillOpacity = DEFAULT_FILL_OPACITY;\n      }\n      return drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS, attrs);\n    },\n    'bpmn:Task': function (parentGfx, element) {\n      var attrs = {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n      var rect = renderer('bpmn:Activity')(parentGfx, element, attrs);\n      renderEmbeddedLabel(parentGfx, element, 'center-middle');\n      attachTaskMarkers(parentGfx, element);\n      return rect;\n    },\n    'bpmn:ServiceTask': function (parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n      var pathDataBG = pathMap.getScaledPath('TASK_TYPE_SERVICE', {\n        abspos: {\n          x: 12,\n          y: 18\n        }\n      });\n\n      /* service bg */\n      drawPath(parentGfx, pathDataBG, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      var fillPathData = pathMap.getScaledPath('TASK_TYPE_SERVICE_FILL', {\n        abspos: {\n          x: 17.2,\n          y: 18\n        }\n      });\n\n      /* service fill */\n      drawPath(parentGfx, fillPathData, {\n        strokeWidth: 0,\n        fill: getFillColor(element, defaultFillColor)\n      });\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SERVICE', {\n        abspos: {\n          x: 17,\n          y: 22\n        }\n      });\n\n      /* service */\n      drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      return task;\n    },\n    'bpmn:UserTask': function (parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n      var x = 15;\n      var y = 12;\n      var pathData = pathMap.getScaledPath('TASK_TYPE_USER_1', {\n        abspos: {\n          x: x,\n          y: y\n        }\n      });\n\n      /* user path */\n      drawPath(parentGfx, pathData, {\n        strokeWidth: 0.5,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      var pathData2 = pathMap.getScaledPath('TASK_TYPE_USER_2', {\n        abspos: {\n          x: x,\n          y: y\n        }\n      });\n\n      /* user2 path */\n      drawPath(parentGfx, pathData2, {\n        strokeWidth: 0.5,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      var pathData3 = pathMap.getScaledPath('TASK_TYPE_USER_3', {\n        abspos: {\n          x: x,\n          y: y\n        }\n      });\n\n      /* user3 path */\n      drawPath(parentGfx, pathData3, {\n        strokeWidth: 0.5,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      return task;\n    },\n    'bpmn:ManualTask': function (parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n      var pathData = pathMap.getScaledPath('TASK_TYPE_MANUAL', {\n        abspos: {\n          x: 17,\n          y: 15\n        }\n      });\n\n      /* manual path */\n      drawPath(parentGfx, pathData, {\n        strokeWidth: 0.5,\n        // 0.25,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      return task;\n    },\n    'bpmn:SendTask': function (parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SEND', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: 21,\n        containerHeight: 14,\n        position: {\n          mx: 0.285,\n          my: 0.357\n        }\n      });\n\n      /* send path */\n      drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getFillColor(element, defaultFillColor)\n      });\n      return task;\n    },\n    'bpmn:ReceiveTask': function (parentGfx, element) {\n      var semantic = getSemantic(element);\n      var task = renderer('bpmn:Task')(parentGfx, element);\n      var pathData;\n      if (semantic.instantiate) {\n        drawCircle(parentGfx, 28, 28, 20 * 0.22, {\n          strokeWidth: 1\n        });\n        pathData = pathMap.getScaledPath('TASK_TYPE_INSTANTIATING_SEND', {\n          abspos: {\n            x: 7.77,\n            y: 9.52\n          }\n        });\n      } else {\n        pathData = pathMap.getScaledPath('TASK_TYPE_SEND', {\n          xScaleFactor: 0.9,\n          yScaleFactor: 0.9,\n          containerWidth: 21,\n          containerHeight: 14,\n          position: {\n            mx: 0.3,\n            my: 0.4\n          }\n        });\n      }\n\n      /* receive path */\n      drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      return task;\n    },\n    'bpmn:ScriptTask': function (parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SCRIPT', {\n        abspos: {\n          x: 15,\n          y: 20\n        }\n      });\n\n      /* script path */\n      drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      return task;\n    },\n    'bpmn:BusinessRuleTask': function (parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n      var headerPathData = pathMap.getScaledPath('TASK_TYPE_BUSINESS_RULE_HEADER', {\n        abspos: {\n          x: 8,\n          y: 8\n        }\n      });\n      var businessHeaderPath = drawPath(parentGfx, headerPathData);\n      svgAttr(businessHeaderPath, {\n        strokeWidth: 1,\n        fill: getFillColor(element, '#aaaaaa'),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      var headerData = pathMap.getScaledPath('TASK_TYPE_BUSINESS_RULE_MAIN', {\n        abspos: {\n          x: 8,\n          y: 8\n        }\n      });\n      var businessPath = drawPath(parentGfx, headerData);\n      svgAttr(businessPath, {\n        strokeWidth: 1,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      return task;\n    },\n    'bpmn:SubProcess': function (parentGfx, element, attrs) {\n      attrs = assign({\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      }, attrs);\n      var rect = renderer('bpmn:Activity')(parentGfx, element, attrs);\n      var expanded = isExpanded(element);\n      if (isEventSubProcess(element)) {\n        svgAttr(rect, {\n          strokeDasharray: '1,2'\n        });\n      }\n      renderEmbeddedLabel(parentGfx, element, expanded ? 'center-top' : 'center-middle');\n      if (expanded) {\n        attachTaskMarkers(parentGfx, element);\n      } else {\n        attachTaskMarkers(parentGfx, element, ['SubProcessMarker']);\n      }\n      return rect;\n    },\n    'bpmn:AdHocSubProcess': function (parentGfx, element) {\n      return renderer('bpmn:SubProcess')(parentGfx, element);\n    },\n    'bpmn:Transaction': function (parentGfx, element) {\n      var outer = renderer('bpmn:SubProcess')(parentGfx, element);\n      var innerAttrs = styles.style(['no-fill', 'no-events'], {\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      /* inner path */\n      drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS - 2, INNER_OUTER_DIST, innerAttrs);\n      return outer;\n    },\n    'bpmn:CallActivity': function (parentGfx, element) {\n      return renderer('bpmn:SubProcess')(parentGfx, element, {\n        strokeWidth: 5\n      });\n    },\n    'bpmn:Participant': function (parentGfx, element) {\n      var attrs = {\n        fillOpacity: DEFAULT_FILL_OPACITY,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n      var lane = renderer('bpmn:Lane')(parentGfx, element, attrs);\n      var expandedPool = isExpanded(element);\n      if (expandedPool) {\n        drawLine(parentGfx, [{\n          x: 30,\n          y: 0\n        }, {\n          x: 30,\n          y: element.height\n        }], {\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        });\n        var text = getSemantic(element).name;\n        renderLaneLabel(parentGfx, text, element);\n      } else {\n        // Collapsed pool draw text inline\n        var text2 = getSemantic(element).name;\n        renderLabel(parentGfx, text2, {\n          box: element,\n          align: 'center-middle',\n          style: {\n            fill: getStrokeColor(element, defaultStrokeColor)\n          }\n        });\n      }\n      var participantMultiplicity = !!getSemantic(element).participantMultiplicity;\n      if (participantMultiplicity) {\n        renderer('ParticipantMultiplicityMarker')(parentGfx, element);\n      }\n      return lane;\n    },\n    'bpmn:Lane': function (parentGfx, element, attrs) {\n      var rect = drawRect(parentGfx, element.width, element.height, 0, assign({\n        fill: getFillColor(element, defaultFillColor),\n        fillOpacity: HIGH_FILL_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      }, attrs));\n      var semantic = getSemantic(element);\n      if (semantic.$type === 'bpmn:Lane') {\n        var text = semantic.name;\n        renderLaneLabel(parentGfx, text, element);\n      }\n      return rect;\n    },\n    'bpmn:InclusiveGateway': function (parentGfx, element) {\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n\n      /* circle path */\n      drawCircle(parentGfx, element.width, element.height, element.height * 0.24, {\n        strokeWidth: 2.5,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      return diamond;\n    },\n    'bpmn:ExclusiveGateway': function (parentGfx, element) {\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n      var pathData = pathMap.getScaledPath('GATEWAY_EXCLUSIVE', {\n        xScaleFactor: 0.4,\n        yScaleFactor: 0.4,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.32,\n          my: 0.3\n        }\n      });\n      if (getDi(element).isMarkerVisible) {\n        drawPath(parentGfx, pathData, {\n          strokeWidth: 1,\n          fill: getStrokeColor(element, defaultStrokeColor),\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        });\n      }\n      return diamond;\n    },\n    'bpmn:ComplexGateway': function (parentGfx, element) {\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n      var pathData = pathMap.getScaledPath('GATEWAY_COMPLEX', {\n        xScaleFactor: 0.5,\n        yScaleFactor: 0.5,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.46,\n          my: 0.26\n        }\n      });\n\n      /* complex path */\n      drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      return diamond;\n    },\n    'bpmn:ParallelGateway': function (parentGfx, element) {\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n      var pathData = pathMap.getScaledPath('GATEWAY_PARALLEL', {\n        xScaleFactor: 0.6,\n        yScaleFactor: 0.6,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.46,\n          my: 0.2\n        }\n      });\n\n      /* parallel path */\n      drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      return diamond;\n    },\n    'bpmn:EventBasedGateway': function (parentGfx, element) {\n      var semantic = getSemantic(element);\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n\n      /* outer circle path */\n      drawCircle(parentGfx, element.width, element.height, element.height * 0.20, {\n        strokeWidth: 1,\n        fill: 'none',\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      var type = semantic.eventGatewayType;\n      var instantiate = !!semantic.instantiate;\n      function drawEvent() {\n        var pathData = pathMap.getScaledPath('GATEWAY_EVENT_BASED', {\n          xScaleFactor: 0.18,\n          yScaleFactor: 0.18,\n          containerWidth: element.width,\n          containerHeight: element.height,\n          position: {\n            mx: 0.36,\n            my: 0.44\n          }\n        });\n        var attrs = {\n          strokeWidth: 2,\n          fill: getFillColor(element, 'none'),\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        };\n\n        /* event path */\n        drawPath(parentGfx, pathData, attrs);\n      }\n      if (type === 'Parallel') {\n        var pathData = pathMap.getScaledPath('GATEWAY_PARALLEL', {\n          xScaleFactor: 0.4,\n          yScaleFactor: 0.4,\n          containerWidth: element.width,\n          containerHeight: element.height,\n          position: {\n            mx: 0.474,\n            my: 0.296\n          }\n        });\n        var parallelPath = drawPath(parentGfx, pathData);\n        svgAttr(parallelPath, {\n          strokeWidth: 1,\n          fill: 'none'\n        });\n      } else if (type === 'Exclusive') {\n        if (!instantiate) {\n          var innerCircle = drawCircle(parentGfx, element.width, element.height, element.height * 0.26);\n          svgAttr(innerCircle, {\n            strokeWidth: 1,\n            fill: 'none',\n            stroke: getStrokeColor(element, defaultStrokeColor)\n          });\n        }\n        drawEvent();\n      }\n      return diamond;\n    },\n    'bpmn:Gateway': function (parentGfx, element) {\n      var attrs = {\n        fill: getFillColor(element, defaultFillColor),\n        fillOpacity: DEFAULT_FILL_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n      return drawDiamond(parentGfx, element.width, element.height, attrs);\n    },\n    'bpmn:SequenceFlow': function (parentGfx, element) {\n      var pathData = createPathFromConnection(element);\n      var fill = getFillColor(element, defaultFillColor),\n        stroke = getStrokeColor(element, defaultStrokeColor);\n      var attrs = {\n        strokeLinejoin: 'round',\n        markerEnd: marker('sequenceflow-end', fill, stroke),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n      var path = drawPath(parentGfx, pathData, attrs);\n      var sequenceFlow = getSemantic(element);\n      var source;\n      if (element.source) {\n        source = element.source.businessObject;\n\n        // conditional flow marker\n        if (sequenceFlow.conditionExpression && source.$instanceOf('bpmn:Activity')) {\n          svgAttr(path, {\n            markerStart: marker('conditional-flow-marker', fill, stroke)\n          });\n        }\n\n        // default marker\n        if (source.default && (source.$instanceOf('bpmn:Gateway') || source.$instanceOf('bpmn:Activity')) && source.default === sequenceFlow) {\n          svgAttr(path, {\n            markerStart: marker('conditional-default-flow-marker', fill, stroke)\n          });\n        }\n      }\n      return path;\n    },\n    'bpmn:Association': function (parentGfx, element, attrs) {\n      var semantic = getSemantic(element);\n      var fill = getFillColor(element, defaultFillColor),\n        stroke = getStrokeColor(element, defaultStrokeColor);\n      attrs = assign({\n        strokeDasharray: '0.5, 5',\n        strokeLinecap: 'round',\n        strokeLinejoin: 'round',\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      }, attrs || {});\n      if (semantic.associationDirection === 'One' || semantic.associationDirection === 'Both') {\n        attrs.markerEnd = marker('association-end', fill, stroke);\n      }\n      if (semantic.associationDirection === 'Both') {\n        attrs.markerStart = marker('association-start', fill, stroke);\n      }\n      return drawLine(parentGfx, element.waypoints, attrs);\n    },\n    'bpmn:DataInputAssociation': function (parentGfx, element) {\n      var fill = getFillColor(element, defaultFillColor),\n        stroke = getStrokeColor(element, defaultStrokeColor);\n      return renderer('bpmn:Association')(parentGfx, element, {\n        markerEnd: marker('association-end', fill, stroke)\n      });\n    },\n    'bpmn:DataOutputAssociation': function (parentGfx, element) {\n      var fill = getFillColor(element, defaultFillColor),\n        stroke = getStrokeColor(element, defaultStrokeColor);\n      return renderer('bpmn:Association')(parentGfx, element, {\n        markerEnd: marker('association-end', fill, stroke)\n      });\n    },\n    'bpmn:MessageFlow': function (parentGfx, element) {\n      var semantic = getSemantic(element),\n        di = getDi(element);\n      var fill = getFillColor(element, defaultFillColor),\n        stroke = getStrokeColor(element, defaultStrokeColor);\n      var pathData = createPathFromConnection(element);\n      var attrs = {\n        markerEnd: marker('messageflow-end', fill, stroke),\n        markerStart: marker('messageflow-start', fill, stroke),\n        strokeDasharray: '10, 12',\n        strokeLinecap: 'round',\n        strokeLinejoin: 'round',\n        strokeWidth: '1.5px',\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n      var path = drawPath(parentGfx, pathData, attrs);\n      if (semantic.messageRef) {\n        var midPoint = path.getPointAtLength(path.getTotalLength() / 2);\n        var markerPathData = pathMap.getScaledPath('MESSAGE_FLOW_MARKER', {\n          abspos: {\n            x: midPoint.x,\n            y: midPoint.y\n          }\n        });\n        var messageAttrs = {\n          strokeWidth: 1\n        };\n        if (di.messageVisibleKind === 'initiating') {\n          messageAttrs.fill = 'white';\n          messageAttrs.stroke = 'black';\n        } else {\n          messageAttrs.fill = '#888';\n          messageAttrs.stroke = 'white';\n        }\n        drawPath(parentGfx, markerPathData, messageAttrs);\n      }\n      return path;\n    },\n    'bpmn:DataObject': function (parentGfx, element) {\n      var pathData = pathMap.getScaledPath('DATA_OBJECT_PATH', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.474,\n          my: 0.296\n        }\n      });\n      var elementObject = drawPath(parentGfx, pathData, {\n        fill: getFillColor(element, defaultFillColor),\n        fillOpacity: DEFAULT_FILL_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      var semantic = getSemantic(element);\n      if (isCollection(semantic)) {\n        renderDataItemCollection(parentGfx, element);\n      }\n      return elementObject;\n    },\n    'bpmn:DataObjectReference': as('bpmn:DataObject'),\n    'bpmn:DataInput': function (parentGfx, element) {\n      var arrowPathData = pathMap.getRawPath('DATA_ARROW');\n\n      // page\n      var elementObject = renderer('bpmn:DataObject')(parentGfx, element);\n\n      /* input arrow path */\n      drawPath(parentGfx, arrowPathData, {\n        strokeWidth: 1\n      });\n      return elementObject;\n    },\n    'bpmn:DataOutput': function (parentGfx, element) {\n      var arrowPathData = pathMap.getRawPath('DATA_ARROW');\n\n      // page\n      var elementObject = renderer('bpmn:DataObject')(parentGfx, element);\n\n      /* output arrow path */\n      drawPath(parentGfx, arrowPathData, {\n        strokeWidth: 1,\n        fill: 'black'\n      });\n      return elementObject;\n    },\n    'bpmn:DataStoreReference': function (parentGfx, element) {\n      var DATA_STORE_PATH = pathMap.getScaledPath('DATA_STORE', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0,\n          my: 0.133\n        }\n      });\n      var elementStore = drawPath(parentGfx, DATA_STORE_PATH, {\n        strokeWidth: 2,\n        fill: getFillColor(element, defaultFillColor),\n        fillOpacity: DEFAULT_FILL_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      return elementStore;\n    },\n    'bpmn:BoundaryEvent': function (parentGfx, element) {\n      var semantic = getSemantic(element),\n        cancel = semantic.cancelActivity;\n      var attrs = {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n      if (!cancel) {\n        attrs.strokeDasharray = '6';\n        attrs.strokeLinecap = 'round';\n      }\n\n      // apply fillOpacity\n      var outerAttrs = assign({}, attrs, {\n        fillOpacity: 1\n      });\n\n      // apply no-fill\n      var innerAttrs = assign({}, attrs, {\n        fill: 'none'\n      });\n      var outer = renderer('bpmn:Event')(parentGfx, element, outerAttrs);\n\n      /* inner path */\n      drawCircle(parentGfx, element.width, element.height, INNER_OUTER_DIST, innerAttrs);\n      renderEventContent(element, parentGfx);\n      return outer;\n    },\n    'bpmn:Group': function (parentGfx, element) {\n      var group = drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS, {\n        stroke: getStrokeColor(element, defaultStrokeColor),\n        strokeWidth: 1,\n        strokeDasharray: '8,3,1,3',\n        fill: 'none',\n        pointerEvents: 'none'\n      });\n      return group;\n    },\n    'label': function (parentGfx, element) {\n      return renderExternalLabel(parentGfx, element);\n    },\n    'bpmn:TextAnnotation': function (parentGfx, element) {\n      var style = {\n        'fill': 'none',\n        'stroke': 'none'\n      };\n      var textElement = drawRect(parentGfx, element.width, element.height, 0, 0, style);\n      var textPathData = pathMap.getScaledPath('TEXT_ANNOTATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.0,\n          my: 0.0\n        }\n      });\n      drawPath(parentGfx, textPathData, {\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n      var text = getSemantic(element).text || '';\n      renderLabel(parentGfx, text, {\n        box: element,\n        align: 'left-top',\n        padding: 5,\n        style: {\n          fill: getStrokeColor(element, defaultStrokeColor)\n        }\n      });\n      return textElement;\n    },\n    'ParticipantMultiplicityMarker': function (parentGfx, element) {\n      var markerPath = pathMap.getScaledPath('MARKER_PARALLEL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: element.width / 2 / element.width,\n          my: (element.height - 15) / element.height\n        }\n      });\n      drawMarker('participant-multiplicity', parentGfx, markerPath, {\n        strokeWidth: 2,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'SubProcessMarker': function (parentGfx, element) {\n      var markerRect = drawRect(parentGfx, 14, 14, 0, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      // Process marker is placed in the middle of the box\n      // therefore fixed values can be used here\n      translate(markerRect, element.width / 2 - 7.5, element.height - 20);\n      var markerPath = pathMap.getScaledPath('MARKER_SUB_PROCESS', {\n        xScaleFactor: 1.5,\n        yScaleFactor: 1.5,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: (element.width / 2 - 7.5) / element.width,\n          my: (element.height - 20) / element.height\n        }\n      });\n      drawMarker('sub-process', parentGfx, markerPath, {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'ParallelMarker': function (parentGfx, element, position) {\n      var markerPath = pathMap.getScaledPath('MARKER_PARALLEL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: (element.width / 2 + position.parallel) / element.width,\n          my: (element.height - 20) / element.height\n        }\n      });\n      drawMarker('parallel', parentGfx, markerPath, {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'SequentialMarker': function (parentGfx, element, position) {\n      var markerPath = pathMap.getScaledPath('MARKER_SEQUENTIAL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: (element.width / 2 + position.seq) / element.width,\n          my: (element.height - 19) / element.height\n        }\n      });\n      drawMarker('sequential', parentGfx, markerPath, {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'CompensationMarker': function (parentGfx, element, position) {\n      var markerMath = pathMap.getScaledPath('MARKER_COMPENSATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: (element.width / 2 + position.compensation) / element.width,\n          my: (element.height - 13) / element.height\n        }\n      });\n      drawMarker('compensation', parentGfx, markerMath, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'LoopMarker': function (parentGfx, element, position) {\n      var markerPath = pathMap.getScaledPath('MARKER_LOOP', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: (element.width / 2 + position.loop) / element.width,\n          my: (element.height - 7) / element.height\n        }\n      });\n      drawMarker('loop', parentGfx, markerPath, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor),\n        strokeLinecap: 'round',\n        strokeMiterlimit: 0.5\n      });\n    },\n    'AdhocMarker': function (parentGfx, element, position) {\n      var markerPath = pathMap.getScaledPath('MARKER_ADHOC', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: (element.width / 2 + position.adhoc) / element.width,\n          my: (element.height - 15) / element.height\n        }\n      });\n      drawMarker('adhoc', parentGfx, markerPath, {\n        strokeWidth: 1,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    }\n  };\n  function attachTaskMarkers(parentGfx, element, taskMarkers) {\n    var obj = getSemantic(element);\n    var subprocess = taskMarkers && taskMarkers.indexOf('SubProcessMarker') !== -1;\n    var position;\n    if (subprocess) {\n      position = {\n        seq: -21,\n        parallel: -22,\n        compensation: -42,\n        loop: -18,\n        adhoc: 10\n      };\n    } else {\n      position = {\n        seq: -3,\n        parallel: -6,\n        compensation: -27,\n        loop: 0,\n        adhoc: 10\n      };\n    }\n    forEach(taskMarkers, function (marker) {\n      renderer(marker)(parentGfx, element, position);\n    });\n    if (obj.isForCompensation) {\n      renderer('CompensationMarker')(parentGfx, element, position);\n    }\n    if (obj.$type === 'bpmn:AdHocSubProcess') {\n      renderer('AdhocMarker')(parentGfx, element, position);\n    }\n    var loopCharacteristics = obj.loopCharacteristics,\n      isSequential = loopCharacteristics && loopCharacteristics.isSequential;\n    if (loopCharacteristics) {\n      if (isSequential === undefined) {\n        renderer('LoopMarker')(parentGfx, element, position);\n      }\n      if (isSequential === false) {\n        renderer('ParallelMarker')(parentGfx, element, position);\n      }\n      if (isSequential === true) {\n        renderer('SequentialMarker')(parentGfx, element, position);\n      }\n    }\n  }\n  function renderDataItemCollection(parentGfx, element) {\n    var yPosition = (element.height - 18) / element.height;\n    var pathData = pathMap.getScaledPath('DATA_OBJECT_COLLECTION_PATH', {\n      xScaleFactor: 1,\n      yScaleFactor: 1,\n      containerWidth: element.width,\n      containerHeight: element.height,\n      position: {\n        mx: 0.33,\n        my: yPosition\n      }\n    });\n\n    /* collection path */\n    drawPath(parentGfx, pathData, {\n      strokeWidth: 2\n    });\n  }\n\n  // extension API, use at your own risk\n  this._drawPath = drawPath;\n}\ninherits(BpmnRenderer, BaseRenderer);\nBpmnRenderer.$inject = ['config.bpmnRenderer', 'eventBus', 'styles', 'pathMap', 'canvas', 'textRenderer'];\nBpmnRenderer.prototype.canRender = function (element) {\n  return is(element, 'bpmn:BaseElement');\n};\nBpmnRenderer.prototype.drawShape = function (parentGfx, element) {\n  var type = element.type;\n  var h = this.handlers[type];\n\n  /* jshint -W040 */\n  return h(parentGfx, element);\n};\nBpmnRenderer.prototype.drawConnection = function (parentGfx, element) {\n  var type = element.type;\n  var h = this.handlers[type];\n\n  /* jshint -W040 */\n  return h(parentGfx, element);\n};\nBpmnRenderer.prototype.getShapePath = function (element) {\n  if (is(element, 'bpmn:Event')) {\n    return getCirclePath(element);\n  }\n  if (is(element, 'bpmn:Activity')) {\n    return getRoundRectPath(element, TASK_BORDER_RADIUS);\n  }\n  if (is(element, 'bpmn:Gateway')) {\n    return getDiamondPath(element);\n  }\n  return getRectPath(element);\n};","map":{"version":3,"names":["inherits","isObject","assign","forEach","BaseRenderer","isExpanded","isEventSubProcess","getLabel","is","createLine","isTypedEvent","isThrowEvent","isCollection","getDi","getSemantic","getCirclePath","getRoundRectPath","getDiamondPath","getRectPath","getFillColor","getStrokeColor","query","domQuery","append","svgAppend","attr","svgAttr","create","svgCreate","classes","svgClasses","rotate","transform","translate","Ids","RENDERER_IDS","TASK_BORDER_RADIUS","INNER_OUTER_DIST","DEFAULT_FILL_OPACITY","HIGH_FILL_OPACITY","BpmnRenderer","config","eventBus","styles","pathMap","canvas","textRenderer","priority","call","defaultFillColor","defaultStrokeColor","rendererId","next","markers","computeStyle","addMarker","id","options","attrs","fill","strokeWidth","strokeLinecap","strokeDasharray","ref","x","y","scale","marker","element","viewBox","refX","refY","markerWidth","markerHeight","orient","defs","_svg","colorEscape","str","replace","type","stroke","createMarker","sequenceflowEnd","d","messageflowStart","cx","cy","r","messageflowEnd","associationStart","associationEnd","conditionalflowMarker","conditionaldefaultflowMarker","drawCircle","parentGfx","width","height","offset","fillOpacity","circle","Math","round","drawRect","rect","rx","ry","drawDiamond","x_2","y_2","points","pointsString","map","point","join","polygon","drawLine","waypoints","line","drawPath","path","drawMarker","as","handlers","renderer","renderEventContent","event","isThrowing","eventDefinitions","length","parallelMultiple","renderLabel","label","size","text","createText","add","renderEmbeddedLabel","align","semantic","name","box","padding","style","renderExternalLabel","fitBox","getExternalStyle","renderLaneLabel","textBox","top","createPathFromConnection","connection","pathData","i","bpmn:Event","bpmn:StartEvent","isInterrupting","bpmn:MessageEventDefinition","getScaledPath","xScaleFactor","yScaleFactor","containerWidth","containerHeight","position","mx","my","messagePath","bpmn:TimerEventDefinition","linePathData","bpmn:EscalationEventDefinition","bpmn:ConditionalEventDefinition","bpmn:LinkEventDefinition","bpmn:ErrorEventDefinition","bpmn:CancelEventDefinition","bpmn:CompensateEventDefinition","bpmn:SignalEventDefinition","bpmn:MultipleEventDefinition","bpmn:ParallelMultipleEventDefinition","bpmn:EndEvent","bpmn:TerminateEventDefinition","bpmn:IntermediateEvent","outer","bpmn:Activity","bpmn:Task","attachTaskMarkers","bpmn:ServiceTask","task","pathDataBG","abspos","fillPathData","bpmn:UserTask","pathData2","pathData3","bpmn:ManualTask","bpmn:SendTask","bpmn:ReceiveTask","instantiate","bpmn:ScriptTask","bpmn:BusinessRuleTask","headerPathData","businessHeaderPath","headerData","businessPath","bpmn:SubProcess","expanded","bpmn:AdHocSubProcess","bpmn:Transaction","innerAttrs","bpmn:CallActivity","bpmn:Participant","lane","expandedPool","text2","participantMultiplicity","bpmn:Lane","$type","bpmn:InclusiveGateway","diamond","bpmn:ExclusiveGateway","isMarkerVisible","bpmn:ComplexGateway","bpmn:ParallelGateway","bpmn:EventBasedGateway","eventGatewayType","drawEvent","parallelPath","innerCircle","bpmn:Gateway","bpmn:SequenceFlow","strokeLinejoin","markerEnd","sequenceFlow","source","businessObject","conditionExpression","$instanceOf","markerStart","default","bpmn:Association","associationDirection","bpmn:DataInputAssociation","bpmn:DataOutputAssociation","bpmn:MessageFlow","di","messageRef","midPoint","getPointAtLength","getTotalLength","markerPathData","messageAttrs","messageVisibleKind","bpmn:DataObject","elementObject","renderDataItemCollection","bpmn:DataInput","arrowPathData","getRawPath","bpmn:DataOutput","bpmn:DataStoreReference","DATA_STORE_PATH","elementStore","bpmn:BoundaryEvent","cancel","cancelActivity","outerAttrs","bpmn:Group","group","pointerEvents","bpmn:TextAnnotation","textElement","textPathData","ParticipantMultiplicityMarker","markerPath","SubProcessMarker","markerRect","ParallelMarker","parallel","SequentialMarker","seq","CompensationMarker","markerMath","compensation","LoopMarker","loop","strokeMiterlimit","AdhocMarker","adhoc","taskMarkers","obj","subprocess","indexOf","isForCompensation","loopCharacteristics","isSequential","undefined","yPosition","_drawPath","$inject","prototype","canRender","drawShape","h","drawConnection","getShapePath"],"sources":["C:/Users/KondalaRaoThota/Truviq_Camunda/camunda-react/node_modules/bpmn-js/lib/draw/BpmnRenderer.js"],"sourcesContent":["import inherits from 'inherits';\n\nimport {\n  isObject,\n  assign,\n  forEach\n} from 'min-dash';\n\nimport BaseRenderer from 'diagram-js/lib/draw/BaseRenderer';\n\nimport {\n  isExpanded,\n  isEventSubProcess\n} from '../util/DiUtil';\n\nimport {\n  getLabel\n} from '../features/label-editing/LabelUtil';\n\nimport { is } from '../util/ModelUtil';\n\nimport {\n  createLine\n} from 'diagram-js/lib/util/RenderUtil';\n\nimport {\n  isTypedEvent,\n  isThrowEvent,\n  isCollection,\n  getDi,\n  getSemantic,\n  getCirclePath,\n  getRoundRectPath,\n  getDiamondPath,\n  getRectPath,\n  getFillColor,\n  getStrokeColor\n} from './BpmnRenderUtil';\n\nimport {\n  query as domQuery\n} from 'min-dom';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  create as svgCreate,\n  classes as svgClasses\n} from 'tiny-svg';\n\nimport {\n  rotate,\n  transform,\n  translate\n} from 'diagram-js/lib/util/SvgTransformUtil';\n\nimport Ids from 'ids';\n\nvar RENDERER_IDS = new Ids();\n\nvar TASK_BORDER_RADIUS = 10;\nvar INNER_OUTER_DIST = 3;\n\nvar DEFAULT_FILL_OPACITY = .95,\n    HIGH_FILL_OPACITY = .35;\n\n\nexport default function BpmnRenderer(\n    config, eventBus, styles, pathMap,\n    canvas, textRenderer, priority) {\n\n  BaseRenderer.call(this, eventBus, priority);\n\n  var defaultFillColor = config && config.defaultFillColor,\n      defaultStrokeColor = config && config.defaultStrokeColor;\n\n  var rendererId = RENDERER_IDS.next();\n\n  var markers = {};\n\n  var computeStyle = styles.computeStyle;\n\n  function addMarker(id, options) {\n    var attrs = assign({\n      fill: 'black',\n      strokeWidth: 1,\n      strokeLinecap: 'round',\n      strokeDasharray: 'none'\n    }, options.attrs);\n\n    var ref = options.ref || { x: 0, y: 0 };\n\n    var scale = options.scale || 1;\n\n    // fix for safari / chrome / firefox bug not correctly\n    // resetting stroke dash array\n    if (attrs.strokeDasharray === 'none') {\n      attrs.strokeDasharray = [10000, 1];\n    }\n\n    var marker = svgCreate('marker');\n\n    svgAttr(options.element, attrs);\n\n    svgAppend(marker, options.element);\n\n    svgAttr(marker, {\n      id: id,\n      viewBox: '0 0 20 20',\n      refX: ref.x,\n      refY: ref.y,\n      markerWidth: 20 * scale,\n      markerHeight: 20 * scale,\n      orient: 'auto'\n    });\n\n    var defs = domQuery('defs', canvas._svg);\n\n    if (!defs) {\n      defs = svgCreate('defs');\n\n      svgAppend(canvas._svg, defs);\n    }\n\n    svgAppend(defs, marker);\n\n    markers[id] = marker;\n  }\n\n  function colorEscape(str) {\n\n    // only allow characters and numbers\n    return str.replace(/[^0-9a-zA-z]+/g, '_');\n  }\n\n  function marker(type, fill, stroke) {\n    var id = type + '-' + colorEscape(fill) + '-' + colorEscape(stroke) + '-' + rendererId;\n\n    if (!markers[id]) {\n      createMarker(id, type, fill, stroke);\n    }\n\n    return 'url(#' + id + ')';\n  }\n\n  function createMarker(id, type, fill, stroke) {\n\n    if (type === 'sequenceflow-end') {\n      var sequenceflowEnd = svgCreate('path');\n      svgAttr(sequenceflowEnd, { d: 'M 1 5 L 11 10 L 1 15 Z' });\n\n      addMarker(id, {\n        element: sequenceflowEnd,\n        ref: { x: 11, y: 10 },\n        scale: 0.5,\n        attrs: {\n          fill: stroke,\n          stroke: stroke\n        }\n      });\n    }\n\n    if (type === 'messageflow-start') {\n      var messageflowStart = svgCreate('circle');\n      svgAttr(messageflowStart, { cx: 6, cy: 6, r: 3.5 });\n\n      addMarker(id, {\n        element: messageflowStart,\n        attrs: {\n          fill: fill,\n          stroke: stroke\n        },\n        ref: { x: 6, y: 6 }\n      });\n    }\n\n    if (type === 'messageflow-end') {\n      var messageflowEnd = svgCreate('path');\n      svgAttr(messageflowEnd, { d: 'm 1 5 l 0 -3 l 7 3 l -7 3 z' });\n\n      addMarker(id, {\n        element: messageflowEnd,\n        attrs: {\n          fill: fill,\n          stroke: stroke,\n          strokeLinecap: 'butt'\n        },\n        ref: { x: 8.5, y: 5 }\n      });\n    }\n\n    if (type === 'association-start') {\n      var associationStart = svgCreate('path');\n      svgAttr(associationStart, { d: 'M 11 5 L 1 10 L 11 15' });\n\n      addMarker(id, {\n        element: associationStart,\n        attrs: {\n          fill: 'none',\n          stroke: stroke,\n          strokeWidth: 1.5\n        },\n        ref: { x: 1, y: 10 },\n        scale: 0.5\n      });\n    }\n\n    if (type === 'association-end') {\n      var associationEnd = svgCreate('path');\n      svgAttr(associationEnd, { d: 'M 1 5 L 11 10 L 1 15' });\n\n      addMarker(id, {\n        element: associationEnd,\n        attrs: {\n          fill: 'none',\n          stroke: stroke,\n          strokeWidth: 1.5\n        },\n        ref: { x: 12, y: 10 },\n        scale: 0.5\n      });\n    }\n\n    if (type === 'conditional-flow-marker') {\n      var conditionalflowMarker = svgCreate('path');\n      svgAttr(conditionalflowMarker, { d: 'M 0 10 L 8 6 L 16 10 L 8 14 Z' });\n\n      addMarker(id, {\n        element: conditionalflowMarker,\n        attrs: {\n          fill: fill,\n          stroke: stroke\n        },\n        ref: { x: -1, y: 10 },\n        scale: 0.5\n      });\n    }\n\n    if (type === 'conditional-default-flow-marker') {\n      var conditionaldefaultflowMarker = svgCreate('path');\n      svgAttr(conditionaldefaultflowMarker, { d: 'M 6 4 L 10 16' });\n\n      addMarker(id, {\n        element: conditionaldefaultflowMarker,\n        attrs: {\n          stroke: stroke\n        },\n        ref: { x: 0, y: 10 },\n        scale: 0.5\n      });\n    }\n  }\n\n  function drawCircle(parentGfx, width, height, offset, attrs) {\n\n    if (isObject(offset)) {\n      attrs = offset;\n      offset = 0;\n    }\n\n    offset = offset || 0;\n\n    attrs = computeStyle(attrs, {\n      stroke: 'black',\n      strokeWidth: 2,\n      fill: 'white'\n    });\n\n    if (attrs.fill === 'none') {\n      delete attrs.fillOpacity;\n    }\n\n    var cx = width / 2,\n        cy = height / 2;\n\n    var circle = svgCreate('circle');\n    svgAttr(circle, {\n      cx: cx,\n      cy: cy,\n      r: Math.round((width + height) / 4 - offset)\n    });\n    svgAttr(circle, attrs);\n\n    svgAppend(parentGfx, circle);\n\n    return circle;\n  }\n\n  function drawRect(parentGfx, width, height, r, offset, attrs) {\n\n    if (isObject(offset)) {\n      attrs = offset;\n      offset = 0;\n    }\n\n    offset = offset || 0;\n\n    attrs = computeStyle(attrs, {\n      stroke: 'black',\n      strokeWidth: 2,\n      fill: 'white'\n    });\n\n    var rect = svgCreate('rect');\n    svgAttr(rect, {\n      x: offset,\n      y: offset,\n      width: width - offset * 2,\n      height: height - offset * 2,\n      rx: r,\n      ry: r\n    });\n    svgAttr(rect, attrs);\n\n    svgAppend(parentGfx, rect);\n\n    return rect;\n  }\n\n  function drawDiamond(parentGfx, width, height, attrs) {\n\n    var x_2 = width / 2;\n    var y_2 = height / 2;\n\n    var points = [{ x: x_2, y: 0 }, { x: width, y: y_2 }, { x: x_2, y: height }, { x: 0, y: y_2 }];\n\n    var pointsString = points.map(function(point) {\n      return point.x + ',' + point.y;\n    }).join(' ');\n\n    attrs = computeStyle(attrs, {\n      stroke: 'black',\n      strokeWidth: 2,\n      fill: 'white'\n    });\n\n    var polygon = svgCreate('polygon');\n    svgAttr(polygon, {\n      points: pointsString\n    });\n    svgAttr(polygon, attrs);\n\n    svgAppend(parentGfx, polygon);\n\n    return polygon;\n  }\n\n  function drawLine(parentGfx, waypoints, attrs) {\n    attrs = computeStyle(attrs, [ 'no-fill' ], {\n      stroke: 'black',\n      strokeWidth: 2,\n      fill: 'none'\n    });\n\n    var line = createLine(waypoints, attrs);\n\n    svgAppend(parentGfx, line);\n\n    return line;\n  }\n\n  function drawPath(parentGfx, d, attrs) {\n\n    attrs = computeStyle(attrs, [ 'no-fill' ], {\n      strokeWidth: 2,\n      stroke: 'black'\n    });\n\n    var path = svgCreate('path');\n    svgAttr(path, { d: d });\n    svgAttr(path, attrs);\n\n    svgAppend(parentGfx, path);\n\n    return path;\n  }\n\n  function drawMarker(type, parentGfx, path, attrs) {\n    return drawPath(parentGfx, path, assign({ 'data-marker': type }, attrs));\n  }\n\n  function as(type) {\n    return function(parentGfx, element) {\n      return handlers[type](parentGfx, element);\n    };\n  }\n\n  function renderer(type) {\n    return handlers[type];\n  }\n\n  function renderEventContent(element, parentGfx) {\n\n    var event = getSemantic(element);\n    var isThrowing = isThrowEvent(event);\n\n    if (event.eventDefinitions && event.eventDefinitions.length>1) {\n      if (event.parallelMultiple) {\n        return renderer('bpmn:ParallelMultipleEventDefinition')(parentGfx, element, isThrowing);\n      }\n      else {\n        return renderer('bpmn:MultipleEventDefinition')(parentGfx, element, isThrowing);\n      }\n    }\n\n    if (isTypedEvent(event, 'bpmn:MessageEventDefinition')) {\n      return renderer('bpmn:MessageEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:TimerEventDefinition')) {\n      return renderer('bpmn:TimerEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:ConditionalEventDefinition')) {\n      return renderer('bpmn:ConditionalEventDefinition')(parentGfx, element);\n    }\n\n    if (isTypedEvent(event, 'bpmn:SignalEventDefinition')) {\n      return renderer('bpmn:SignalEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:EscalationEventDefinition')) {\n      return renderer('bpmn:EscalationEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:LinkEventDefinition')) {\n      return renderer('bpmn:LinkEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:ErrorEventDefinition')) {\n      return renderer('bpmn:ErrorEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:CancelEventDefinition')) {\n      return renderer('bpmn:CancelEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:CompensateEventDefinition')) {\n      return renderer('bpmn:CompensateEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    if (isTypedEvent(event, 'bpmn:TerminateEventDefinition')) {\n      return renderer('bpmn:TerminateEventDefinition')(parentGfx, element, isThrowing);\n    }\n\n    return null;\n  }\n\n  function renderLabel(parentGfx, label, options) {\n\n    options = assign({\n      size: {\n        width: 100\n      }\n    }, options);\n\n    var text = textRenderer.createText(label || '', options);\n\n    svgClasses(text).add('djs-label');\n\n    svgAppend(parentGfx, text);\n\n    return text;\n  }\n\n  function renderEmbeddedLabel(parentGfx, element, align) {\n    var semantic = getSemantic(element);\n\n    return renderLabel(parentGfx, semantic.name, {\n      box: element,\n      align: align,\n      padding: 5,\n      style: {\n        fill: getStrokeColor(element, defaultStrokeColor)\n      }\n    });\n  }\n\n  function renderExternalLabel(parentGfx, element) {\n\n    var box = {\n      width: 90,\n      height: 30,\n      x: element.width / 2 + element.x,\n      y: element.height / 2 + element.y\n    };\n\n    return renderLabel(parentGfx, getLabel(element), {\n      box: box,\n      fitBox: true,\n      style: assign(\n        {},\n        textRenderer.getExternalStyle(),\n        {\n          fill: getStrokeColor(element, defaultStrokeColor)\n        }\n      )\n    });\n  }\n\n  function renderLaneLabel(parentGfx, text, element) {\n    var textBox = renderLabel(parentGfx, text, {\n      box: {\n        height: 30,\n        width: element.height\n      },\n      align: 'center-middle',\n      style: {\n        fill: getStrokeColor(element, defaultStrokeColor)\n      }\n    });\n\n    var top = -1 * element.height;\n\n    transform(textBox, 0, -top, 270);\n  }\n\n  function createPathFromConnection(connection) {\n    var waypoints = connection.waypoints;\n\n    var pathData = 'm  ' + waypoints[0].x + ',' + waypoints[0].y;\n    for (var i = 1; i < waypoints.length; i++) {\n      pathData += 'L' + waypoints[i].x + ',' + waypoints[i].y + ' ';\n    }\n    return pathData;\n  }\n\n  var handlers = this.handlers = {\n    'bpmn:Event': function(parentGfx, element, attrs) {\n\n      if (!('fillOpacity' in attrs)) {\n        attrs.fillOpacity = DEFAULT_FILL_OPACITY;\n      }\n\n      return drawCircle(parentGfx, element.width, element.height, attrs);\n    },\n    'bpmn:StartEvent': function(parentGfx, element) {\n      var attrs = {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n\n      var semantic = getSemantic(element);\n\n      if (!semantic.isInterrupting) {\n        attrs = {\n          strokeDasharray: '6',\n          strokeLinecap: 'round',\n          fill: getFillColor(element, defaultFillColor),\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        };\n      }\n\n      var circle = renderer('bpmn:Event')(parentGfx, element, attrs);\n\n      renderEventContent(element, parentGfx);\n\n      return circle;\n    },\n    'bpmn:MessageEventDefinition': function(parentGfx, element, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_MESSAGE', {\n        xScaleFactor: 0.9,\n        yScaleFactor: 0.9,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.235,\n          my: 0.315\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(element, defaultStrokeColor) : getFillColor(element, defaultFillColor);\n      var stroke = isThrowing ? getFillColor(element, defaultFillColor) : getStrokeColor(element, defaultStrokeColor);\n\n      var messagePath = drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: stroke\n      });\n\n      return messagePath;\n    },\n    'bpmn:TimerEventDefinition': function(parentGfx, element) {\n      var circle = drawCircle(parentGfx, element.width, element.height, 0.2 * element.height, {\n        strokeWidth: 2,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var pathData = pathMap.getScaledPath('EVENT_TIMER_WH', {\n        xScaleFactor: 0.75,\n        yScaleFactor: 0.75,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.5,\n          my: 0.5\n        }\n      });\n\n      drawPath(parentGfx, pathData, {\n        strokeWidth: 2,\n        strokeLinecap: 'square',\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      for (var i = 0;i < 12; i++) {\n\n        var linePathData = pathMap.getScaledPath('EVENT_TIMER_LINE', {\n          xScaleFactor: 0.75,\n          yScaleFactor: 0.75,\n          containerWidth: element.width,\n          containerHeight: element.height,\n          position: {\n            mx: 0.5,\n            my: 0.5\n          }\n        });\n\n        var width = element.width / 2;\n        var height = element.height / 2;\n\n        drawPath(parentGfx, linePathData, {\n          strokeWidth: 1,\n          strokeLinecap: 'square',\n          transform: 'rotate(' + (i * 30) + ',' + height + ',' + width + ')',\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        });\n      }\n\n      return circle;\n    },\n    'bpmn:EscalationEventDefinition': function(parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_ESCALATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.5,\n          my: 0.2\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:ConditionalEventDefinition': function(parentGfx, event) {\n      var pathData = pathMap.getScaledPath('EVENT_CONDITIONAL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.5,\n          my: 0.222\n        }\n      });\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:LinkEventDefinition': function(parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_LINK', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.57,\n          my: 0.263\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:ErrorEventDefinition': function(parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_ERROR', {\n        xScaleFactor: 1.1,\n        yScaleFactor: 1.1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.2,\n          my: 0.722\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:CancelEventDefinition': function(parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_CANCEL_45', {\n        xScaleFactor: 1.0,\n        yScaleFactor: 1.0,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.638,\n          my: -0.055\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n\n      var path = drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n\n      rotate(path, 45);\n\n      return path;\n    },\n    'bpmn:CompensateEventDefinition': function(parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_COMPENSATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.22,\n          my: 0.5\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:SignalEventDefinition': function(parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_SIGNAL', {\n        xScaleFactor: 0.9,\n        yScaleFactor: 0.9,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.5,\n          my: 0.2\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill,\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:MultipleEventDefinition': function(parentGfx, event, isThrowing) {\n      var pathData = pathMap.getScaledPath('EVENT_MULTIPLE', {\n        xScaleFactor: 1.1,\n        yScaleFactor: 1.1,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.222,\n          my: 0.36\n        }\n      });\n\n      var fill = isThrowing ? getStrokeColor(event, defaultStrokeColor) : 'none';\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: fill\n      });\n    },\n    'bpmn:ParallelMultipleEventDefinition': function(parentGfx, event) {\n      var pathData = pathMap.getScaledPath('EVENT_PARALLEL_MULTIPLE', {\n        xScaleFactor: 1.2,\n        yScaleFactor: 1.2,\n        containerWidth: event.width,\n        containerHeight: event.height,\n        position: {\n          mx: 0.458,\n          my: 0.194\n        }\n      });\n\n      return drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getStrokeColor(event, defaultStrokeColor),\n        stroke: getStrokeColor(event, defaultStrokeColor)\n      });\n    },\n    'bpmn:EndEvent': function(parentGfx, element) {\n      var circle = renderer('bpmn:Event')(parentGfx, element, {\n        strokeWidth: 4,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      renderEventContent(element, parentGfx, true);\n\n      return circle;\n    },\n    'bpmn:TerminateEventDefinition': function(parentGfx, element) {\n      var circle = drawCircle(parentGfx, element.width, element.height, 8, {\n        strokeWidth: 4,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return circle;\n    },\n    'bpmn:IntermediateEvent': function(parentGfx, element) {\n      var outer = renderer('bpmn:Event')(parentGfx, element, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      /* inner */\n      drawCircle(parentGfx, element.width, element.height, INNER_OUTER_DIST, {\n        strokeWidth: 1,\n        fill: getFillColor(element, 'none'),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      renderEventContent(element, parentGfx);\n\n      return outer;\n    },\n    'bpmn:IntermediateCatchEvent': as('bpmn:IntermediateEvent'),\n    'bpmn:IntermediateThrowEvent': as('bpmn:IntermediateEvent'),\n\n    'bpmn:Activity': function(parentGfx, element, attrs) {\n\n      attrs = attrs || {};\n\n      if (!('fillOpacity' in attrs)) {\n        attrs.fillOpacity = DEFAULT_FILL_OPACITY;\n      }\n\n      return drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS, attrs);\n    },\n\n    'bpmn:Task': function(parentGfx, element) {\n      var attrs = {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n\n      var rect = renderer('bpmn:Activity')(parentGfx, element, attrs);\n\n      renderEmbeddedLabel(parentGfx, element, 'center-middle');\n      attachTaskMarkers(parentGfx, element);\n\n      return rect;\n    },\n    'bpmn:ServiceTask': function(parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n\n      var pathDataBG = pathMap.getScaledPath('TASK_TYPE_SERVICE', {\n        abspos: {\n          x: 12,\n          y: 18\n        }\n      });\n\n      /* service bg */ drawPath(parentGfx, pathDataBG, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var fillPathData = pathMap.getScaledPath('TASK_TYPE_SERVICE_FILL', {\n        abspos: {\n          x: 17.2,\n          y: 18\n        }\n      });\n\n      /* service fill */ drawPath(parentGfx, fillPathData, {\n        strokeWidth: 0,\n        fill: getFillColor(element, defaultFillColor)\n      });\n\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SERVICE', {\n        abspos: {\n          x: 17,\n          y: 22\n        }\n      });\n\n      /* service */ drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return task;\n    },\n    'bpmn:UserTask': function(parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n\n      var x = 15;\n      var y = 12;\n\n      var pathData = pathMap.getScaledPath('TASK_TYPE_USER_1', {\n        abspos: {\n          x: x,\n          y: y\n        }\n      });\n\n      /* user path */ drawPath(parentGfx, pathData, {\n        strokeWidth: 0.5,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var pathData2 = pathMap.getScaledPath('TASK_TYPE_USER_2', {\n        abspos: {\n          x: x,\n          y: y\n        }\n      });\n\n      /* user2 path */ drawPath(parentGfx, pathData2, {\n        strokeWidth: 0.5,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var pathData3 = pathMap.getScaledPath('TASK_TYPE_USER_3', {\n        abspos: {\n          x: x,\n          y: y\n        }\n      });\n\n      /* user3 path */ drawPath(parentGfx, pathData3, {\n        strokeWidth: 0.5,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return task;\n    },\n    'bpmn:ManualTask': function(parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n\n      var pathData = pathMap.getScaledPath('TASK_TYPE_MANUAL', {\n        abspos: {\n          x: 17,\n          y: 15\n        }\n      });\n\n      /* manual path */ drawPath(parentGfx, pathData, {\n        strokeWidth: 0.5, // 0.25,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return task;\n    },\n    'bpmn:SendTask': function(parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SEND', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: 21,\n        containerHeight: 14,\n        position: {\n          mx: 0.285,\n          my: 0.357\n        }\n      });\n\n      /* send path */ drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getFillColor(element, defaultFillColor)\n      });\n\n      return task;\n    },\n    'bpmn:ReceiveTask' : function(parentGfx, element) {\n      var semantic = getSemantic(element);\n\n      var task = renderer('bpmn:Task')(parentGfx, element);\n      var pathData;\n\n      if (semantic.instantiate) {\n        drawCircle(parentGfx, 28, 28, 20 * 0.22, { strokeWidth: 1 });\n\n        pathData = pathMap.getScaledPath('TASK_TYPE_INSTANTIATING_SEND', {\n          abspos: {\n            x: 7.77,\n            y: 9.52\n          }\n        });\n      } else {\n\n        pathData = pathMap.getScaledPath('TASK_TYPE_SEND', {\n          xScaleFactor: 0.9,\n          yScaleFactor: 0.9,\n          containerWidth: 21,\n          containerHeight: 14,\n          position: {\n            mx: 0.3,\n            my: 0.4\n          }\n        });\n      }\n\n      /* receive path */ drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return task;\n    },\n    'bpmn:ScriptTask': function(parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n\n      var pathData = pathMap.getScaledPath('TASK_TYPE_SCRIPT', {\n        abspos: {\n          x: 15,\n          y: 20\n        }\n      });\n\n      /* script path */ drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return task;\n    },\n    'bpmn:BusinessRuleTask': function(parentGfx, element) {\n      var task = renderer('bpmn:Task')(parentGfx, element);\n\n      var headerPathData = pathMap.getScaledPath('TASK_TYPE_BUSINESS_RULE_HEADER', {\n        abspos: {\n          x: 8,\n          y: 8\n        }\n      });\n\n      var businessHeaderPath = drawPath(parentGfx, headerPathData);\n      svgAttr(businessHeaderPath, {\n        strokeWidth: 1,\n        fill: getFillColor(element, '#aaaaaa'),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var headerData = pathMap.getScaledPath('TASK_TYPE_BUSINESS_RULE_MAIN', {\n        abspos: {\n          x: 8,\n          y: 8\n        }\n      });\n\n      var businessPath = drawPath(parentGfx, headerData);\n      svgAttr(businessPath, {\n        strokeWidth: 1,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return task;\n    },\n    'bpmn:SubProcess': function(parentGfx, element, attrs) {\n      attrs = assign({\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      }, attrs);\n\n      var rect = renderer('bpmn:Activity')(parentGfx, element, attrs);\n\n      var expanded = isExpanded(element);\n\n      if (isEventSubProcess(element)) {\n        svgAttr(rect, {\n          strokeDasharray: '1,2'\n        });\n      }\n\n      renderEmbeddedLabel(parentGfx, element, expanded ? 'center-top' : 'center-middle');\n\n      if (expanded) {\n        attachTaskMarkers(parentGfx, element);\n      } else {\n        attachTaskMarkers(parentGfx, element, ['SubProcessMarker']);\n      }\n\n      return rect;\n    },\n    'bpmn:AdHocSubProcess': function(parentGfx, element) {\n      return renderer('bpmn:SubProcess')(parentGfx, element);\n    },\n    'bpmn:Transaction': function(parentGfx, element) {\n      var outer = renderer('bpmn:SubProcess')(parentGfx, element);\n\n      var innerAttrs = styles.style([ 'no-fill', 'no-events' ], {\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      /* inner path */ drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS - 2, INNER_OUTER_DIST, innerAttrs);\n\n      return outer;\n    },\n    'bpmn:CallActivity': function(parentGfx, element) {\n      return renderer('bpmn:SubProcess')(parentGfx, element, {\n        strokeWidth: 5\n      });\n    },\n    'bpmn:Participant': function(parentGfx, element) {\n\n      var attrs = {\n        fillOpacity: DEFAULT_FILL_OPACITY,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n\n      var lane = renderer('bpmn:Lane')(parentGfx, element, attrs);\n\n      var expandedPool = isExpanded(element);\n\n      if (expandedPool) {\n        drawLine(parentGfx, [\n          { x: 30, y: 0 },\n          { x: 30, y: element.height }\n        ], {\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        });\n        var text = getSemantic(element).name;\n        renderLaneLabel(parentGfx, text, element);\n      } else {\n\n        // Collapsed pool draw text inline\n        var text2 = getSemantic(element).name;\n        renderLabel(parentGfx, text2, {\n          box: element, align: 'center-middle',\n          style: {\n            fill: getStrokeColor(element, defaultStrokeColor)\n          }\n        });\n      }\n\n      var participantMultiplicity = !!(getSemantic(element).participantMultiplicity);\n\n      if (participantMultiplicity) {\n        renderer('ParticipantMultiplicityMarker')(parentGfx, element);\n      }\n\n      return lane;\n    },\n    'bpmn:Lane': function(parentGfx, element, attrs) {\n      var rect = drawRect(parentGfx, element.width, element.height, 0, assign({\n        fill: getFillColor(element, defaultFillColor),\n        fillOpacity: HIGH_FILL_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      }, attrs));\n\n      var semantic = getSemantic(element);\n\n      if (semantic.$type === 'bpmn:Lane') {\n        var text = semantic.name;\n        renderLaneLabel(parentGfx, text, element);\n      }\n\n      return rect;\n    },\n    'bpmn:InclusiveGateway': function(parentGfx, element) {\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n\n      /* circle path */\n      drawCircle(parentGfx, element.width, element.height, element.height * 0.24, {\n        strokeWidth: 2.5,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return diamond;\n    },\n    'bpmn:ExclusiveGateway': function(parentGfx, element) {\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n\n      var pathData = pathMap.getScaledPath('GATEWAY_EXCLUSIVE', {\n        xScaleFactor: 0.4,\n        yScaleFactor: 0.4,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.32,\n          my: 0.3\n        }\n      });\n\n      if ((getDi(element).isMarkerVisible)) {\n        drawPath(parentGfx, pathData, {\n          strokeWidth: 1,\n          fill: getStrokeColor(element, defaultStrokeColor),\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        });\n      }\n\n      return diamond;\n    },\n    'bpmn:ComplexGateway': function(parentGfx, element) {\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n\n      var pathData = pathMap.getScaledPath('GATEWAY_COMPLEX', {\n        xScaleFactor: 0.5,\n        yScaleFactor:0.5,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.46,\n          my: 0.26\n        }\n      });\n\n      /* complex path */ drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return diamond;\n    },\n    'bpmn:ParallelGateway': function(parentGfx, element) {\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n\n      var pathData = pathMap.getScaledPath('GATEWAY_PARALLEL', {\n        xScaleFactor: 0.6,\n        yScaleFactor:0.6,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.46,\n          my: 0.2\n        }\n      });\n\n      /* parallel path */ drawPath(parentGfx, pathData, {\n        strokeWidth: 1,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return diamond;\n    },\n    'bpmn:EventBasedGateway': function(parentGfx, element) {\n\n      var semantic = getSemantic(element);\n\n      var diamond = renderer('bpmn:Gateway')(parentGfx, element);\n\n      /* outer circle path */ drawCircle(parentGfx, element.width, element.height, element.height * 0.20, {\n        strokeWidth: 1,\n        fill: 'none',\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var type = semantic.eventGatewayType;\n      var instantiate = !!semantic.instantiate;\n\n      function drawEvent() {\n\n        var pathData = pathMap.getScaledPath('GATEWAY_EVENT_BASED', {\n          xScaleFactor: 0.18,\n          yScaleFactor: 0.18,\n          containerWidth: element.width,\n          containerHeight: element.height,\n          position: {\n            mx: 0.36,\n            my: 0.44\n          }\n        });\n\n        var attrs = {\n          strokeWidth: 2,\n          fill: getFillColor(element, 'none'),\n          stroke: getStrokeColor(element, defaultStrokeColor)\n        };\n\n        /* event path */ drawPath(parentGfx, pathData, attrs);\n      }\n\n      if (type === 'Parallel') {\n\n        var pathData = pathMap.getScaledPath('GATEWAY_PARALLEL', {\n          xScaleFactor: 0.4,\n          yScaleFactor:0.4,\n          containerWidth: element.width,\n          containerHeight: element.height,\n          position: {\n            mx: 0.474,\n            my: 0.296\n          }\n        });\n\n        var parallelPath = drawPath(parentGfx, pathData);\n        svgAttr(parallelPath, {\n          strokeWidth: 1,\n          fill: 'none'\n        });\n      } else if (type === 'Exclusive') {\n\n        if (!instantiate) {\n          var innerCircle = drawCircle(parentGfx, element.width, element.height, element.height * 0.26);\n          svgAttr(innerCircle, {\n            strokeWidth: 1,\n            fill: 'none',\n            stroke: getStrokeColor(element, defaultStrokeColor)\n          });\n        }\n\n        drawEvent();\n      }\n\n\n      return diamond;\n    },\n    'bpmn:Gateway': function(parentGfx, element) {\n      var attrs = {\n        fill: getFillColor(element, defaultFillColor),\n        fillOpacity: DEFAULT_FILL_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n\n      return drawDiamond(parentGfx, element.width, element.height, attrs);\n    },\n    'bpmn:SequenceFlow': function(parentGfx, element) {\n      var pathData = createPathFromConnection(element);\n\n      var fill = getFillColor(element, defaultFillColor),\n          stroke = getStrokeColor(element, defaultStrokeColor);\n\n      var attrs = {\n        strokeLinejoin: 'round',\n        markerEnd: marker('sequenceflow-end', fill, stroke),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n\n      var path = drawPath(parentGfx, pathData, attrs);\n\n      var sequenceFlow = getSemantic(element);\n\n      var source;\n\n      if (element.source) {\n        source = element.source.businessObject;\n\n        // conditional flow marker\n        if (sequenceFlow.conditionExpression && source.$instanceOf('bpmn:Activity')) {\n          svgAttr(path, {\n            markerStart: marker('conditional-flow-marker', fill, stroke)\n          });\n        }\n\n        // default marker\n        if (source.default && (source.$instanceOf('bpmn:Gateway') || source.$instanceOf('bpmn:Activity')) &&\n            source.default === sequenceFlow) {\n          svgAttr(path, {\n            markerStart: marker('conditional-default-flow-marker', fill, stroke)\n          });\n        }\n      }\n\n      return path;\n    },\n    'bpmn:Association': function(parentGfx, element, attrs) {\n\n      var semantic = getSemantic(element);\n\n      var fill = getFillColor(element, defaultFillColor),\n          stroke = getStrokeColor(element, defaultStrokeColor);\n\n      attrs = assign({\n        strokeDasharray: '0.5, 5',\n        strokeLinecap: 'round',\n        strokeLinejoin: 'round',\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      }, attrs || {});\n\n      if (semantic.associationDirection === 'One' ||\n          semantic.associationDirection === 'Both') {\n        attrs.markerEnd = marker('association-end', fill, stroke);\n      }\n\n      if (semantic.associationDirection === 'Both') {\n        attrs.markerStart = marker('association-start', fill, stroke);\n      }\n\n      return drawLine(parentGfx, element.waypoints, attrs);\n    },\n    'bpmn:DataInputAssociation': function(parentGfx, element) {\n      var fill = getFillColor(element, defaultFillColor),\n          stroke = getStrokeColor(element, defaultStrokeColor);\n\n      return renderer('bpmn:Association')(parentGfx, element, {\n        markerEnd: marker('association-end', fill, stroke)\n      });\n    },\n    'bpmn:DataOutputAssociation': function(parentGfx, element) {\n      var fill = getFillColor(element, defaultFillColor),\n          stroke = getStrokeColor(element, defaultStrokeColor);\n\n      return renderer('bpmn:Association')(parentGfx, element, {\n        markerEnd: marker('association-end', fill, stroke)\n      });\n    },\n    'bpmn:MessageFlow': function(parentGfx, element) {\n\n      var semantic = getSemantic(element),\n          di = getDi(element);\n\n      var fill = getFillColor(element, defaultFillColor),\n          stroke = getStrokeColor(element, defaultStrokeColor);\n\n      var pathData = createPathFromConnection(element);\n\n      var attrs = {\n        markerEnd: marker('messageflow-end', fill, stroke),\n        markerStart: marker('messageflow-start', fill, stroke),\n        strokeDasharray: '10, 12',\n        strokeLinecap: 'round',\n        strokeLinejoin: 'round',\n        strokeWidth: '1.5px',\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n\n      var path = drawPath(parentGfx, pathData, attrs);\n\n      if (semantic.messageRef) {\n        var midPoint = path.getPointAtLength(path.getTotalLength() / 2);\n\n        var markerPathData = pathMap.getScaledPath('MESSAGE_FLOW_MARKER', {\n          abspos: {\n            x: midPoint.x,\n            y: midPoint.y\n          }\n        });\n\n        var messageAttrs = { strokeWidth: 1 };\n\n        if (di.messageVisibleKind === 'initiating') {\n          messageAttrs.fill = 'white';\n          messageAttrs.stroke = 'black';\n        } else {\n          messageAttrs.fill = '#888';\n          messageAttrs.stroke = 'white';\n        }\n\n        drawPath(parentGfx, markerPathData, messageAttrs);\n      }\n\n      return path;\n    },\n    'bpmn:DataObject': function(parentGfx, element) {\n      var pathData = pathMap.getScaledPath('DATA_OBJECT_PATH', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.474,\n          my: 0.296\n        }\n      });\n\n      var elementObject = drawPath(parentGfx, pathData, {\n        fill: getFillColor(element, defaultFillColor),\n        fillOpacity: DEFAULT_FILL_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var semantic = getSemantic(element);\n\n      if (isCollection(semantic)) {\n        renderDataItemCollection(parentGfx, element);\n      }\n\n      return elementObject;\n    },\n    'bpmn:DataObjectReference': as('bpmn:DataObject'),\n    'bpmn:DataInput': function(parentGfx, element) {\n\n      var arrowPathData = pathMap.getRawPath('DATA_ARROW');\n\n      // page\n      var elementObject = renderer('bpmn:DataObject')(parentGfx, element);\n\n      /* input arrow path */ drawPath(parentGfx, arrowPathData, { strokeWidth: 1 });\n\n      return elementObject;\n    },\n    'bpmn:DataOutput': function(parentGfx, element) {\n      var arrowPathData = pathMap.getRawPath('DATA_ARROW');\n\n      // page\n      var elementObject = renderer('bpmn:DataObject')(parentGfx, element);\n\n      /* output arrow path */ drawPath(parentGfx, arrowPathData, {\n        strokeWidth: 1,\n        fill: 'black'\n      });\n\n      return elementObject;\n    },\n    'bpmn:DataStoreReference': function(parentGfx, element) {\n      var DATA_STORE_PATH = pathMap.getScaledPath('DATA_STORE', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0,\n          my: 0.133\n        }\n      });\n\n      var elementStore = drawPath(parentGfx, DATA_STORE_PATH, {\n        strokeWidth: 2,\n        fill: getFillColor(element, defaultFillColor),\n        fillOpacity: DEFAULT_FILL_OPACITY,\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      return elementStore;\n    },\n    'bpmn:BoundaryEvent': function(parentGfx, element) {\n\n      var semantic = getSemantic(element),\n          cancel = semantic.cancelActivity;\n\n      var attrs = {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      };\n\n      if (!cancel) {\n        attrs.strokeDasharray = '6';\n        attrs.strokeLinecap = 'round';\n      }\n\n      // apply fillOpacity\n      var outerAttrs = assign({}, attrs, {\n        fillOpacity: 1\n      });\n\n      // apply no-fill\n      var innerAttrs = assign({}, attrs, {\n        fill: 'none'\n      });\n\n      var outer = renderer('bpmn:Event')(parentGfx, element, outerAttrs);\n\n      /* inner path */ drawCircle(parentGfx, element.width, element.height, INNER_OUTER_DIST, innerAttrs);\n\n      renderEventContent(element, parentGfx);\n\n      return outer;\n    },\n    'bpmn:Group': function(parentGfx, element) {\n\n      var group = drawRect(parentGfx, element.width, element.height, TASK_BORDER_RADIUS, {\n        stroke: getStrokeColor(element, defaultStrokeColor),\n        strokeWidth: 1,\n        strokeDasharray: '8,3,1,3',\n        fill: 'none',\n        pointerEvents: 'none'\n      });\n\n      return group;\n    },\n    'label': function(parentGfx, element) {\n      return renderExternalLabel(parentGfx, element);\n    },\n    'bpmn:TextAnnotation': function(parentGfx, element) {\n      var style = {\n        'fill': 'none',\n        'stroke': 'none'\n      };\n\n      var textElement = drawRect(parentGfx, element.width, element.height, 0, 0, style);\n\n      var textPathData = pathMap.getScaledPath('TEXT_ANNOTATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: 0.0,\n          my: 0.0\n        }\n      });\n\n      drawPath(parentGfx, textPathData, {\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      var text = getSemantic(element).text || '';\n      renderLabel(parentGfx, text, {\n        box: element,\n        align: 'left-top',\n        padding: 5,\n        style: {\n          fill: getStrokeColor(element, defaultStrokeColor)\n        }\n      });\n\n      return textElement;\n    },\n    'ParticipantMultiplicityMarker': function(parentGfx, element) {\n      var markerPath = pathMap.getScaledPath('MARKER_PARALLEL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: ((element.width / 2) / element.width),\n          my: (element.height - 15) / element.height\n        }\n      });\n\n      drawMarker('participant-multiplicity', parentGfx, markerPath, {\n        strokeWidth: 2,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'SubProcessMarker': function(parentGfx, element) {\n      var markerRect = drawRect(parentGfx, 14, 14, 0, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n\n      // Process marker is placed in the middle of the box\n      // therefore fixed values can be used here\n      translate(markerRect, element.width / 2 - 7.5, element.height - 20);\n\n      var markerPath = pathMap.getScaledPath('MARKER_SUB_PROCESS', {\n        xScaleFactor: 1.5,\n        yScaleFactor: 1.5,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: (element.width / 2 - 7.5) / element.width,\n          my: (element.height - 20) / element.height\n        }\n      });\n\n      drawMarker('sub-process', parentGfx, markerPath, {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'ParallelMarker': function(parentGfx, element, position) {\n      var markerPath = pathMap.getScaledPath('MARKER_PARALLEL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: ((element.width / 2 + position.parallel) / element.width),\n          my: (element.height - 20) / element.height\n        }\n      });\n\n      drawMarker('parallel', parentGfx, markerPath, {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'SequentialMarker': function(parentGfx, element, position) {\n      var markerPath = pathMap.getScaledPath('MARKER_SEQUENTIAL', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: ((element.width / 2 + position.seq) / element.width),\n          my: (element.height - 19) / element.height\n        }\n      });\n\n      drawMarker('sequential', parentGfx, markerPath, {\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'CompensationMarker': function(parentGfx, element, position) {\n      var markerMath = pathMap.getScaledPath('MARKER_COMPENSATION', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: ((element.width / 2 + position.compensation) / element.width),\n          my: (element.height - 13) / element.height\n        }\n      });\n\n      drawMarker('compensation', parentGfx, markerMath, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    },\n    'LoopMarker': function(parentGfx, element, position) {\n      var markerPath = pathMap.getScaledPath('MARKER_LOOP', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: ((element.width / 2 + position.loop) / element.width),\n          my: (element.height - 7) / element.height\n        }\n      });\n\n      drawMarker('loop', parentGfx, markerPath, {\n        strokeWidth: 1,\n        fill: getFillColor(element, defaultFillColor),\n        stroke: getStrokeColor(element, defaultStrokeColor),\n        strokeLinecap: 'round',\n        strokeMiterlimit: 0.5\n      });\n    },\n    'AdhocMarker': function(parentGfx, element, position) {\n      var markerPath = pathMap.getScaledPath('MARKER_ADHOC', {\n        xScaleFactor: 1,\n        yScaleFactor: 1,\n        containerWidth: element.width,\n        containerHeight: element.height,\n        position: {\n          mx: ((element.width / 2 + position.adhoc) / element.width),\n          my: (element.height - 15) / element.height\n        }\n      });\n\n      drawMarker('adhoc', parentGfx, markerPath, {\n        strokeWidth: 1,\n        fill: getStrokeColor(element, defaultStrokeColor),\n        stroke: getStrokeColor(element, defaultStrokeColor)\n      });\n    }\n  };\n\n  function attachTaskMarkers(parentGfx, element, taskMarkers) {\n    var obj = getSemantic(element);\n\n    var subprocess = taskMarkers && taskMarkers.indexOf('SubProcessMarker') !== -1;\n    var position;\n\n    if (subprocess) {\n      position = {\n        seq: -21,\n        parallel: -22,\n        compensation: -42,\n        loop: -18,\n        adhoc: 10\n      };\n    } else {\n      position = {\n        seq: -3,\n        parallel: -6,\n        compensation: -27,\n        loop: 0,\n        adhoc: 10\n      };\n    }\n\n    forEach(taskMarkers, function(marker) {\n      renderer(marker)(parentGfx, element, position);\n    });\n\n    if (obj.isForCompensation) {\n      renderer('CompensationMarker')(parentGfx, element, position);\n    }\n\n    if (obj.$type === 'bpmn:AdHocSubProcess') {\n      renderer('AdhocMarker')(parentGfx, element, position);\n    }\n\n    var loopCharacteristics = obj.loopCharacteristics,\n        isSequential = loopCharacteristics && loopCharacteristics.isSequential;\n\n    if (loopCharacteristics) {\n\n      if (isSequential === undefined) {\n        renderer('LoopMarker')(parentGfx, element, position);\n      }\n\n      if (isSequential === false) {\n        renderer('ParallelMarker')(parentGfx, element, position);\n      }\n\n      if (isSequential === true) {\n        renderer('SequentialMarker')(parentGfx, element, position);\n      }\n    }\n  }\n\n  function renderDataItemCollection(parentGfx, element) {\n\n    var yPosition = (element.height - 18) / element.height;\n\n    var pathData = pathMap.getScaledPath('DATA_OBJECT_COLLECTION_PATH', {\n      xScaleFactor: 1,\n      yScaleFactor: 1,\n      containerWidth: element.width,\n      containerHeight: element.height,\n      position: {\n        mx: 0.33,\n        my: yPosition\n      }\n    });\n\n    /* collection path */ drawPath(parentGfx, pathData, {\n      strokeWidth: 2\n    });\n  }\n\n\n  // extension API, use at your own risk\n  this._drawPath = drawPath;\n\n}\n\n\ninherits(BpmnRenderer, BaseRenderer);\n\nBpmnRenderer.$inject = [\n  'config.bpmnRenderer',\n  'eventBus',\n  'styles',\n  'pathMap',\n  'canvas',\n  'textRenderer'\n];\n\n\nBpmnRenderer.prototype.canRender = function(element) {\n  return is(element, 'bpmn:BaseElement');\n};\n\nBpmnRenderer.prototype.drawShape = function(parentGfx, element) {\n  var type = element.type;\n  var h = this.handlers[type];\n\n  /* jshint -W040 */\n  return h(parentGfx, element);\n};\n\nBpmnRenderer.prototype.drawConnection = function(parentGfx, element) {\n  var type = element.type;\n  var h = this.handlers[type];\n\n  /* jshint -W040 */\n  return h(parentGfx, element);\n};\n\nBpmnRenderer.prototype.getShapePath = function(element) {\n\n  if (is(element, 'bpmn:Event')) {\n    return getCirclePath(element);\n  }\n\n  if (is(element, 'bpmn:Activity')) {\n    return getRoundRectPath(element, TASK_BORDER_RADIUS);\n  }\n\n  if (is(element, 'bpmn:Gateway')) {\n    return getDiamondPath(element);\n  }\n\n  return getRectPath(element);\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}