{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\nfunction TableBody(props) {\n  var children = props.children,\n    className = props.className;\n  var classes = cx(className);\n  var rest = getUnhandledProps(TableBody, props);\n  var ElementType = getElementType(TableBody, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\nTableBody.handledProps = ['as', 'children', 'className'];\nTableBody._meta = {\n  name: 'TableBody',\n  type: META.TYPES.COLLECTION,\n  parent: 'Table'\n};\nTableBody.defaultProps = {\n  as: 'tbody'\n};\nTableBody.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string\n} : {};\nexport default TableBody;","map":{"version":3,"names":["_extends","cx","PropTypes","React","customPropTypes","getElementType","getUnhandledProps","META","TableBody","props","children","className","classes","rest","ElementType","createElement","handledProps","_meta","name","type","TYPES","COLLECTION","parent","defaultProps","as","propTypes","process","env","NODE_ENV","node","string"],"sources":["C:/Users/sam/final/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/collections/Table/TableBody.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\r\nimport cx from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport { customPropTypes, getElementType, getUnhandledProps, META } from '../../lib';\r\n\r\nfunction TableBody(props) {\r\n  var children = props.children,\r\n      className = props.className;\r\n\r\n  var classes = cx(className);\r\n  var rest = getUnhandledProps(TableBody, props);\r\n  var ElementType = getElementType(TableBody, props);\r\n\r\n  return React.createElement(\r\n    ElementType,\r\n    _extends({}, rest, { className: classes }),\r\n    children\r\n  );\r\n}\r\n\r\nTableBody.handledProps = ['as', 'children', 'className'];\r\nTableBody._meta = {\r\n  name: 'TableBody',\r\n  type: META.TYPES.COLLECTION,\r\n  parent: 'Table'\r\n};\r\n\r\nTableBody.defaultProps = {\r\n  as: 'tbody'\r\n};\r\n\r\nTableBody.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: customPropTypes.as,\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string\r\n} : {};\r\n\r\nexport default TableBody;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,+BAA+B;AACpD,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,eAAe,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,IAAI,QAAQ,WAAW;AAEpF,SAASC,SAASA,CAACC,KAAK,EAAE;EACxB,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;IACzBC,SAAS,GAAGF,KAAK,CAACE,SAAS;EAE/B,IAAIC,OAAO,GAAGX,EAAE,CAACU,SAAS,CAAC;EAC3B,IAAIE,IAAI,GAAGP,iBAAiB,CAACE,SAAS,EAAEC,KAAK,CAAC;EAC9C,IAAIK,WAAW,GAAGT,cAAc,CAACG,SAAS,EAAEC,KAAK,CAAC;EAElD,OAAON,KAAK,CAACY,aAAa,CACxBD,WAAW,EACXd,QAAQ,CAAC,CAAC,CAAC,EAAEa,IAAI,EAAE;IAAEF,SAAS,EAAEC;EAAQ,CAAC,CAAC,EAC1CF,QAAQ,CACT;AACH;AAEAF,SAAS,CAACQ,YAAY,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,WAAW,CAAC;AACxDR,SAAS,CAACS,KAAK,GAAG;EAChBC,IAAI,EAAE,WAAW;EACjBC,IAAI,EAAEZ,IAAI,CAACa,KAAK,CAACC,UAAU;EAC3BC,MAAM,EAAE;AACV,CAAC;AAEDd,SAAS,CAACe,YAAY,GAAG;EACvBC,EAAE,EAAE;AACN,CAAC;AAEDhB,SAAS,CAACiB,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAC5D;EACAJ,EAAE,EAAEpB,eAAe,CAACoB,EAAE;EAEtB;EACAd,QAAQ,EAAER,SAAS,CAAC2B,IAAI;EAExB;EACAlB,SAAS,EAAET,SAAS,CAAC4B;AACvB,CAAC,GAAG,CAAC,CAAC;AAEN,eAAetB,SAAS"},"metadata":{},"sourceType":"module"}