{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { getElementType, getUnhandledProps } from '../../lib';\nimport Dropdown from '../../modules/Dropdown';\nimport FormField from './FormField';\n/**\r\n * Sugar for <Form.Field control={Dropdown} />.\r\n * @see Dropdown\r\n * @see Form\r\n */\n\nfunction FormDropdown(props) {\n  var control = props.control;\n  var rest = getUnhandledProps(FormDropdown, props);\n  var ElementType = getElementType(FormDropdown, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    control: control\n  }));\n}\nFormDropdown.handledProps = [\"as\", \"control\"];\nFormDropdown.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n  /** A FormField control prop. */\n  control: FormField.propTypes.control\n} : {};\nFormDropdown.defaultProps = {\n  as: FormField,\n  control: Dropdown\n};\nexport default FormDropdown;","map":{"version":3,"names":["_extends","PropTypes","React","getElementType","getUnhandledProps","Dropdown","FormField","FormDropdown","props","control","rest","ElementType","createElement","handledProps","propTypes","process","env","NODE_ENV","as","elementType","defaultProps"],"sources":["C:/Users/sam/final/camunda-react/node_modules/semantic-ui-react/dist/es/collections/Form/FormDropdown.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { getElementType, getUnhandledProps } from '../../lib';\r\nimport Dropdown from '../../modules/Dropdown';\r\nimport FormField from './FormField';\r\n/**\r\n * Sugar for <Form.Field control={Dropdown} />.\r\n * @see Dropdown\r\n * @see Form\r\n */\r\n\r\nfunction FormDropdown(props) {\r\n  var control = props.control;\r\n  var rest = getUnhandledProps(FormDropdown, props);\r\n  var ElementType = getElementType(FormDropdown, props);\r\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\r\n    control: control\r\n  }));\r\n}\r\n\r\nFormDropdown.handledProps = [\"as\", \"control\"];\r\nFormDropdown.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: PropTypes.elementType,\r\n\r\n  /** A FormField control prop. */\r\n  control: FormField.propTypes.control\r\n} : {};\r\nFormDropdown.defaultProps = {\r\n  as: FormField,\r\n  control: Dropdown\r\n};\r\nexport default FormDropdown;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,cAAc,EAAEC,iBAAiB,QAAQ,WAAW;AAC7D,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,MAAM,aAAa;AACnC;AACA;AACA;AACA;AACA;;AAEA,SAASC,YAAYA,CAACC,KAAK,EAAE;EAC3B,IAAIC,OAAO,GAAGD,KAAK,CAACC,OAAO;EAC3B,IAAIC,IAAI,GAAGN,iBAAiB,CAACG,YAAY,EAAEC,KAAK,CAAC;EACjD,IAAIG,WAAW,GAAGR,cAAc,CAACI,YAAY,EAAEC,KAAK,CAAC;EACrD,OAAO,aAAaN,KAAK,CAACU,aAAa,CAACD,WAAW,EAAEX,QAAQ,CAAC,CAAC,CAAC,EAAEU,IAAI,EAAE;IACtED,OAAO,EAAEA;EACX,CAAC,CAAC,CAAC;AACL;AAEAF,YAAY,CAACM,YAAY,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC;AAC7CN,YAAY,CAACO,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAC/D;EACAC,EAAE,EAAEjB,SAAS,CAACkB,WAAW;EAEzB;EACAV,OAAO,EAAEH,SAAS,CAACQ,SAAS,CAACL;AAC/B,CAAC,GAAG,CAAC,CAAC;AACNF,YAAY,CAACa,YAAY,GAAG;EAC1BF,EAAE,EAAEZ,SAAS;EACbG,OAAO,EAAEJ;AACX,CAAC;AACD,eAAeE,YAAY"},"metadata":{},"sourceType":"module"}