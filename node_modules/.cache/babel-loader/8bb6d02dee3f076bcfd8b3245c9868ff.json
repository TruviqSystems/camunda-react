{"ast":null,"code":"import { filter, find, forEach } from 'min-dash';\nimport Refs from 'object-refs';\nimport { elementToString } from './Util';\nvar diRefs = new Refs({\n  name: 'bpmnElement',\n  enumerable: true\n}, {\n  name: 'di',\n  configurable: true\n});\n\n/**\n * Returns true if an element has the given meta-model type\n *\n * @param  {ModdleElement}  element\n * @param  {string}         type\n *\n * @return {boolean}\n */\nfunction is(element, type) {\n  return element.$instanceOf(type);\n}\n\n/**\n * Find a suitable display candidate for definitions where the DI does not\n * correctly specify one.\n */\nfunction findDisplayCandidate(definitions) {\n  return find(definitions.rootElements, function (e) {\n    return is(e, 'bpmn:Process') || is(e, 'bpmn:Collaboration');\n  });\n}\nexport default function BpmnTreeWalker(handler, translate) {\n  // list of containers already walked\n  var handledElements = {};\n\n  // list of elements to handle deferred to ensure\n  // prerequisites are drawn\n  var deferred = [];\n\n  // Helpers //////////////////////\n\n  function contextual(fn, ctx) {\n    return function (e) {\n      fn(e, ctx);\n    };\n  }\n  function handled(element) {\n    handledElements[element.id] = element;\n  }\n  function isHandled(element) {\n    return handledElements[element.id];\n  }\n  function visit(element, ctx) {\n    var gfx = element.gfx;\n\n    // avoid multiple rendering of elements\n    if (gfx) {\n      throw new Error(translate('already rendered {element}', {\n        element: elementToString(element)\n      }));\n    }\n\n    // call handler\n    return handler.element(element, ctx);\n  }\n  function visitRoot(element, diagram) {\n    return handler.root(element, diagram);\n  }\n  function visitIfDi(element, ctx) {\n    try {\n      var gfx = element.di && visit(element, ctx);\n      handled(element);\n      return gfx;\n    } catch (e) {\n      logError(e.message, {\n        element: element,\n        error: e\n      });\n      console.error(translate('failed to import {element}', {\n        element: elementToString(element)\n      }));\n      console.error(e);\n    }\n  }\n  function logError(message, context) {\n    handler.error(message, context);\n  }\n\n  // DI handling //////////////////////\n\n  function registerDi(di) {\n    var bpmnElement = di.bpmnElement;\n    if (bpmnElement) {\n      if (bpmnElement.di) {\n        logError(translate('multiple DI elements defined for {element}', {\n          element: elementToString(bpmnElement)\n        }), {\n          element: bpmnElement\n        });\n      } else {\n        diRefs.bind(bpmnElement, 'di');\n        bpmnElement.di = di;\n      }\n    } else {\n      logError(translate('no bpmnElement referenced in {element}', {\n        element: elementToString(di)\n      }), {\n        element: di\n      });\n    }\n  }\n  function handleDiagram(diagram) {\n    handlePlane(diagram.plane);\n  }\n  function handlePlane(plane) {\n    registerDi(plane);\n    forEach(plane.planeElement, handlePlaneElement);\n  }\n  function handlePlaneElement(planeElement) {\n    registerDi(planeElement);\n  }\n\n  // Semantic handling //////////////////////\n\n  /**\n   * Handle definitions and return the rendered diagram (if any)\n   *\n   * @param {ModdleElement} definitions to walk and import\n   * @param {ModdleElement} [diagram] specific diagram to import and display\n   *\n   * @throws {Error} if no diagram to display could be found\n   */\n  function handleDefinitions(definitions, diagram) {\n    // make sure we walk the correct bpmnElement\n\n    var diagrams = definitions.diagrams;\n    if (diagram && diagrams.indexOf(diagram) === -1) {\n      throw new Error(translate('diagram not part of bpmn:Definitions'));\n    }\n    if (!diagram && diagrams && diagrams.length) {\n      diagram = diagrams[0];\n    }\n\n    // no diagram -> nothing to import\n    if (!diagram) {\n      throw new Error(translate('no diagram to display'));\n    }\n\n    // load DI from selected diagram only\n    handleDiagram(diagram);\n    var plane = diagram.plane;\n    if (!plane) {\n      throw new Error(translate('no plane for {element}', {\n        element: elementToString(diagram)\n      }));\n    }\n    var rootElement = plane.bpmnElement;\n\n    // ensure we default to a suitable display candidate (process or collaboration),\n    // even if non is specified in DI\n    if (!rootElement) {\n      rootElement = findDisplayCandidate(definitions);\n      if (!rootElement) {\n        throw new Error(translate('no process or collaboration to display'));\n      } else {\n        logError(translate('correcting missing bpmnElement on {plane} to {rootElement}', {\n          plane: elementToString(plane),\n          rootElement: elementToString(rootElement)\n        }));\n\n        // correct DI on the fly\n        plane.bpmnElement = rootElement;\n        registerDi(plane);\n      }\n    }\n    var ctx = visitRoot(rootElement, plane);\n    if (is(rootElement, 'bpmn:Process')) {\n      handleProcess(rootElement, ctx);\n    } else if (is(rootElement, 'bpmn:Collaboration')) {\n      handleCollaboration(rootElement, ctx);\n\n      // force drawing of everything not yet drawn that is part of the target DI\n      handleUnhandledProcesses(definitions.rootElements, ctx);\n    } else {\n      throw new Error(translate('unsupported bpmnElement for {plane}: {rootElement}', {\n        plane: elementToString(plane),\n        rootElement: elementToString(rootElement)\n      }));\n    }\n\n    // handle all deferred elements\n    handleDeferred(deferred);\n  }\n  function handleDeferred() {\n    var fn;\n\n    // drain deferred until empty\n    while (deferred.length) {\n      fn = deferred.shift();\n      fn();\n    }\n  }\n  function handleProcess(process, context) {\n    handleFlowElementsContainer(process, context);\n    handleIoSpecification(process.ioSpecification, context);\n    handleArtifacts(process.artifacts, context);\n\n    // log process handled\n    handled(process);\n  }\n  function handleUnhandledProcesses(rootElements, ctx) {\n    // walk through all processes that have not yet been drawn and draw them\n    // if they contain lanes with DI information.\n    // we do this to pass the free-floating lane test cases in the MIWG test suite\n    var processes = filter(rootElements, function (e) {\n      return !isHandled(e) && is(e, 'bpmn:Process') && e.laneSets;\n    });\n    processes.forEach(contextual(handleProcess, ctx));\n  }\n  function handleMessageFlow(messageFlow, context) {\n    visitIfDi(messageFlow, context);\n  }\n  function handleMessageFlows(messageFlows, context) {\n    forEach(messageFlows, contextual(handleMessageFlow, context));\n  }\n  function handleDataAssociation(association, context) {\n    visitIfDi(association, context);\n  }\n  function handleDataInput(dataInput, context) {\n    visitIfDi(dataInput, context);\n  }\n  function handleDataOutput(dataOutput, context) {\n    visitIfDi(dataOutput, context);\n  }\n  function handleArtifact(artifact, context) {\n    // bpmn:TextAnnotation\n    // bpmn:Group\n    // bpmn:Association\n\n    visitIfDi(artifact, context);\n  }\n  function handleArtifacts(artifacts, context) {\n    forEach(artifacts, function (e) {\n      if (is(e, 'bpmn:Association')) {\n        deferred.push(function () {\n          handleArtifact(e, context);\n        });\n      } else {\n        handleArtifact(e, context);\n      }\n    });\n  }\n  function handleIoSpecification(ioSpecification, context) {\n    if (!ioSpecification) {\n      return;\n    }\n    forEach(ioSpecification.dataInputs, contextual(handleDataInput, context));\n    forEach(ioSpecification.dataOutputs, contextual(handleDataOutput, context));\n  }\n  function handleSubProcess(subProcess, context) {\n    handleFlowElementsContainer(subProcess, context);\n    handleArtifacts(subProcess.artifacts, context);\n  }\n  function handleFlowNode(flowNode, context) {\n    var childCtx = visitIfDi(flowNode, context);\n    if (is(flowNode, 'bpmn:SubProcess')) {\n      handleSubProcess(flowNode, childCtx || context);\n    }\n    if (is(flowNode, 'bpmn:Activity')) {\n      handleIoSpecification(flowNode.ioSpecification, context);\n    }\n\n    // defer handling of associations\n    // affected types:\n    //\n    //   * bpmn:Activity\n    //   * bpmn:ThrowEvent\n    //   * bpmn:CatchEvent\n    //\n    deferred.push(function () {\n      forEach(flowNode.dataInputAssociations, contextual(handleDataAssociation, context));\n      forEach(flowNode.dataOutputAssociations, contextual(handleDataAssociation, context));\n    });\n  }\n  function handleSequenceFlow(sequenceFlow, context) {\n    visitIfDi(sequenceFlow, context);\n  }\n  function handleDataElement(dataObject, context) {\n    visitIfDi(dataObject, context);\n  }\n  function handleLane(lane, context) {\n    deferred.push(function () {\n      var newContext = visitIfDi(lane, context);\n      if (lane.childLaneSet) {\n        handleLaneSet(lane.childLaneSet, newContext || context);\n      }\n      wireFlowNodeRefs(lane);\n    });\n  }\n  function handleLaneSet(laneSet, context) {\n    forEach(laneSet.lanes, contextual(handleLane, context));\n  }\n  function handleLaneSets(laneSets, context) {\n    forEach(laneSets, contextual(handleLaneSet, context));\n  }\n  function handleFlowElementsContainer(container, context) {\n    handleFlowElements(container.flowElements, context);\n    if (container.laneSets) {\n      handleLaneSets(container.laneSets, context);\n    }\n  }\n  function handleFlowElements(flowElements, context) {\n    forEach(flowElements, function (e) {\n      if (is(e, 'bpmn:SequenceFlow')) {\n        deferred.push(function () {\n          handleSequenceFlow(e, context);\n        });\n      } else if (is(e, 'bpmn:BoundaryEvent')) {\n        deferred.unshift(function () {\n          handleFlowNode(e, context);\n        });\n      } else if (is(e, 'bpmn:FlowNode')) {\n        handleFlowNode(e, context);\n      } else if (is(e, 'bpmn:DataObject')) {\n\n        // SKIP (assume correct referencing via DataObjectReference)\n      } else if (is(e, 'bpmn:DataStoreReference')) {\n        handleDataElement(e, context);\n      } else if (is(e, 'bpmn:DataObjectReference')) {\n        handleDataElement(e, context);\n      } else {\n        logError(translate('unrecognized flowElement {element} in context {context}', {\n          element: elementToString(e),\n          context: context ? elementToString(context.businessObject) : 'null'\n        }), {\n          element: e,\n          context: context\n        });\n      }\n    });\n  }\n  function handleParticipant(participant, context) {\n    var newCtx = visitIfDi(participant, context);\n    var process = participant.processRef;\n    if (process) {\n      handleProcess(process, newCtx || context);\n    }\n  }\n  function handleCollaboration(collaboration) {\n    forEach(collaboration.participants, contextual(handleParticipant));\n    handleArtifacts(collaboration.artifacts);\n\n    // handle message flows latest in the process\n    deferred.push(function () {\n      handleMessageFlows(collaboration.messageFlows);\n    });\n  }\n  function wireFlowNodeRefs(lane) {\n    // wire the virtual flowNodeRefs <-> relationship\n    forEach(lane.flowNodeRef, function (flowNode) {\n      var lanes = flowNode.get('lanes');\n      if (lanes) {\n        lanes.push(lane);\n      }\n    });\n  }\n\n  // API //////////////////////\n\n  return {\n    handleDeferred: handleDeferred,\n    handleDefinitions: handleDefinitions,\n    handleSubProcess: handleSubProcess,\n    registerDi: registerDi\n  };\n}","map":{"version":3,"names":["filter","find","forEach","Refs","elementToString","diRefs","name","enumerable","configurable","is","element","type","$instanceOf","findDisplayCandidate","definitions","rootElements","e","BpmnTreeWalker","handler","translate","handledElements","deferred","contextual","fn","ctx","handled","id","isHandled","visit","gfx","Error","visitRoot","diagram","root","visitIfDi","di","logError","message","error","console","context","registerDi","bpmnElement","bind","handleDiagram","handlePlane","plane","planeElement","handlePlaneElement","handleDefinitions","diagrams","indexOf","length","rootElement","handleProcess","handleCollaboration","handleUnhandledProcesses","handleDeferred","shift","process","handleFlowElementsContainer","handleIoSpecification","ioSpecification","handleArtifacts","artifacts","processes","laneSets","handleMessageFlow","messageFlow","handleMessageFlows","messageFlows","handleDataAssociation","association","handleDataInput","dataInput","handleDataOutput","dataOutput","handleArtifact","artifact","push","dataInputs","dataOutputs","handleSubProcess","subProcess","handleFlowNode","flowNode","childCtx","dataInputAssociations","dataOutputAssociations","handleSequenceFlow","sequenceFlow","handleDataElement","dataObject","handleLane","lane","newContext","childLaneSet","handleLaneSet","wireFlowNodeRefs","laneSet","lanes","handleLaneSets","container","handleFlowElements","flowElements","unshift","businessObject","handleParticipant","participant","newCtx","processRef","collaboration","participants","flowNodeRef","get"],"sources":["C:/Users/KondalaRaoThota/Truviq_Camunda/camunda-react/node_modules/bpmn-js/lib/import/BpmnTreeWalker.js"],"sourcesContent":["import {\n  filter,\n  find,\n  forEach\n} from 'min-dash';\n\nimport Refs from 'object-refs';\n\nimport {\n  elementToString\n} from './Util';\n\nvar diRefs = new Refs(\n  { name: 'bpmnElement', enumerable: true },\n  { name: 'di', configurable: true }\n);\n\n/**\n * Returns true if an element has the given meta-model type\n *\n * @param  {ModdleElement}  element\n * @param  {string}         type\n *\n * @return {boolean}\n */\nfunction is(element, type) {\n  return element.$instanceOf(type);\n}\n\n\n/**\n * Find a suitable display candidate for definitions where the DI does not\n * correctly specify one.\n */\nfunction findDisplayCandidate(definitions) {\n  return find(definitions.rootElements, function(e) {\n    return is(e, 'bpmn:Process') || is(e, 'bpmn:Collaboration');\n  });\n}\n\n\nexport default function BpmnTreeWalker(handler, translate) {\n\n  // list of containers already walked\n  var handledElements = {};\n\n  // list of elements to handle deferred to ensure\n  // prerequisites are drawn\n  var deferred = [];\n\n  // Helpers //////////////////////\n\n  function contextual(fn, ctx) {\n    return function(e) {\n      fn(e, ctx);\n    };\n  }\n\n  function handled(element) {\n    handledElements[element.id] = element;\n  }\n\n  function isHandled(element) {\n    return handledElements[element.id];\n  }\n\n  function visit(element, ctx) {\n\n    var gfx = element.gfx;\n\n    // avoid multiple rendering of elements\n    if (gfx) {\n      throw new Error(\n        translate('already rendered {element}', { element: elementToString(element) })\n      );\n    }\n\n    // call handler\n    return handler.element(element, ctx);\n  }\n\n  function visitRoot(element, diagram) {\n    return handler.root(element, diagram);\n  }\n\n  function visitIfDi(element, ctx) {\n\n    try {\n      var gfx = element.di && visit(element, ctx);\n\n      handled(element);\n\n      return gfx;\n    } catch (e) {\n      logError(e.message, { element: element, error: e });\n\n      console.error(translate('failed to import {element}', { element: elementToString(element) }));\n      console.error(e);\n    }\n  }\n\n  function logError(message, context) {\n    handler.error(message, context);\n  }\n\n  // DI handling //////////////////////\n\n  function registerDi(di) {\n    var bpmnElement = di.bpmnElement;\n\n    if (bpmnElement) {\n      if (bpmnElement.di) {\n        logError(\n          translate('multiple DI elements defined for {element}', {\n            element: elementToString(bpmnElement)\n          }),\n          { element: bpmnElement }\n        );\n      } else {\n        diRefs.bind(bpmnElement, 'di');\n        bpmnElement.di = di;\n      }\n    } else {\n      logError(\n        translate('no bpmnElement referenced in {element}', {\n          element: elementToString(di)\n        }),\n        { element: di }\n      );\n    }\n  }\n\n  function handleDiagram(diagram) {\n    handlePlane(diagram.plane);\n  }\n\n  function handlePlane(plane) {\n    registerDi(plane);\n\n    forEach(plane.planeElement, handlePlaneElement);\n  }\n\n  function handlePlaneElement(planeElement) {\n    registerDi(planeElement);\n  }\n\n\n  // Semantic handling //////////////////////\n\n  /**\n   * Handle definitions and return the rendered diagram (if any)\n   *\n   * @param {ModdleElement} definitions to walk and import\n   * @param {ModdleElement} [diagram] specific diagram to import and display\n   *\n   * @throws {Error} if no diagram to display could be found\n   */\n  function handleDefinitions(definitions, diagram) {\n\n    // make sure we walk the correct bpmnElement\n\n    var diagrams = definitions.diagrams;\n\n    if (diagram && diagrams.indexOf(diagram) === -1) {\n      throw new Error(translate('diagram not part of bpmn:Definitions'));\n    }\n\n    if (!diagram && diagrams && diagrams.length) {\n      diagram = diagrams[0];\n    }\n\n    // no diagram -> nothing to import\n    if (!diagram) {\n      throw new Error(translate('no diagram to display'));\n    }\n\n    // load DI from selected diagram only\n    handleDiagram(diagram);\n\n\n    var plane = diagram.plane;\n\n    if (!plane) {\n      throw new Error(translate(\n        'no plane for {element}',\n        { element: elementToString(diagram) }\n      ));\n    }\n\n    var rootElement = plane.bpmnElement;\n\n    // ensure we default to a suitable display candidate (process or collaboration),\n    // even if non is specified in DI\n    if (!rootElement) {\n      rootElement = findDisplayCandidate(definitions);\n\n      if (!rootElement) {\n        throw new Error(translate('no process or collaboration to display'));\n      } else {\n\n        logError(\n          translate('correcting missing bpmnElement on {plane} to {rootElement}', {\n            plane: elementToString(plane),\n            rootElement: elementToString(rootElement)\n          })\n        );\n\n        // correct DI on the fly\n        plane.bpmnElement = rootElement;\n        registerDi(plane);\n      }\n    }\n\n\n    var ctx = visitRoot(rootElement, plane);\n\n    if (is(rootElement, 'bpmn:Process')) {\n      handleProcess(rootElement, ctx);\n    } else if (is(rootElement, 'bpmn:Collaboration')) {\n      handleCollaboration(rootElement, ctx);\n\n      // force drawing of everything not yet drawn that is part of the target DI\n      handleUnhandledProcesses(definitions.rootElements, ctx);\n    } else {\n      throw new Error(\n        translate('unsupported bpmnElement for {plane}: {rootElement}', {\n          plane: elementToString(plane),\n          rootElement: elementToString(rootElement)\n        })\n      );\n    }\n\n    // handle all deferred elements\n    handleDeferred(deferred);\n  }\n\n  function handleDeferred() {\n\n    var fn;\n\n    // drain deferred until empty\n    while (deferred.length) {\n      fn = deferred.shift();\n\n      fn();\n    }\n  }\n\n  function handleProcess(process, context) {\n    handleFlowElementsContainer(process, context);\n    handleIoSpecification(process.ioSpecification, context);\n\n    handleArtifacts(process.artifacts, context);\n\n    // log process handled\n    handled(process);\n  }\n\n  function handleUnhandledProcesses(rootElements, ctx) {\n\n    // walk through all processes that have not yet been drawn and draw them\n    // if they contain lanes with DI information.\n    // we do this to pass the free-floating lane test cases in the MIWG test suite\n    var processes = filter(rootElements, function(e) {\n      return !isHandled(e) && is(e, 'bpmn:Process') && e.laneSets;\n    });\n\n    processes.forEach(contextual(handleProcess, ctx));\n  }\n\n  function handleMessageFlow(messageFlow, context) {\n    visitIfDi(messageFlow, context);\n  }\n\n  function handleMessageFlows(messageFlows, context) {\n    forEach(messageFlows, contextual(handleMessageFlow, context));\n  }\n\n  function handleDataAssociation(association, context) {\n    visitIfDi(association, context);\n  }\n\n  function handleDataInput(dataInput, context) {\n    visitIfDi(dataInput, context);\n  }\n\n  function handleDataOutput(dataOutput, context) {\n    visitIfDi(dataOutput, context);\n  }\n\n  function handleArtifact(artifact, context) {\n\n    // bpmn:TextAnnotation\n    // bpmn:Group\n    // bpmn:Association\n\n    visitIfDi(artifact, context);\n  }\n\n  function handleArtifacts(artifacts, context) {\n\n    forEach(artifacts, function(e) {\n      if (is(e, 'bpmn:Association')) {\n        deferred.push(function() {\n          handleArtifact(e, context);\n        });\n      } else {\n        handleArtifact(e, context);\n      }\n    });\n  }\n\n  function handleIoSpecification(ioSpecification, context) {\n\n    if (!ioSpecification) {\n      return;\n    }\n\n    forEach(ioSpecification.dataInputs, contextual(handleDataInput, context));\n    forEach(ioSpecification.dataOutputs, contextual(handleDataOutput, context));\n  }\n\n  function handleSubProcess(subProcess, context) {\n    handleFlowElementsContainer(subProcess, context);\n    handleArtifacts(subProcess.artifacts, context);\n  }\n\n  function handleFlowNode(flowNode, context) {\n    var childCtx = visitIfDi(flowNode, context);\n\n    if (is(flowNode, 'bpmn:SubProcess')) {\n      handleSubProcess(flowNode, childCtx || context);\n    }\n\n    if (is(flowNode, 'bpmn:Activity')) {\n      handleIoSpecification(flowNode.ioSpecification, context);\n    }\n\n    // defer handling of associations\n    // affected types:\n    //\n    //   * bpmn:Activity\n    //   * bpmn:ThrowEvent\n    //   * bpmn:CatchEvent\n    //\n    deferred.push(function() {\n      forEach(flowNode.dataInputAssociations, contextual(handleDataAssociation, context));\n      forEach(flowNode.dataOutputAssociations, contextual(handleDataAssociation, context));\n    });\n  }\n\n  function handleSequenceFlow(sequenceFlow, context) {\n    visitIfDi(sequenceFlow, context);\n  }\n\n  function handleDataElement(dataObject, context) {\n    visitIfDi(dataObject, context);\n  }\n\n  function handleLane(lane, context) {\n\n    deferred.push(function() {\n\n      var newContext = visitIfDi(lane, context);\n\n      if (lane.childLaneSet) {\n        handleLaneSet(lane.childLaneSet, newContext || context);\n      }\n\n      wireFlowNodeRefs(lane);\n    });\n  }\n\n  function handleLaneSet(laneSet, context) {\n    forEach(laneSet.lanes, contextual(handleLane, context));\n  }\n\n  function handleLaneSets(laneSets, context) {\n    forEach(laneSets, contextual(handleLaneSet, context));\n  }\n\n  function handleFlowElementsContainer(container, context) {\n    handleFlowElements(container.flowElements, context);\n\n    if (container.laneSets) {\n      handleLaneSets(container.laneSets, context);\n    }\n  }\n\n  function handleFlowElements(flowElements, context) {\n    forEach(flowElements, function(e) {\n      if (is(e, 'bpmn:SequenceFlow')) {\n        deferred.push(function() {\n          handleSequenceFlow(e, context);\n        });\n      } else if (is(e, 'bpmn:BoundaryEvent')) {\n        deferred.unshift(function() {\n          handleFlowNode(e, context);\n        });\n      } else if (is(e, 'bpmn:FlowNode')) {\n        handleFlowNode(e, context);\n      } else if (is(e, 'bpmn:DataObject')) {\n\n        // SKIP (assume correct referencing via DataObjectReference)\n      } else if (is(e, 'bpmn:DataStoreReference')) {\n        handleDataElement(e, context);\n      } else if (is(e, 'bpmn:DataObjectReference')) {\n        handleDataElement(e, context);\n      } else {\n        logError(\n          translate('unrecognized flowElement {element} in context {context}', {\n            element: elementToString(e),\n            context: (context ? elementToString(context.businessObject) : 'null')\n          }),\n          { element: e, context: context }\n        );\n      }\n    });\n  }\n\n  function handleParticipant(participant, context) {\n    var newCtx = visitIfDi(participant, context);\n\n    var process = participant.processRef;\n    if (process) {\n      handleProcess(process, newCtx || context);\n    }\n  }\n\n  function handleCollaboration(collaboration) {\n\n    forEach(collaboration.participants, contextual(handleParticipant));\n\n    handleArtifacts(collaboration.artifacts);\n\n    // handle message flows latest in the process\n    deferred.push(function() {\n      handleMessageFlows(collaboration.messageFlows);\n    });\n  }\n\n\n  function wireFlowNodeRefs(lane) {\n\n    // wire the virtual flowNodeRefs <-> relationship\n    forEach(lane.flowNodeRef, function(flowNode) {\n      var lanes = flowNode.get('lanes');\n\n      if (lanes) {\n        lanes.push(lane);\n      }\n    });\n  }\n\n  // API //////////////////////\n\n  return {\n    handleDeferred: handleDeferred,\n    handleDefinitions: handleDefinitions,\n    handleSubProcess: handleSubProcess,\n    registerDi: registerDi\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}