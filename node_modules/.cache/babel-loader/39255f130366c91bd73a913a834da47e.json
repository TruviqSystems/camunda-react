{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, useKeyOnly } from '../../lib';\n\n/**\r\n * Used in some Button types, such as `animated`.\r\n */\nfunction ButtonContent(props) {\n  var children = props.children,\n    className = props.className,\n    content = props.content,\n    hidden = props.hidden,\n    visible = props.visible;\n  var classes = cx(useKeyOnly(visible, 'visible'), useKeyOnly(hidden, 'hidden'), 'content', className);\n  var rest = getUnhandledProps(ButtonContent, props);\n  var ElementType = getElementType(ButtonContent, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\nButtonContent.handledProps = ['as', 'children', 'className', 'content', 'hidden', 'visible'];\nButtonContent._meta = {\n  name: 'ButtonContent',\n  parent: 'Button',\n  type: META.TYPES.ELEMENT\n};\nButtonContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n  /** Initially hidden, visible on hover. */\n  hidden: PropTypes.bool,\n  /** Initially visible, hidden on hover. */\n  visible: PropTypes.bool\n} : {};\nexport default ButtonContent;","map":{"version":3,"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","META","useKeyOnly","ButtonContent","props","children","className","content","hidden","visible","classes","rest","ElementType","createElement","isNil","handledProps","_meta","name","parent","type","TYPES","ELEMENT","propTypes","process","env","NODE_ENV","as","node","string","contentShorthand","bool"],"sources":["C:/Users/sam/final/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/elements/Button/ButtonContent.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\r\nimport cx from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, META, useKeyOnly } from '../../lib';\r\n\r\n/**\r\n * Used in some Button types, such as `animated`.\r\n */\r\nfunction ButtonContent(props) {\r\n  var children = props.children,\r\n      className = props.className,\r\n      content = props.content,\r\n      hidden = props.hidden,\r\n      visible = props.visible;\r\n\r\n  var classes = cx(useKeyOnly(visible, 'visible'), useKeyOnly(hidden, 'hidden'), 'content', className);\r\n  var rest = getUnhandledProps(ButtonContent, props);\r\n  var ElementType = getElementType(ButtonContent, props);\r\n\r\n  return React.createElement(\r\n    ElementType,\r\n    _extends({}, rest, { className: classes }),\r\n    childrenUtils.isNil(children) ? content : children\r\n  );\r\n}\r\n\r\nButtonContent.handledProps = ['as', 'children', 'className', 'content', 'hidden', 'visible'];\r\nButtonContent._meta = {\r\n  name: 'ButtonContent',\r\n  parent: 'Button',\r\n  type: META.TYPES.ELEMENT\r\n};\r\n\r\nButtonContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: customPropTypes.as,\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** Shorthand for primary content. */\r\n  content: customPropTypes.contentShorthand,\r\n\r\n  /** Initially hidden, visible on hover. */\r\n  hidden: PropTypes.bool,\r\n\r\n  /** Initially visible, hidden on hover. */\r\n  visible: PropTypes.bool\r\n} : {};\r\n\r\nexport default ButtonContent;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,+BAA+B;AACpD,OAAOC,EAAE,MAAM,YAAY;AAC3B,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,aAAa,EAAEC,eAAe,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,IAAI,EAAEC,UAAU,QAAQ,WAAW;;AAE/G;AACA;AACA;AACA,SAASC,aAAaA,CAACC,KAAK,EAAE;EAC5B,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;IACzBC,SAAS,GAAGF,KAAK,CAACE,SAAS;IAC3BC,OAAO,GAAGH,KAAK,CAACG,OAAO;IACvBC,MAAM,GAAGJ,KAAK,CAACI,MAAM;IACrBC,OAAO,GAAGL,KAAK,CAACK,OAAO;EAE3B,IAAIC,OAAO,GAAGhB,EAAE,CAACQ,UAAU,CAACO,OAAO,EAAE,SAAS,CAAC,EAAEP,UAAU,CAACM,MAAM,EAAE,QAAQ,CAAC,EAAE,SAAS,EAAEF,SAAS,CAAC;EACpG,IAAIK,IAAI,GAAGX,iBAAiB,CAACG,aAAa,EAAEC,KAAK,CAAC;EAClD,IAAIQ,WAAW,GAAGb,cAAc,CAACI,aAAa,EAAEC,KAAK,CAAC;EAEtD,OAAOR,KAAK,CAACiB,aAAa,CACxBD,WAAW,EACXnB,QAAQ,CAAC,CAAC,CAAC,EAAEkB,IAAI,EAAE;IAAEL,SAAS,EAAEI;EAAQ,CAAC,CAAC,EAC1Cb,aAAa,CAACiB,KAAK,CAACT,QAAQ,CAAC,GAAGE,OAAO,GAAGF,QAAQ,CACnD;AACH;AAEAF,aAAa,CAACY,YAAY,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,CAAC;AAC5FZ,aAAa,CAACa,KAAK,GAAG;EACpBC,IAAI,EAAE,eAAe;EACrBC,MAAM,EAAE,QAAQ;EAChBC,IAAI,EAAElB,IAAI,CAACmB,KAAK,CAACC;AACnB,CAAC;AAEDlB,aAAa,CAACmB,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAChE;EACAC,EAAE,EAAE5B,eAAe,CAAC4B,EAAE;EAEtB;EACArB,QAAQ,EAAEV,SAAS,CAACgC,IAAI;EAExB;EACArB,SAAS,EAAEX,SAAS,CAACiC,MAAM;EAE3B;EACArB,OAAO,EAAET,eAAe,CAAC+B,gBAAgB;EAEzC;EACArB,MAAM,EAAEb,SAAS,CAACmC,IAAI;EAEtB;EACArB,OAAO,EAAEd,SAAS,CAACmC;AACrB,CAAC,GAAG,CAAC,CAAC;AAEN,eAAe3B,aAAa"},"metadata":{},"sourceType":"module"}