{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\n\n/**\r\n * A column sub-component for Grid.\r\n */\nfunction GridColumn(props) {\n  var children = props.children,\n    className = props.className,\n    computer = props.computer,\n    color = props.color,\n    floated = props.floated,\n    largeScreen = props.largeScreen,\n    mobile = props.mobile,\n    only = props.only,\n    stretched = props.stretched,\n    tablet = props.tablet,\n    textAlign = props.textAlign,\n    verticalAlign = props.verticalAlign,\n    widescreen = props.widescreen,\n    width = props.width;\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\n  var rest = getUnhandledProps(GridColumn, props);\n  var ElementType = getElementType(GridColumn, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\nGridColumn.handledProps = ['as', 'children', 'className', 'color', 'computer', 'floated', 'largeScreen', 'mobile', 'only', 'stretched', 'tablet', 'textAlign', 'verticalAlign', 'widescreen', 'width'];\nGridColumn._meta = {\n  name: 'GridColumn',\n  parent: 'Grid',\n  type: META.TYPES.COLLECTION\n};\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** A grid column can be colored. */\n  color: PropTypes.oneOf(SUI.COLORS),\n  /** A column can specify a width for a computer. */\n  computer: PropTypes.oneOf(SUI.WIDTHS),\n  /** A column can sit flush against the left or right edge of a row. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n  /** A column can specify a width for a large screen device. */\n  largeScreen: PropTypes.oneOf(SUI.WIDTHS),\n  /** A column can specify a width for a mobile device. */\n  mobile: PropTypes.oneOf(SUI.WIDTHS),\n  /** A column can appear only for a specific device, or screen sizes. */\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\n  /** A column can stretch its contents to take up the entire grid or row height. */\n  stretched: PropTypes.bool,\n  /** A column can specify a width for a tablet device. */\n  tablet: PropTypes.oneOf(SUI.WIDTHS),\n  /** A column can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\n  /** A column can specify a width for a wide screen device. */\n  widescreen: PropTypes.oneOf(SUI.WIDTHS),\n  /** Represents width of column. */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\n  return {\n    children: children\n  };\n});\nexport default GridColumn;","map":{"version":3,"names":["_extends","cx","PropTypes","React","customPropTypes","createShorthandFactory","getElementType","getUnhandledProps","META","SUI","useKeyOnly","useMultipleProp","useTextAlignProp","useValueAndKey","useVerticalAlignProp","useWidthProp","GridColumn","props","children","className","computer","color","floated","largeScreen","mobile","only","stretched","tablet","textAlign","verticalAlign","widescreen","width","classes","rest","ElementType","createElement","handledProps","_meta","name","parent","type","TYPES","COLLECTION","propTypes","process","env","NODE_ENV","as","node","string","oneOf","COLORS","WIDTHS","FLOATS","multipleProp","VISIBILITY","bool","TEXT_ALIGNMENTS","VERTICAL_ALIGNMENTS","create"],"sources":["C:/Users/sam/final/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/collections/Grid/GridColumn.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\r\nimport cx from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport { customPropTypes, createShorthandFactory, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useMultipleProp, useTextAlignProp, useValueAndKey, useVerticalAlignProp, useWidthProp } from '../../lib';\r\n\r\n/**\r\n * A column sub-component for Grid.\r\n */\r\nfunction GridColumn(props) {\r\n  var children = props.children,\r\n      className = props.className,\r\n      computer = props.computer,\r\n      color = props.color,\r\n      floated = props.floated,\r\n      largeScreen = props.largeScreen,\r\n      mobile = props.mobile,\r\n      only = props.only,\r\n      stretched = props.stretched,\r\n      tablet = props.tablet,\r\n      textAlign = props.textAlign,\r\n      verticalAlign = props.verticalAlign,\r\n      widescreen = props.widescreen,\r\n      width = props.width;\r\n\r\n\r\n  var classes = cx(color, useKeyOnly(stretched, 'stretched'), useMultipleProp(only, 'only'), useTextAlignProp(textAlign), useValueAndKey(floated, 'floated'), useVerticalAlignProp(verticalAlign), useWidthProp(computer, 'wide computer'), useWidthProp(largeScreen, 'wide large screen'), useWidthProp(mobile, 'wide mobile'), useWidthProp(tablet, 'wide tablet'), useWidthProp(widescreen, 'wide widescreen'), useWidthProp(width, 'wide'), 'column', className);\r\n  var rest = getUnhandledProps(GridColumn, props);\r\n  var ElementType = getElementType(GridColumn, props);\r\n\r\n  return React.createElement(\r\n    ElementType,\r\n    _extends({}, rest, { className: classes }),\r\n    children\r\n  );\r\n}\r\n\r\nGridColumn.handledProps = ['as', 'children', 'className', 'color', 'computer', 'floated', 'largeScreen', 'mobile', 'only', 'stretched', 'tablet', 'textAlign', 'verticalAlign', 'widescreen', 'width'];\r\nGridColumn._meta = {\r\n  name: 'GridColumn',\r\n  parent: 'Grid',\r\n  type: META.TYPES.COLLECTION\r\n};\r\n\r\nGridColumn.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: customPropTypes.as,\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** A grid column can be colored. */\r\n  color: PropTypes.oneOf(SUI.COLORS),\r\n\r\n  /** A column can specify a width for a computer. */\r\n  computer: PropTypes.oneOf(SUI.WIDTHS),\r\n\r\n  /** A column can sit flush against the left or right edge of a row. */\r\n  floated: PropTypes.oneOf(SUI.FLOATS),\r\n\r\n  /** A column can specify a width for a large screen device. */\r\n  largeScreen: PropTypes.oneOf(SUI.WIDTHS),\r\n\r\n  /** A column can specify a width for a mobile device. */\r\n  mobile: PropTypes.oneOf(SUI.WIDTHS),\r\n\r\n  /** A column can appear only for a specific device, or screen sizes. */\r\n  only: customPropTypes.multipleProp(SUI.VISIBILITY),\r\n\r\n  /** A column can stretch its contents to take up the entire grid or row height. */\r\n  stretched: PropTypes.bool,\r\n\r\n  /** A column can specify a width for a tablet device. */\r\n  tablet: PropTypes.oneOf(SUI.WIDTHS),\r\n\r\n  /** A column can specify its text alignment. */\r\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\r\n\r\n  /** A column can specify its vertical alignment to have all its columns vertically centered. */\r\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS),\r\n\r\n  /** A column can specify a width for a wide screen device. */\r\n  widescreen: PropTypes.oneOf(SUI.WIDTHS),\r\n\r\n  /** Represents width of column. */\r\n  width: PropTypes.oneOf(SUI.WIDTHS)\r\n} : {};\r\n\r\nGridColumn.create = createShorthandFactory(GridColumn, function (children) {\r\n  return { children: children };\r\n});\r\n\r\nexport default GridColumn;"],"mappings":"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"},"metadata":{},"sourceType":"module"}