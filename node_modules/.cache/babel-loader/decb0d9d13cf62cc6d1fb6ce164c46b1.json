{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\nimport { getUnhandledProps, META } from '../../lib';\nimport Checkbox from '../../modules/Checkbox';\n\n/**\r\n * A Radio is sugar for <Checkbox radio />.\r\n * Useful for exclusive groups of sliders or toggles.\r\n * @see Checkbox\r\n * @see Form\r\n */\nfunction Radio(props) {\n  var slider = props.slider,\n    toggle = props.toggle,\n    type = props.type;\n  var rest = getUnhandledProps(Radio, props);\n  // const ElementType = getElementType(Radio, props)\n  // radio, slider, toggle are exclusive\n  // use an undefined radio if slider or toggle are present\n  var radio = !(slider || toggle) || undefined;\n  return React.createElement(Checkbox, _extends({}, rest, {\n    type: type,\n    radio: radio,\n    slider: slider,\n    toggle: toggle\n  }));\n}\nRadio.handledProps = ['slider', 'toggle', 'type'];\nRadio._meta = {\n  name: 'Radio',\n  type: META.TYPES.ADDON\n};\nRadio.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Format to emphasize the current selection state. */\n  slider: Checkbox.propTypes.slider,\n  /** Format to show an on or off choice. */\n  toggle: Checkbox.propTypes.toggle,\n  /** HTML input type, either checkbox or radio. */\n  type: Checkbox.propTypes.type\n} : {};\nRadio.defaultProps = {\n  type: 'radio'\n};\nexport default Radio;","map":{"version":3,"names":["_extends","React","getUnhandledProps","META","Checkbox","Radio","props","slider","toggle","type","rest","radio","undefined","createElement","handledProps","_meta","name","TYPES","ADDON","propTypes","process","env","NODE_ENV","defaultProps"],"sources":["C:/Users/sam/final/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/addons/Radio/Radio.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\r\nimport React from 'react';\r\n\r\nimport { getUnhandledProps, META } from '../../lib';\r\nimport Checkbox from '../../modules/Checkbox';\r\n\r\n/**\r\n * A Radio is sugar for <Checkbox radio />.\r\n * Useful for exclusive groups of sliders or toggles.\r\n * @see Checkbox\r\n * @see Form\r\n */\r\nfunction Radio(props) {\r\n  var slider = props.slider,\r\n      toggle = props.toggle,\r\n      type = props.type;\r\n\r\n  var rest = getUnhandledProps(Radio, props);\r\n  // const ElementType = getElementType(Radio, props)\r\n  // radio, slider, toggle are exclusive\r\n  // use an undefined radio if slider or toggle are present\r\n  var radio = !(slider || toggle) || undefined;\r\n\r\n  return React.createElement(Checkbox, _extends({}, rest, { type: type, radio: radio, slider: slider, toggle: toggle }));\r\n}\r\n\r\nRadio.handledProps = ['slider', 'toggle', 'type'];\r\nRadio._meta = {\r\n  name: 'Radio',\r\n  type: META.TYPES.ADDON\r\n};\r\n\r\nRadio.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** Format to emphasize the current selection state. */\r\n  slider: Checkbox.propTypes.slider,\r\n\r\n  /** Format to show an on or off choice. */\r\n  toggle: Checkbox.propTypes.toggle,\r\n\r\n  /** HTML input type, either checkbox or radio. */\r\n  type: Checkbox.propTypes.type\r\n} : {};\r\n\r\nRadio.defaultProps = {\r\n  type: 'radio'\r\n};\r\n\r\nexport default Radio;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,+BAA+B;AACpD,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,iBAAiB,EAAEC,IAAI,QAAQ,WAAW;AACnD,OAAOC,QAAQ,MAAM,wBAAwB;;AAE7C;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,KAAKA,CAACC,KAAK,EAAE;EACpB,IAAIC,MAAM,GAAGD,KAAK,CAACC,MAAM;IACrBC,MAAM,GAAGF,KAAK,CAACE,MAAM;IACrBC,IAAI,GAAGH,KAAK,CAACG,IAAI;EAErB,IAAIC,IAAI,GAAGR,iBAAiB,CAACG,KAAK,EAAEC,KAAK,CAAC;EAC1C;EACA;EACA;EACA,IAAIK,KAAK,GAAG,EAAEJ,MAAM,IAAIC,MAAM,CAAC,IAAII,SAAS;EAE5C,OAAOX,KAAK,CAACY,aAAa,CAACT,QAAQ,EAAEJ,QAAQ,CAAC,CAAC,CAAC,EAAEU,IAAI,EAAE;IAAED,IAAI,EAAEA,IAAI;IAAEE,KAAK,EAAEA,KAAK;IAAEJ,MAAM,EAAEA,MAAM;IAAEC,MAAM,EAAEA;EAAO,CAAC,CAAC,CAAC;AACxH;AAEAH,KAAK,CAACS,YAAY,GAAG,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,CAAC;AACjDT,KAAK,CAACU,KAAK,GAAG;EACZC,IAAI,EAAE,OAAO;EACbP,IAAI,EAAEN,IAAI,CAACc,KAAK,CAACC;AACnB,CAAC;AAEDb,KAAK,CAACc,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EACxD;EACAf,MAAM,EAAEH,QAAQ,CAACe,SAAS,CAACZ,MAAM;EAEjC;EACAC,MAAM,EAAEJ,QAAQ,CAACe,SAAS,CAACX,MAAM;EAEjC;EACAC,IAAI,EAAEL,QAAQ,CAACe,SAAS,CAACV;AAC3B,CAAC,GAAG,CAAC,CAAC;AAENJ,KAAK,CAACkB,YAAY,GAAG;EACnBd,IAAI,EAAE;AACR,CAAC;AAED,eAAeJ,KAAK"},"metadata":{},"sourceType":"module"}