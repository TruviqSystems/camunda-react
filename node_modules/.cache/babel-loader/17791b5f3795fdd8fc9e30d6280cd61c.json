{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _without from 'lodash/without';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useValueAndKey } from '../../lib';\nimport StatisticGroup from './StatisticGroup';\nimport StatisticLabel from './StatisticLabel';\nimport StatisticValue from './StatisticValue';\n\n/**\r\n * A statistic emphasizes the current value of an attribute.\r\n */\nfunction Statistic(props) {\n  var children = props.children,\n    className = props.className,\n    color = props.color,\n    content = props.content,\n    floated = props.floated,\n    horizontal = props.horizontal,\n    inverted = props.inverted,\n    label = props.label,\n    size = props.size,\n    text = props.text,\n    value = props.value;\n  var classes = cx('ui', color, size, useValueAndKey(floated, 'floated'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), 'statistic', className);\n  var rest = getUnhandledProps(Statistic, props);\n  var ElementType = getElementType(Statistic, props);\n  if (!childrenUtils.isNil(children)) return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n  if (!childrenUtils.isNil(content)) return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), content);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), StatisticValue.create(value, {\n    defaultProps: {\n      text: text\n    }\n  }), StatisticLabel.create(label));\n}\nStatistic.handledProps = ['as', 'children', 'className', 'color', 'content', 'floated', 'horizontal', 'inverted', 'label', 'size', 'text', 'value'];\nStatistic._meta = {\n  name: 'Statistic',\n  type: META.TYPES.VIEW\n};\nStatistic.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** A statistic can be formatted to be different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n  /** A statistic can sit to the left or right of other content. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n  /** A statistic can present its measurement horizontally. */\n  horizontal: PropTypes.bool,\n  /** A statistic can be formatted to fit on a dark background. */\n  inverted: PropTypes.bool,\n  /** Label content of the Statistic. */\n  label: customPropTypes.contentShorthand,\n  /** A statistic can vary in size. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'big', 'massive', 'medium')),\n  /** Format the StatisticValue with smaller font size to fit nicely beside number values. */\n  text: PropTypes.bool,\n  /** Value content of the Statistic. */\n  value: customPropTypes.contentShorthand\n} : {};\nStatistic.Group = StatisticGroup;\nStatistic.Label = StatisticLabel;\nStatistic.Value = StatisticValue;\nStatistic.create = createShorthandFactory(Statistic, function (content) {\n  return {\n    content: content\n  };\n});\nexport default Statistic;","map":{"version":3,"names":["_extends","_without","cx","PropTypes","React","childrenUtils","createShorthandFactory","customPropTypes","getElementType","getUnhandledProps","META","SUI","useKeyOnly","useValueAndKey","StatisticGroup","StatisticLabel","StatisticValue","Statistic","props","children","className","color","content","floated","horizontal","inverted","label","size","text","value","classes","rest","ElementType","isNil","createElement","create","defaultProps","handledProps","_meta","name","type","TYPES","VIEW","propTypes","process","env","NODE_ENV","as","node","string","oneOf","COLORS","contentShorthand","FLOATS","bool","SIZES","Group","Label","Value"],"sources":["C:/Users/sam/final/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/views/Statistic/Statistic.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\r\nimport _without from 'lodash/without';\r\nimport cx from 'classnames';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useValueAndKey } from '../../lib';\r\nimport StatisticGroup from './StatisticGroup';\r\nimport StatisticLabel from './StatisticLabel';\r\nimport StatisticValue from './StatisticValue';\r\n\r\n/**\r\n * A statistic emphasizes the current value of an attribute.\r\n */\r\nfunction Statistic(props) {\r\n  var children = props.children,\r\n      className = props.className,\r\n      color = props.color,\r\n      content = props.content,\r\n      floated = props.floated,\r\n      horizontal = props.horizontal,\r\n      inverted = props.inverted,\r\n      label = props.label,\r\n      size = props.size,\r\n      text = props.text,\r\n      value = props.value;\r\n\r\n\r\n  var classes = cx('ui', color, size, useValueAndKey(floated, 'floated'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), 'statistic', className);\r\n  var rest = getUnhandledProps(Statistic, props);\r\n  var ElementType = getElementType(Statistic, props);\r\n\r\n  if (!childrenUtils.isNil(children)) return React.createElement(\r\n    ElementType,\r\n    _extends({}, rest, { className: classes }),\r\n    children\r\n  );\r\n  if (!childrenUtils.isNil(content)) return React.createElement(\r\n    ElementType,\r\n    _extends({}, rest, { className: classes }),\r\n    content\r\n  );\r\n\r\n  return React.createElement(\r\n    ElementType,\r\n    _extends({}, rest, { className: classes }),\r\n    StatisticValue.create(value, {\r\n      defaultProps: { text: text }\r\n    }),\r\n    StatisticLabel.create(label)\r\n  );\r\n}\r\n\r\nStatistic.handledProps = ['as', 'children', 'className', 'color', 'content', 'floated', 'horizontal', 'inverted', 'label', 'size', 'text', 'value'];\r\nStatistic._meta = {\r\n  name: 'Statistic',\r\n  type: META.TYPES.VIEW\r\n};\r\n\r\nStatistic.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: customPropTypes.as,\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** A statistic can be formatted to be different colors. */\r\n  color: PropTypes.oneOf(SUI.COLORS),\r\n\r\n  /** Shorthand for primary content. */\r\n  content: customPropTypes.contentShorthand,\r\n\r\n  /** A statistic can sit to the left or right of other content. */\r\n  floated: PropTypes.oneOf(SUI.FLOATS),\r\n\r\n  /** A statistic can present its measurement horizontally. */\r\n  horizontal: PropTypes.bool,\r\n\r\n  /** A statistic can be formatted to fit on a dark background. */\r\n  inverted: PropTypes.bool,\r\n\r\n  /** Label content of the Statistic. */\r\n  label: customPropTypes.contentShorthand,\r\n\r\n  /** A statistic can vary in size. */\r\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'big', 'massive', 'medium')),\r\n\r\n  /** Format the StatisticValue with smaller font size to fit nicely beside number values. */\r\n  text: PropTypes.bool,\r\n\r\n  /** Value content of the Statistic. */\r\n  value: customPropTypes.contentShorthand\r\n} : {};\r\n\r\nStatistic.Group = StatisticGroup;\r\nStatistic.Label = StatisticLabel;\r\nStatistic.Value = StatisticValue;\r\n\r\nStatistic.create = createShorthandFactory(Statistic, function (content) {\r\n  return { content: content };\r\n});\r\n\r\nexport default Statistic;"],"mappings":"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"},"metadata":{},"sourceType":"module"}