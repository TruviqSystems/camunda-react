{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _without from \"lodash-es/without\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useValueAndKey } from '../../lib';\nimport StatisticGroup from './StatisticGroup';\nimport StatisticLabel from './StatisticLabel';\nimport StatisticValue from './StatisticValue';\n/**\r\n * A statistic emphasizes the current value of an attribute.\r\n */\n\nfunction Statistic(props) {\n  var children = props.children,\n    className = props.className,\n    color = props.color,\n    content = props.content,\n    floated = props.floated,\n    horizontal = props.horizontal,\n    inverted = props.inverted,\n    label = props.label,\n    size = props.size,\n    text = props.text,\n    value = props.value;\n  var classes = cx('ui', color, size, useValueAndKey(floated, 'floated'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), 'statistic', className);\n  var rest = getUnhandledProps(Statistic, props);\n  var ElementType = getElementType(Statistic, props);\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n  if (!childrenUtils.isNil(content)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), content);\n  }\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), StatisticValue.create(value, {\n    defaultProps: {\n      text: text\n    },\n    autoGenerateKey: false\n  }), StatisticLabel.create(label, {\n    autoGenerateKey: false\n  }));\n}\nStatistic.handledProps = [\"as\", \"children\", \"className\", \"color\", \"content\", \"floated\", \"horizontal\", \"inverted\", \"label\", \"size\", \"text\", \"value\"];\nStatistic.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** A statistic can be formatted to be different colors. */\n  color: PropTypes.oneOf(SUI.COLORS),\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n  /** A statistic can sit to the left or right of other content. */\n  floated: PropTypes.oneOf(SUI.FLOATS),\n  /** A statistic can present its measurement horizontally. */\n  horizontal: PropTypes.bool,\n  /** A statistic can be formatted to fit on a dark background. */\n  inverted: PropTypes.bool,\n  /** Label content of the Statistic. */\n  label: customPropTypes.contentShorthand,\n  /** A statistic can vary in size. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'big', 'massive', 'medium')),\n  /** Format the StatisticValue with smaller font size to fit nicely beside number values. */\n  text: PropTypes.bool,\n  /** Value content of the Statistic. */\n  value: customPropTypes.contentShorthand\n} : {};\nStatistic.Group = StatisticGroup;\nStatistic.Label = StatisticLabel;\nStatistic.Value = StatisticValue;\nStatistic.create = createShorthandFactory(Statistic, function (content) {\n  return {\n    content: content\n  };\n});\nexport default Statistic;","map":{"version":3,"names":["_extends","_without","cx","PropTypes","React","childrenUtils","createShorthandFactory","customPropTypes","getElementType","getUnhandledProps","SUI","useKeyOnly","useValueAndKey","StatisticGroup","StatisticLabel","StatisticValue","Statistic","props","children","className","color","content","floated","horizontal","inverted","label","size","text","value","classes","rest","ElementType","isNil","createElement","create","defaultProps","autoGenerateKey","handledProps","propTypes","process","env","NODE_ENV","as","elementType","node","string","oneOf","COLORS","contentShorthand","FLOATS","bool","SIZES","Group","Label","Value"],"sources":["C:/Users/sam/final/camunda-react/node_modules/semantic-ui-react/dist/es/views/Statistic/Statistic.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _without from \"lodash-es/without\";\r\nimport cx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { childrenUtils, createShorthandFactory, customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useValueAndKey } from '../../lib';\r\nimport StatisticGroup from './StatisticGroup';\r\nimport StatisticLabel from './StatisticLabel';\r\nimport StatisticValue from './StatisticValue';\r\n/**\r\n * A statistic emphasizes the current value of an attribute.\r\n */\r\n\r\nfunction Statistic(props) {\r\n  var children = props.children,\r\n      className = props.className,\r\n      color = props.color,\r\n      content = props.content,\r\n      floated = props.floated,\r\n      horizontal = props.horizontal,\r\n      inverted = props.inverted,\r\n      label = props.label,\r\n      size = props.size,\r\n      text = props.text,\r\n      value = props.value;\r\n  var classes = cx('ui', color, size, useValueAndKey(floated, 'floated'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), 'statistic', className);\r\n  var rest = getUnhandledProps(Statistic, props);\r\n  var ElementType = getElementType(Statistic, props);\r\n\r\n  if (!childrenUtils.isNil(children)) {\r\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\r\n      className: classes\r\n    }), children);\r\n  }\r\n\r\n  if (!childrenUtils.isNil(content)) {\r\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\r\n      className: classes\r\n    }), content);\r\n  }\r\n\r\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\r\n    className: classes\r\n  }), StatisticValue.create(value, {\r\n    defaultProps: {\r\n      text: text\r\n    },\r\n    autoGenerateKey: false\r\n  }), StatisticLabel.create(label, {\r\n    autoGenerateKey: false\r\n  }));\r\n}\r\n\r\nStatistic.handledProps = [\"as\", \"children\", \"className\", \"color\", \"content\", \"floated\", \"horizontal\", \"inverted\", \"label\", \"size\", \"text\", \"value\"];\r\nStatistic.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: PropTypes.elementType,\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** A statistic can be formatted to be different colors. */\r\n  color: PropTypes.oneOf(SUI.COLORS),\r\n\r\n  /** Shorthand for primary content. */\r\n  content: customPropTypes.contentShorthand,\r\n\r\n  /** A statistic can sit to the left or right of other content. */\r\n  floated: PropTypes.oneOf(SUI.FLOATS),\r\n\r\n  /** A statistic can present its measurement horizontally. */\r\n  horizontal: PropTypes.bool,\r\n\r\n  /** A statistic can be formatted to fit on a dark background. */\r\n  inverted: PropTypes.bool,\r\n\r\n  /** Label content of the Statistic. */\r\n  label: customPropTypes.contentShorthand,\r\n\r\n  /** A statistic can vary in size. */\r\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'big', 'massive', 'medium')),\r\n\r\n  /** Format the StatisticValue with smaller font size to fit nicely beside number values. */\r\n  text: PropTypes.bool,\r\n\r\n  /** Value content of the Statistic. */\r\n  value: customPropTypes.contentShorthand\r\n} : {};\r\nStatistic.Group = StatisticGroup;\r\nStatistic.Label = StatisticLabel;\r\nStatistic.Value = StatisticValue;\r\nStatistic.create = createShorthandFactory(Statistic, function (content) {\r\n  return {\r\n    content: content\r\n  };\r\n});\r\nexport default Statistic;"],"mappings":"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"},"metadata":{},"sourceType":"module"}