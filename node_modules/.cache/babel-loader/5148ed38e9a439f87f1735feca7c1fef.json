{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _without from 'lodash/without';\nimport _each from 'lodash/each';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getUnhandledProps, getElementType, META, SUI } from '../../lib';\nimport BreadcrumbDivider from './BreadcrumbDivider';\nimport BreadcrumbSection from './BreadcrumbSection';\n\n/**\n * A breadcrumb is used to show hierarchy between content.\n */\nfunction Breadcrumb(props) {\n  var children = props.children,\n    className = props.className,\n    divider = props.divider,\n    icon = props.icon,\n    sections = props.sections,\n    size = props.size;\n  var classes = cx('ui', size, 'breadcrumb', className);\n  var rest = getUnhandledProps(Breadcrumb, props);\n  var ElementType = getElementType(Breadcrumb, props);\n  if (!childrenUtils.isNil(children)) return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n  var childElements = [];\n  _each(sections, function (section, index) {\n    // section\n    var breadcrumbElement = BreadcrumbSection.create(section);\n    childElements.push(breadcrumbElement);\n\n    // divider\n    if (index !== sections.length - 1) {\n      var key = breadcrumbElement.key + '_divider' || JSON.stringify(section);\n      childElements.push(BreadcrumbDivider.create({\n        content: divider,\n        icon: icon,\n        key: key\n      }));\n    }\n  });\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childElements);\n}\nBreadcrumb.handledProps = ['as', 'children', 'className', 'divider', 'icon', 'sections', 'size'];\nBreadcrumb._meta = {\n  name: 'Breadcrumb',\n  type: META.TYPES.COLLECTION\n};\nBreadcrumb.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Shorthand for primary content of the Breadcrumb.Divider. */\n  divider: customPropTypes.every([customPropTypes.disallow(['icon']), customPropTypes.contentShorthand]),\n  /** For use with the sections prop. Render as an `Icon` component with `divider` class instead of a `div` in\n   *  Breadcrumb.Divider. */\n  icon: customPropTypes.every([customPropTypes.disallow(['divider']), customPropTypes.itemShorthand]),\n  /** Shorthand array of props for Breadcrumb.Section. */\n  sections: customPropTypes.collectionShorthand,\n  /** Size of Breadcrumb. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium'))\n} : {};\nBreadcrumb.Divider = BreadcrumbDivider;\nBreadcrumb.Section = BreadcrumbSection;\nexport default Breadcrumb;","map":{"version":3,"names":["_extends","_without","_each","cx","PropTypes","React","childrenUtils","customPropTypes","getUnhandledProps","getElementType","META","SUI","BreadcrumbDivider","BreadcrumbSection","Breadcrumb","props","children","className","divider","icon","sections","size","classes","rest","ElementType","isNil","createElement","childElements","section","index","breadcrumbElement","create","push","length","key","JSON","stringify","content","handledProps","_meta","name","type","TYPES","COLLECTION","propTypes","process","env","NODE_ENV","as","node","string","every","disallow","contentShorthand","itemShorthand","collectionShorthand","oneOf","SIZES","Divider","Section"],"sources":["C:/Users/KondalaRaoThota/Truviq_Camunda/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/collections/Breadcrumb/Breadcrumb.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\nimport _without from 'lodash/without';\nimport _each from 'lodash/each';\nimport cx from 'classnames';\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { childrenUtils, customPropTypes, getUnhandledProps, getElementType, META, SUI } from '../../lib';\nimport BreadcrumbDivider from './BreadcrumbDivider';\nimport BreadcrumbSection from './BreadcrumbSection';\n\n/**\n * A breadcrumb is used to show hierarchy between content.\n */\nfunction Breadcrumb(props) {\n  var children = props.children,\n      className = props.className,\n      divider = props.divider,\n      icon = props.icon,\n      sections = props.sections,\n      size = props.size;\n\n\n  var classes = cx('ui', size, 'breadcrumb', className);\n  var rest = getUnhandledProps(Breadcrumb, props);\n  var ElementType = getElementType(Breadcrumb, props);\n\n  if (!childrenUtils.isNil(children)) return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    children\n  );\n\n  var childElements = [];\n\n  _each(sections, function (section, index) {\n    // section\n    var breadcrumbElement = BreadcrumbSection.create(section);\n    childElements.push(breadcrumbElement);\n\n    // divider\n    if (index !== sections.length - 1) {\n      var key = breadcrumbElement.key + '_divider' || JSON.stringify(section);\n      childElements.push(BreadcrumbDivider.create({ content: divider, icon: icon, key: key }));\n    }\n  });\n\n  return React.createElement(\n    ElementType,\n    _extends({}, rest, { className: classes }),\n    childElements\n  );\n}\n\nBreadcrumb.handledProps = ['as', 'children', 'className', 'divider', 'icon', 'sections', 'size'];\nBreadcrumb._meta = {\n  name: 'Breadcrumb',\n  type: META.TYPES.COLLECTION\n};\n\nBreadcrumb.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Shorthand for primary content of the Breadcrumb.Divider. */\n  divider: customPropTypes.every([customPropTypes.disallow(['icon']), customPropTypes.contentShorthand]),\n\n  /** For use with the sections prop. Render as an `Icon` component with `divider` class instead of a `div` in\n   *  Breadcrumb.Divider. */\n  icon: customPropTypes.every([customPropTypes.disallow(['divider']), customPropTypes.itemShorthand]),\n\n  /** Shorthand array of props for Breadcrumb.Section. */\n  sections: customPropTypes.collectionShorthand,\n\n  /** Size of Breadcrumb. */\n  size: PropTypes.oneOf(_without(SUI.SIZES, 'medium'))\n} : {};\n\nBreadcrumb.Divider = BreadcrumbDivider;\nBreadcrumb.Section = BreadcrumbSection;\n\nexport default Breadcrumb;"],"mappings":"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"},"metadata":{},"sourceType":"module"}