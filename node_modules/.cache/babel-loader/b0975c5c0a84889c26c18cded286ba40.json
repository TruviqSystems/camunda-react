{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KondalaRaoThota\\\\Truviq_Camunda\\\\camunda-react\\\\src\\\\components\\\\GenericForm.js\";\nimport React, { Component } from 'react';\nimport * as FormTypes from './forms';\nimport { completeTask, startProcessInstance, loadTaskVariables } from '../actions';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass GenericForm extends Component {\n  componentDidUpdate(prevProps, prevState) {\n    if (!this.state || !this.state.loading) {\n      this.loadExistingVariables();\n    }\n  }\n  render() {\n    const {\n      formKey,\n      processDefinitionKey,\n      taskId\n    } = this.props;\n    const Form = FormTypes[processDefinitionKey][formKey];\n    if (taskId == null) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generic-form\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: (values, dispatch) => this.handleStartInstance(values, dispatch)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generic-form\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: (values, dispatch) => this.handleComplete(values, dispatch)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this);\n    }\n  }\n  loadExistingVariables() {\n    let {\n      form,\n      dispatch,\n      taskId\n    } = this.props;\n    if (form) {\n      this.setState({\n        loading: true\n      });\n      dispatch(loadTaskVariables(taskId, form.registeredFields));\n    }\n  }\n  handleComplete(values, dispatch) {\n    values = this.getBody(values);\n    return dispatch(completeTask(this.props.taskId, values));\n  }\n  handleStartInstance(values, dispatch) {\n    values = this.getBody(values);\n    return dispatch(startProcessInstance(this.props.processDefinitionKey, values));\n  }\n  getBody(values) {\n    let variables = {};\n    Object.keys(values).forEach(item => {\n      variables[item] = {\n        'value': values[item]\n      };\n    });\n    return {\n      'variables': variables\n    };\n  }\n}\nexport default connect(state => ({}))(GenericForm);","map":{"version":3,"names":["React","Component","FormTypes","completeTask","startProcessInstance","loadTaskVariables","connect","jsxDEV","_jsxDEV","GenericForm","componentDidUpdate","prevProps","prevState","state","loading","loadExistingVariables","render","formKey","processDefinitionKey","taskId","props","Form","className","children","onSubmit","values","dispatch","handleStartInstance","fileName","_jsxFileName","lineNumber","columnNumber","handleComplete","form","setState","registeredFields","getBody","variables","Object","keys","forEach","item"],"sources":["C:/Users/KondalaRaoThota/Truviq_Camunda/camunda-react/src/components/GenericForm.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport * as FormTypes from './forms'\r\nimport { completeTask, startProcessInstance, loadTaskVariables } from '../actions'\r\nimport { connect } from 'react-redux'\r\n\r\nclass GenericForm extends Component {\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (!this.state || !this.state.loading) {\r\n      this.loadExistingVariables()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { formKey, processDefinitionKey, taskId } = this.props\r\n    const Form = FormTypes[processDefinitionKey][formKey]\r\n    if (taskId == null) {\r\n      return (\r\n        <div className=\"generic-form\">\r\n          <Form onSubmit={(values, dispatch) => this.handleStartInstance(values, dispatch)} />\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"generic-form\">\r\n          <Form onSubmit={(values, dispatch) => this.handleComplete(values, dispatch)} />\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n\r\n  loadExistingVariables() {\r\n    let { form, dispatch, taskId } = this.props\r\n    if (form) {\r\n      this.setState({ loading: true });\r\n      dispatch(loadTaskVariables(taskId, form.registeredFields))\r\n    }\r\n\r\n  }\r\n\r\n  handleComplete(values, dispatch) {\r\n    values = this.getBody(values)\r\n    return dispatch(completeTask(this.props.taskId, values))\r\n  }\r\n\r\n  handleStartInstance(values, dispatch) {\r\n    values = this.getBody(values)\r\n    return dispatch(startProcessInstance(this.props.processDefinitionKey, values))\r\n  }\r\n\r\n  getBody(values) {\r\n    let variables = {}\r\n    Object.keys(values).forEach((item) => {\r\n      variables[item] = {'value': values[item]}\r\n    });\r\n    return {\r\n      'variables': variables\r\n    }\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => ({})\r\n)(GenericForm)\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}