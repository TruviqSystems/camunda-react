{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KondalaRaoThota\\\\Truviq_Camunda\\\\camunda-react\\\\src\\\\components\\\\Taskform.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport GenericForm from '../components/GenericForm';\nimport { loadTaskFormKey, loadProcessDefinitions } from '../actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass TaskForm extends Component {\n  componentDidMount() {\n    this.props.loadTaskFormKey(this.props.taskId);\n    this.props.loadProcessDefinitions(this.props.processDefinitionId);\n  }\n  render() {\n    const {\n      taskId,\n      processDefinitionId,\n      formKey,\n      processDefinition,\n      redirect,\n      simpleForm\n    } = this.props;\n    if (redirect) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: redirect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this);\n    }\n    if (formKey && processDefinition && processDefinition[processDefinitionId] != null) {\n      const process = processDefinition[processDefinitionId].key;\n      const key = formKey['undefined'].key;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(GenericForm, {\n          form: simpleForm,\n          taskId: taskId,\n          formKey: key,\n          processDefinitionKey: process\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    }\n  }\n}\nconst mapStateToProps = (state, ownProps) => {\n  const params = ownProps.match.params;\n  return {\n    ...params,\n    ...state.entities,\n    ...state.form\n  };\n};\nexport default withRouter(connect(mapStateToProps, {\n  loadTaskFormKey,\n  loadProcessDefinitions\n})(TaskForm));","map":{"version":3,"names":["React","Component","connect","withRouter","Redirect","GenericForm","loadTaskFormKey","loadProcessDefinitions","jsxDEV","_jsxDEV","TaskForm","componentDidMount","props","taskId","processDefinitionId","render","formKey","processDefinition","redirect","simpleForm","to","fileName","_jsxFileName","lineNumber","columnNumber","process","key","children","form","processDefinitionKey","mapStateToProps","state","ownProps","params","match","entities"],"sources":["C:/Users/KondalaRaoThota/Truviq_Camunda/camunda-react/src/components/Taskform.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter, Redirect } from 'react-router-dom'\r\nimport GenericForm from '../components/GenericForm'\r\nimport { loadTaskFormKey, loadProcessDefinitions } from '../actions'\r\n\r\nclass TaskForm extends Component {\r\n  componentDidMount() {\r\n    this.props.loadTaskFormKey(this.props.taskId);\r\n    this.props.loadProcessDefinitions(this.props.processDefinitionId);\r\n  }\r\n\r\n  render() {\r\n\r\n    const { taskId, processDefinitionId, formKey, processDefinition, redirect, simpleForm } = this.props\r\n    if (redirect) {\r\n      return (\r\n        <Redirect to={redirect}/>\r\n      )\r\n    }\r\n    if (formKey && processDefinition && processDefinition[processDefinitionId] != null) {\r\n      const process = processDefinition[processDefinitionId].key\r\n      const key = formKey['undefined'].key\r\n      return (\r\n        <div>\r\n          <GenericForm form={simpleForm} taskId={taskId} formKey={key} processDefinitionKey={process} />\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div>\r\n          Loading Task\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  const params = ownProps.match.params\r\n  return {\r\n    ...params,\r\n    ...state.entities,\r\n    ...state.form\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, {\r\n  loadTaskFormKey,\r\n  loadProcessDefinitions\r\n})(TaskForm))\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,UAAU,EAAEC,QAAQ,QAAQ,kBAAkB;AACvD,OAAOC,WAAW,MAAM,2BAA2B;AACnD,SAASC,eAAe,EAAEC,sBAAsB,QAAQ,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpE,MAAMC,QAAQ,SAAST,SAAS,CAAC;EAC/BU,iBAAiBA,CAAA,EAAG;IAClB,IAAI,CAACC,KAAK,CAACN,eAAe,CAAC,IAAI,CAACM,KAAK,CAACC,MAAM,CAAC;IAC7C,IAAI,CAACD,KAAK,CAACL,sBAAsB,CAAC,IAAI,CAACK,KAAK,CAACE,mBAAmB,CAAC;EACnE;EAEAC,MAAMA,CAAA,EAAG;IAEP,MAAM;MAAEF,MAAM;MAAEC,mBAAmB;MAAEE,OAAO;MAAEC,iBAAiB;MAAEC,QAAQ;MAAEC;IAAW,CAAC,GAAG,IAAI,CAACP,KAAK;IACpG,IAAIM,QAAQ,EAAE;MACZ,oBACET,OAAA,CAACL,QAAQ;QAACgB,EAAE,EAAEF;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE;IAE7B;IACA,IAAIR,OAAO,IAAIC,iBAAiB,IAAIA,iBAAiB,CAACH,mBAAmB,CAAC,IAAI,IAAI,EAAE;MAClF,MAAMW,OAAO,GAAGR,iBAAiB,CAACH,mBAAmB,CAAC,CAACY,GAAG;MAC1D,MAAMA,GAAG,GAAGV,OAAO,CAAC,WAAW,CAAC,CAACU,GAAG;MACpC,oBACEjB,OAAA;QAAAkB,QAAA,eACElB,OAAA,CAACJ,WAAW;UAACuB,IAAI,EAAET,UAAW;UAACN,MAAM,EAAEA,MAAO;UAACG,OAAO,EAAEU,GAAI;UAACG,oBAAoB,EAAEJ;QAAQ;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAG;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC1F;IAEV,CAAC,MAAM;MACL,oBACEf,OAAA;QAAAkB,QAAA,EAAK;MAEL;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM;IAEV;EACF;AACF;AAEA,MAAMM,eAAe,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK;EAC3C,MAAMC,MAAM,GAAGD,QAAQ,CAACE,KAAK,CAACD,MAAM;EACpC,OAAO;IACL,GAAGA,MAAM;IACT,GAAGF,KAAK,CAACI,QAAQ;IACjB,GAAGJ,KAAK,CAACH;EACX,CAAC;AACH,CAAC;AAED,eAAezB,UAAU,CAACD,OAAO,CAAC4B,eAAe,EAAE;EACjDxB,eAAe;EACfC;AACF,CAAC,CAAC,CAACG,QAAQ,CAAC,CAAC"},"metadata":{},"sourceType":"module"}