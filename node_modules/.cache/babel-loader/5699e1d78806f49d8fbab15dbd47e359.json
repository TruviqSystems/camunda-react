{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n/**\r\n * A grid is used to harmonize negative space in a layout.\r\n */\n\nfunction Grid(props) {\n  var celled = props.celled,\n    centered = props.centered,\n    children = props.children,\n    className = props.className,\n    columns = props.columns,\n    container = props.container,\n    divided = props.divided,\n    doubling = props.doubling,\n    inverted = props.inverted,\n    padded = props.padded,\n    relaxed = props.relaxed,\n    reversed = props.reversed,\n    stackable = props.stackable,\n    stretched = props.stretched,\n    textAlign = props.textAlign,\n    verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf([].concat(SUI.WIDTHS, ['equal'])),\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;","map":{"version":3,"names":["_extends","cx","PropTypes","React","customPropTypes","getElementType","getUnhandledProps","SUI","useKeyOnly","useKeyOrValueAndKey","useMultipleProp","useTextAlignProp","useVerticalAlignProp","useWidthProp","GridColumn","GridRow","Grid","props","celled","centered","children","className","columns","container","divided","doubling","inverted","padded","relaxed","reversed","stackable","stretched","textAlign","verticalAlign","classes","rest","ElementType","createElement","handledProps","Column","Row","propTypes","process","env","NODE_ENV","as","elementType","oneOfType","bool","oneOf","node","string","concat","WIDTHS","multipleProp","TEXT_ALIGNMENTS","VERTICAL_ALIGNMENTS"],"sources":["C:/Users/sam/final/camunda-react/node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport cx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { customPropTypes, getElementType, getUnhandledProps, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\r\nimport GridColumn from './GridColumn';\r\nimport GridRow from './GridRow';\r\n/**\r\n * A grid is used to harmonize negative space in a layout.\r\n */\r\n\r\nfunction Grid(props) {\r\n  var celled = props.celled,\r\n      centered = props.centered,\r\n      children = props.children,\r\n      className = props.className,\r\n      columns = props.columns,\r\n      container = props.container,\r\n      divided = props.divided,\r\n      doubling = props.doubling,\r\n      inverted = props.inverted,\r\n      padded = props.padded,\r\n      relaxed = props.relaxed,\r\n      reversed = props.reversed,\r\n      stackable = props.stackable,\r\n      stretched = props.stretched,\r\n      textAlign = props.textAlign,\r\n      verticalAlign = props.verticalAlign;\r\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\r\n  var rest = getUnhandledProps(Grid, props);\r\n  var ElementType = getElementType(Grid, props);\r\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\r\n    className: classes\r\n  }), children);\r\n}\r\n\r\nGrid.handledProps = [\"as\", \"celled\", \"centered\", \"children\", \"className\", \"columns\", \"container\", \"divided\", \"doubling\", \"inverted\", \"padded\", \"relaxed\", \"reversed\", \"stackable\", \"stretched\", \"textAlign\", \"verticalAlign\"];\r\nGrid.Column = GridColumn;\r\nGrid.Row = GridRow;\r\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: PropTypes.elementType,\r\n\r\n  /** A grid can have rows divided into cells. */\r\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\r\n\r\n  /** A grid can have its columns centered. */\r\n  centered: PropTypes.bool,\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** Represents column count per row in Grid. */\r\n  columns: PropTypes.oneOf([].concat(SUI.WIDTHS, ['equal'])),\r\n\r\n  /** A grid can be combined with a container to use the available layout and alignment. */\r\n  container: PropTypes.bool,\r\n\r\n  /** A grid can have dividers between its columns. */\r\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\r\n\r\n  /** A grid can double its column width on tablet and mobile sizes. */\r\n  doubling: PropTypes.bool,\r\n\r\n  /** A grid's colors can be inverted. */\r\n  inverted: PropTypes.bool,\r\n\r\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\r\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\r\n\r\n  /** A grid can increase its gutters to allow for more negative space. */\r\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\r\n\r\n  /** A grid can specify that its columns should reverse order at different device sizes. */\r\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\r\n\r\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\r\n  stackable: PropTypes.bool,\r\n\r\n  /** A grid can stretch its contents to take up the entire grid height. */\r\n  stretched: PropTypes.bool,\r\n\r\n  /** A grid can specify its text alignment. */\r\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\r\n\r\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\r\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\r\n} : {};\r\nexport default Grid;"],"mappings":"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"},"metadata":{},"sourceType":"module"}