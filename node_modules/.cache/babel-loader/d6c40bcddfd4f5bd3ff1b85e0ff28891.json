{"ast":null,"code":"import _slicedToArray from 'babel-runtime/helpers/slicedToArray';\nimport _forEach from 'lodash/forEach';\nimport computeClassNames from './computeClassNames';\nimport computeClassNamesDifference from './computeClassNamesDifference';\nvar prevClassNames = new Map();\nvar handleClassNamesChange = function handleClassNamesChange(node, components) {\n  var currentClassNames = computeClassNames(components);\n  var _computeClassNamesDif = computeClassNamesDifference(prevClassNames.get(node), currentClassNames),\n    _computeClassNamesDif2 = _slicedToArray(_computeClassNamesDif, 2),\n    forAdd = _computeClassNamesDif2[0],\n    forRemoval = _computeClassNamesDif2[1];\n  _forEach(forAdd, function (className) {\n    return node.classList.add(className);\n  });\n  _forEach(forRemoval, function (className) {\n    return node.classList.remove(className);\n  });\n  prevClassNames.set(node, currentClassNames);\n};\nexport default handleClassNamesChange;","map":{"version":3,"names":["_slicedToArray","_forEach","computeClassNames","computeClassNamesDifference","prevClassNames","Map","handleClassNamesChange","node","components","currentClassNames","_computeClassNamesDif","get","_computeClassNamesDif2","forAdd","forRemoval","className","classList","add","remove","set"],"sources":["C:/Users/sam/final/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/addons/MountNode/lib/handleClassNamesChange.js"],"sourcesContent":["import _slicedToArray from 'babel-runtime/helpers/slicedToArray';\r\nimport _forEach from 'lodash/forEach';\r\n\r\n\r\nimport computeClassNames from './computeClassNames';\r\nimport computeClassNamesDifference from './computeClassNamesDifference';\r\n\r\nvar prevClassNames = new Map();\r\n\r\nvar handleClassNamesChange = function handleClassNamesChange(node, components) {\r\n  var currentClassNames = computeClassNames(components);\r\n\r\n  var _computeClassNamesDif = computeClassNamesDifference(prevClassNames.get(node), currentClassNames),\r\n      _computeClassNamesDif2 = _slicedToArray(_computeClassNamesDif, 2),\r\n      forAdd = _computeClassNamesDif2[0],\r\n      forRemoval = _computeClassNamesDif2[1];\r\n\r\n  _forEach(forAdd, function (className) {\r\n    return node.classList.add(className);\r\n  });\r\n  _forEach(forRemoval, function (className) {\r\n    return node.classList.remove(className);\r\n  });\r\n\r\n  prevClassNames.set(node, currentClassNames);\r\n};\r\n\r\nexport default handleClassNamesChange;"],"mappings":"AAAA,OAAOA,cAAc,MAAM,qCAAqC;AAChE,OAAOC,QAAQ,MAAM,gBAAgB;AAGrC,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAOC,2BAA2B,MAAM,+BAA+B;AAEvE,IAAIC,cAAc,GAAG,IAAIC,GAAG,EAAE;AAE9B,IAAIC,sBAAsB,GAAG,SAASA,sBAAsBA,CAACC,IAAI,EAAEC,UAAU,EAAE;EAC7E,IAAIC,iBAAiB,GAAGP,iBAAiB,CAACM,UAAU,CAAC;EAErD,IAAIE,qBAAqB,GAAGP,2BAA2B,CAACC,cAAc,CAACO,GAAG,CAACJ,IAAI,CAAC,EAAEE,iBAAiB,CAAC;IAChGG,sBAAsB,GAAGZ,cAAc,CAACU,qBAAqB,EAAE,CAAC,CAAC;IACjEG,MAAM,GAAGD,sBAAsB,CAAC,CAAC,CAAC;IAClCE,UAAU,GAAGF,sBAAsB,CAAC,CAAC,CAAC;EAE1CX,QAAQ,CAACY,MAAM,EAAE,UAAUE,SAAS,EAAE;IACpC,OAAOR,IAAI,CAACS,SAAS,CAACC,GAAG,CAACF,SAAS,CAAC;EACtC,CAAC,CAAC;EACFd,QAAQ,CAACa,UAAU,EAAE,UAAUC,SAAS,EAAE;IACxC,OAAOR,IAAI,CAACS,SAAS,CAACE,MAAM,CAACH,SAAS,CAAC;EACzC,CAAC,CAAC;EAEFX,cAAc,CAACe,GAAG,CAACZ,IAAI,EAAEE,iBAAiB,CAAC;AAC7C,CAAC;AAED,eAAeH,sBAAsB"},"metadata":{},"sourceType":"module"}