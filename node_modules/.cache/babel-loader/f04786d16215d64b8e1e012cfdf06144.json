{"ast":null,"code":"import _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\nimport _extends from 'babel-runtime/helpers/extends';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\nimport GridColumn from './GridColumn';\nimport GridRow from './GridRow';\n\n/**\r\n * A grid is used to harmonize negative space in a layout.\r\n */\nfunction Grid(props) {\n  var celled = props.celled,\n    centered = props.centered,\n    children = props.children,\n    className = props.className,\n    columns = props.columns,\n    container = props.container,\n    divided = props.divided,\n    doubling = props.doubling,\n    inverted = props.inverted,\n    padded = props.padded,\n    relaxed = props.relaxed,\n    reversed = props.reversed,\n    stackable = props.stackable,\n    stretched = props.stretched,\n    textAlign = props.textAlign,\n    verticalAlign = props.verticalAlign;\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\n  var rest = getUnhandledProps(Grid, props);\n  var ElementType = getElementType(Grid, props);\n  return React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), children);\n}\nGrid.handledProps = ['as', 'celled', 'centered', 'children', 'className', 'columns', 'container', 'divided', 'doubling', 'inverted', 'padded', 'relaxed', 'reversed', 'stackable', 'stretched', 'textAlign', 'verticalAlign'];\nGrid.Column = GridColumn;\nGrid.Row = GridRow;\nGrid._meta = {\n  name: 'Grid',\n  type: META.TYPES.COLLECTION\n};\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n  /** A grid can have rows divided into cells. */\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\n  /** A grid can have its columns centered. */\n  centered: PropTypes.bool,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Represents column count per row in Grid. */\n  columns: PropTypes.oneOf([].concat(_toConsumableArray(SUI.WIDTHS), ['equal'])),\n  /** A grid can be combined with a container to use the available layout and alignment. */\n  container: PropTypes.bool,\n  /** A grid can have dividers between its columns. */\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\n  /** A grid can double its column width on tablet and mobile sizes. */\n  doubling: PropTypes.bool,\n  /** A grid's colors can be inverted. */\n  inverted: PropTypes.bool,\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\n  /** A grid can increase its gutters to allow for more negative space. */\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\n  /** A grid can specify that its columns should reverse order at different device sizes. */\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\n  stackable: PropTypes.bool,\n  /** A grid can stretch its contents to take up the entire grid height. */\n  stretched: PropTypes.bool,\n  /** A grid can specify its text alignment. */\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default Grid;","map":{"version":3,"names":["_toConsumableArray","_extends","cx","PropTypes","React","customPropTypes","getElementType","getUnhandledProps","META","SUI","useKeyOnly","useKeyOrValueAndKey","useMultipleProp","useTextAlignProp","useVerticalAlignProp","useWidthProp","GridColumn","GridRow","Grid","props","celled","centered","children","className","columns","container","divided","doubling","inverted","padded","relaxed","reversed","stackable","stretched","textAlign","verticalAlign","classes","rest","ElementType","createElement","handledProps","Column","Row","_meta","name","type","TYPES","COLLECTION","propTypes","process","env","NODE_ENV","as","oneOfType","bool","oneOf","node","string","concat","WIDTHS","multipleProp","TEXT_ALIGNMENTS","VERTICAL_ALIGNMENTS"],"sources":["C:/Users/sam/final/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/collections/Grid/Grid.js"],"sourcesContent":["import _toConsumableArray from 'babel-runtime/helpers/toConsumableArray';\r\nimport _extends from 'babel-runtime/helpers/extends';\r\nimport cx from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\nimport { customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useKeyOrValueAndKey, useMultipleProp, useTextAlignProp, useVerticalAlignProp, useWidthProp } from '../../lib';\r\nimport GridColumn from './GridColumn';\r\nimport GridRow from './GridRow';\r\n\r\n/**\r\n * A grid is used to harmonize negative space in a layout.\r\n */\r\nfunction Grid(props) {\r\n  var celled = props.celled,\r\n      centered = props.centered,\r\n      children = props.children,\r\n      className = props.className,\r\n      columns = props.columns,\r\n      container = props.container,\r\n      divided = props.divided,\r\n      doubling = props.doubling,\r\n      inverted = props.inverted,\r\n      padded = props.padded,\r\n      relaxed = props.relaxed,\r\n      reversed = props.reversed,\r\n      stackable = props.stackable,\r\n      stretched = props.stretched,\r\n      textAlign = props.textAlign,\r\n      verticalAlign = props.verticalAlign;\r\n\r\n\r\n  var classes = cx('ui', useKeyOnly(centered, 'centered'), useKeyOnly(container, 'container'), useKeyOnly(doubling, 'doubling'), useKeyOnly(inverted, 'inverted'), useKeyOnly(stackable, 'stackable'), useKeyOnly(stretched, 'stretched'), useKeyOrValueAndKey(celled, 'celled'), useKeyOrValueAndKey(divided, 'divided'), useKeyOrValueAndKey(padded, 'padded'), useKeyOrValueAndKey(relaxed, 'relaxed'), useMultipleProp(reversed, 'reversed'), useTextAlignProp(textAlign), useVerticalAlignProp(verticalAlign), useWidthProp(columns, 'column', true), 'grid', className);\r\n  var rest = getUnhandledProps(Grid, props);\r\n  var ElementType = getElementType(Grid, props);\r\n\r\n  return React.createElement(\r\n    ElementType,\r\n    _extends({}, rest, { className: classes }),\r\n    children\r\n  );\r\n}\r\n\r\nGrid.handledProps = ['as', 'celled', 'centered', 'children', 'className', 'columns', 'container', 'divided', 'doubling', 'inverted', 'padded', 'relaxed', 'reversed', 'stackable', 'stretched', 'textAlign', 'verticalAlign'];\r\nGrid.Column = GridColumn;\r\nGrid.Row = GridRow;\r\n\r\nGrid._meta = {\r\n  name: 'Grid',\r\n  type: META.TYPES.COLLECTION\r\n};\r\n\r\nGrid.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: customPropTypes.as,\r\n\r\n  /** A grid can have rows divided into cells. */\r\n  celled: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['internally'])]),\r\n\r\n  /** A grid can have its columns centered. */\r\n  centered: PropTypes.bool,\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** Represents column count per row in Grid. */\r\n  columns: PropTypes.oneOf([].concat(_toConsumableArray(SUI.WIDTHS), ['equal'])),\r\n\r\n  /** A grid can be combined with a container to use the available layout and alignment. */\r\n  container: PropTypes.bool,\r\n\r\n  /** A grid can have dividers between its columns. */\r\n  divided: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['vertically'])]),\r\n\r\n  /** A grid can double its column width on tablet and mobile sizes. */\r\n  doubling: PropTypes.bool,\r\n\r\n  /** A grid's colors can be inverted. */\r\n  inverted: PropTypes.bool,\r\n\r\n  /** A grid can preserve its vertical and horizontal gutters on first and last columns. */\r\n  padded: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['horizontally', 'vertically'])]),\r\n\r\n  /** A grid can increase its gutters to allow for more negative space. */\r\n  relaxed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['very'])]),\r\n\r\n  /** A grid can specify that its columns should reverse order at different device sizes. */\r\n  reversed: customPropTypes.multipleProp(['computer', 'computer vertically', 'mobile', 'mobile vertically', 'tablet', 'tablet vertically']),\r\n\r\n  /** A grid can have its columns stack on-top of each other after reaching mobile breakpoints. */\r\n  stackable: PropTypes.bool,\r\n\r\n  /** A grid can stretch its contents to take up the entire grid height. */\r\n  stretched: PropTypes.bool,\r\n\r\n  /** A grid can specify its text alignment. */\r\n  textAlign: PropTypes.oneOf(SUI.TEXT_ALIGNMENTS),\r\n\r\n  /** A grid can specify its vertical alignment to have all its columns vertically centered. */\r\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\r\n} : {};\r\n\r\nexport default Grid;"],"mappings":"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"},"metadata":{},"sourceType":"module"}