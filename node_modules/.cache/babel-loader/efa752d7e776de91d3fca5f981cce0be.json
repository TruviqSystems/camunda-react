{"ast":null,"code":"import { forEach, reduce } from 'min-dash';\nimport { getChildren, getVisual } from '../util/GraphicsUtil';\nimport { translate } from '../util/SvgTransformUtil';\nimport { clear as domClear } from 'min-dom';\nimport { append as svgAppend, attr as svgAttr, classes as svgClasses, create as svgCreate, remove as svgRemove } from 'tiny-svg';\nimport { isFrameElement } from '../util/Elements';\n\n/**\r\n * A factory that creates graphical elements\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {ElementRegistry} elementRegistry\r\n */\nexport default function GraphicsFactory(eventBus, elementRegistry) {\n  this._eventBus = eventBus;\n  this._elementRegistry = elementRegistry;\n}\nGraphicsFactory.$inject = ['eventBus', 'elementRegistry'];\nGraphicsFactory.prototype._getChildrenContainer = function (element) {\n  var gfx = this._elementRegistry.getGraphics(element);\n  var childrenGfx;\n\n  // root element\n  if (!element.parent) {\n    childrenGfx = gfx;\n  } else {\n    childrenGfx = getChildren(gfx);\n    if (!childrenGfx) {\n      childrenGfx = svgCreate('g');\n      svgClasses(childrenGfx).add('djs-children');\n      svgAppend(gfx.parentNode, childrenGfx);\n    }\n  }\n  return childrenGfx;\n};\n\n/**\r\n * Clears the graphical representation of the element and returns the\r\n * cleared visual (the <g class=\"djs-visual\" /> element).\r\n */\nGraphicsFactory.prototype._clear = function (gfx) {\n  var visual = getVisual(gfx);\n  domClear(visual);\n  return visual;\n};\n\n/**\r\n * Creates a gfx container for shapes and connections\r\n *\r\n * The layout is as follows:\r\n *\r\n * <g class=\"djs-group\">\r\n *\r\n *   <!-- the gfx -->\r\n *   <g class=\"djs-element djs-(shape|connection|frame)\">\r\n *     <g class=\"djs-visual\">\r\n *       <!-- the renderer draws in here -->\r\n *     </g>\r\n *\r\n *     <!-- extensions (overlays, click box, ...) goes here\r\n *   </g>\r\n *\r\n *   <!-- the gfx child nodes -->\r\n *   <g class=\"djs-children\"></g>\r\n * </g>\r\n *\r\n * @param {string} type the type of the element, i.e. shape | connection\r\n * @param {SVGElement} [childrenGfx]\r\n * @param {number} [parentIndex] position to create container in parent\r\n * @param {boolean} [isFrame] is frame element\r\n *\r\n * @return {SVGElement}\r\n */\nGraphicsFactory.prototype._createContainer = function (type, childrenGfx, parentIndex, isFrame) {\n  var outerGfx = svgCreate('g');\n  svgClasses(outerGfx).add('djs-group');\n\n  // insert node at position\n  if (typeof parentIndex !== 'undefined') {\n    prependTo(outerGfx, childrenGfx, childrenGfx.childNodes[parentIndex]);\n  } else {\n    svgAppend(childrenGfx, outerGfx);\n  }\n  var gfx = svgCreate('g');\n  svgClasses(gfx).add('djs-element');\n  svgClasses(gfx).add('djs-' + type);\n  if (isFrame) {\n    svgClasses(gfx).add('djs-frame');\n  }\n  svgAppend(outerGfx, gfx);\n\n  // create visual\n  var visual = svgCreate('g');\n  svgClasses(visual).add('djs-visual');\n  svgAppend(gfx, visual);\n  return gfx;\n};\nGraphicsFactory.prototype.create = function (type, element, parentIndex) {\n  var childrenGfx = this._getChildrenContainer(element.parent);\n  return this._createContainer(type, childrenGfx, parentIndex, isFrameElement(element));\n};\nGraphicsFactory.prototype.updateContainments = function (elements) {\n  var self = this,\n    elementRegistry = this._elementRegistry,\n    parents;\n  parents = reduce(elements, function (map, e) {\n    if (e.parent) {\n      map[e.parent.id] = e.parent;\n    }\n    return map;\n  }, {});\n\n  // update all parents of changed and reorganized their children\n  // in the correct order (as indicated in our model)\n  forEach(parents, function (parent) {\n    var children = parent.children;\n    if (!children) {\n      return;\n    }\n    var childrenGfx = self._getChildrenContainer(parent);\n    forEach(children.slice().reverse(), function (child) {\n      var childGfx = elementRegistry.getGraphics(child);\n      prependTo(childGfx.parentNode, childrenGfx);\n    });\n  });\n};\nGraphicsFactory.prototype.drawShape = function (visual, element) {\n  var eventBus = this._eventBus;\n  return eventBus.fire('render.shape', {\n    gfx: visual,\n    element: element\n  });\n};\nGraphicsFactory.prototype.getShapePath = function (element) {\n  var eventBus = this._eventBus;\n  return eventBus.fire('render.getShapePath', element);\n};\nGraphicsFactory.prototype.drawConnection = function (visual, element) {\n  var eventBus = this._eventBus;\n  return eventBus.fire('render.connection', {\n    gfx: visual,\n    element: element\n  });\n};\nGraphicsFactory.prototype.getConnectionPath = function (waypoints) {\n  var eventBus = this._eventBus;\n  return eventBus.fire('render.getConnectionPath', waypoints);\n};\nGraphicsFactory.prototype.update = function (type, element, gfx) {\n  // do NOT update root element\n  if (!element.parent) {\n    return;\n  }\n  var visual = this._clear(gfx);\n\n  // redraw\n  if (type === 'shape') {\n    this.drawShape(visual, element);\n\n    // update positioning\n    translate(gfx, element.x, element.y);\n  } else if (type === 'connection') {\n    this.drawConnection(visual, element);\n  } else {\n    throw new Error('unknown type: ' + type);\n  }\n  if (element.hidden) {\n    svgAttr(gfx, 'display', 'none');\n  } else {\n    svgAttr(gfx, 'display', 'block');\n  }\n};\nGraphicsFactory.prototype.remove = function (element) {\n  var gfx = this._elementRegistry.getGraphics(element);\n\n  // remove\n  svgRemove(gfx.parentNode);\n};\n\n// helpers //////////\n\nfunction prependTo(newNode, parentNode, siblingNode) {\n  var node = siblingNode || parentNode.firstChild;\n\n  // do not prepend node to itself to prevent IE from crashing\n  // https://github.com/bpmn-io/bpmn-js/issues/746\n  if (newNode === node) {\n    return;\n  }\n  parentNode.insertBefore(newNode, node);\n}","map":{"version":3,"names":["forEach","reduce","getChildren","getVisual","translate","clear","domClear","append","svgAppend","attr","svgAttr","classes","svgClasses","create","svgCreate","remove","svgRemove","isFrameElement","GraphicsFactory","eventBus","elementRegistry","_eventBus","_elementRegistry","$inject","prototype","_getChildrenContainer","element","gfx","getGraphics","childrenGfx","parent","add","parentNode","_clear","visual","_createContainer","type","parentIndex","isFrame","outerGfx","prependTo","childNodes","updateContainments","elements","self","parents","map","e","id","children","slice","reverse","child","childGfx","drawShape","fire","getShapePath","drawConnection","getConnectionPath","waypoints","update","x","y","Error","hidden","newNode","siblingNode","node","firstChild","insertBefore"],"sources":["C:/Users/sam/final/camunda-react/node_modules/diagram-js/lib/core/GraphicsFactory.js"],"sourcesContent":["import {\r\n  forEach,\r\n  reduce\r\n} from 'min-dash';\r\n\r\nimport {\r\n  getChildren,\r\n  getVisual\r\n} from '../util/GraphicsUtil';\r\n\r\nimport { translate } from '../util/SvgTransformUtil';\r\n\r\nimport { clear as domClear } from 'min-dom';\r\n\r\nimport {\r\n  append as svgAppend,\r\n  attr as svgAttr,\r\n  classes as svgClasses,\r\n  create as svgCreate,\r\n  remove as svgRemove\r\n} from 'tiny-svg';\r\n\r\nimport {\r\n  isFrameElement\r\n} from '../util/Elements';\r\n\r\n/**\r\n * A factory that creates graphical elements\r\n *\r\n * @param {EventBus} eventBus\r\n * @param {ElementRegistry} elementRegistry\r\n */\r\nexport default function GraphicsFactory(eventBus, elementRegistry) {\r\n  this._eventBus = eventBus;\r\n  this._elementRegistry = elementRegistry;\r\n}\r\n\r\nGraphicsFactory.$inject = [ 'eventBus' , 'elementRegistry' ];\r\n\r\n\r\nGraphicsFactory.prototype._getChildrenContainer = function(element) {\r\n\r\n  var gfx = this._elementRegistry.getGraphics(element);\r\n\r\n  var childrenGfx;\r\n\r\n  // root element\r\n  if (!element.parent) {\r\n    childrenGfx = gfx;\r\n  } else {\r\n    childrenGfx = getChildren(gfx);\r\n    if (!childrenGfx) {\r\n      childrenGfx = svgCreate('g');\r\n      svgClasses(childrenGfx).add('djs-children');\r\n\r\n      svgAppend(gfx.parentNode, childrenGfx);\r\n    }\r\n  }\r\n\r\n  return childrenGfx;\r\n};\r\n\r\n/**\r\n * Clears the graphical representation of the element and returns the\r\n * cleared visual (the <g class=\"djs-visual\" /> element).\r\n */\r\nGraphicsFactory.prototype._clear = function(gfx) {\r\n  var visual = getVisual(gfx);\r\n\r\n  domClear(visual);\r\n\r\n  return visual;\r\n};\r\n\r\n/**\r\n * Creates a gfx container for shapes and connections\r\n *\r\n * The layout is as follows:\r\n *\r\n * <g class=\"djs-group\">\r\n *\r\n *   <!-- the gfx -->\r\n *   <g class=\"djs-element djs-(shape|connection|frame)\">\r\n *     <g class=\"djs-visual\">\r\n *       <!-- the renderer draws in here -->\r\n *     </g>\r\n *\r\n *     <!-- extensions (overlays, click box, ...) goes here\r\n *   </g>\r\n *\r\n *   <!-- the gfx child nodes -->\r\n *   <g class=\"djs-children\"></g>\r\n * </g>\r\n *\r\n * @param {string} type the type of the element, i.e. shape | connection\r\n * @param {SVGElement} [childrenGfx]\r\n * @param {number} [parentIndex] position to create container in parent\r\n * @param {boolean} [isFrame] is frame element\r\n *\r\n * @return {SVGElement}\r\n */\r\nGraphicsFactory.prototype._createContainer = function(\r\n    type, childrenGfx, parentIndex, isFrame\r\n) {\r\n  var outerGfx = svgCreate('g');\r\n  svgClasses(outerGfx).add('djs-group');\r\n\r\n  // insert node at position\r\n  if (typeof parentIndex !== 'undefined') {\r\n    prependTo(outerGfx, childrenGfx, childrenGfx.childNodes[parentIndex]);\r\n  } else {\r\n    svgAppend(childrenGfx, outerGfx);\r\n  }\r\n\r\n  var gfx = svgCreate('g');\r\n  svgClasses(gfx).add('djs-element');\r\n  svgClasses(gfx).add('djs-' + type);\r\n\r\n  if (isFrame) {\r\n    svgClasses(gfx).add('djs-frame');\r\n  }\r\n\r\n  svgAppend(outerGfx, gfx);\r\n\r\n  // create visual\r\n  var visual = svgCreate('g');\r\n  svgClasses(visual).add('djs-visual');\r\n\r\n  svgAppend(gfx, visual);\r\n\r\n  return gfx;\r\n};\r\n\r\nGraphicsFactory.prototype.create = function(type, element, parentIndex) {\r\n  var childrenGfx = this._getChildrenContainer(element.parent);\r\n  return this._createContainer(type, childrenGfx, parentIndex, isFrameElement(element));\r\n};\r\n\r\nGraphicsFactory.prototype.updateContainments = function(elements) {\r\n\r\n  var self = this,\r\n      elementRegistry = this._elementRegistry,\r\n      parents;\r\n\r\n  parents = reduce(elements, function(map, e) {\r\n\r\n    if (e.parent) {\r\n      map[e.parent.id] = e.parent;\r\n    }\r\n\r\n    return map;\r\n  }, {});\r\n\r\n  // update all parents of changed and reorganized their children\r\n  // in the correct order (as indicated in our model)\r\n  forEach(parents, function(parent) {\r\n\r\n    var children = parent.children;\r\n\r\n    if (!children) {\r\n      return;\r\n    }\r\n\r\n    var childrenGfx = self._getChildrenContainer(parent);\r\n\r\n    forEach(children.slice().reverse(), function(child) {\r\n      var childGfx = elementRegistry.getGraphics(child);\r\n\r\n      prependTo(childGfx.parentNode, childrenGfx);\r\n    });\r\n  });\r\n};\r\n\r\nGraphicsFactory.prototype.drawShape = function(visual, element) {\r\n  var eventBus = this._eventBus;\r\n\r\n  return eventBus.fire('render.shape', { gfx: visual, element: element });\r\n};\r\n\r\nGraphicsFactory.prototype.getShapePath = function(element) {\r\n  var eventBus = this._eventBus;\r\n\r\n  return eventBus.fire('render.getShapePath', element);\r\n};\r\n\r\nGraphicsFactory.prototype.drawConnection = function(visual, element) {\r\n  var eventBus = this._eventBus;\r\n\r\n  return eventBus.fire('render.connection', { gfx: visual, element: element });\r\n};\r\n\r\nGraphicsFactory.prototype.getConnectionPath = function(waypoints) {\r\n  var eventBus = this._eventBus;\r\n\r\n  return eventBus.fire('render.getConnectionPath', waypoints);\r\n};\r\n\r\nGraphicsFactory.prototype.update = function(type, element, gfx) {\r\n\r\n  // do NOT update root element\r\n  if (!element.parent) {\r\n    return;\r\n  }\r\n\r\n  var visual = this._clear(gfx);\r\n\r\n  // redraw\r\n  if (type === 'shape') {\r\n    this.drawShape(visual, element);\r\n\r\n    // update positioning\r\n    translate(gfx, element.x, element.y);\r\n  } else\r\n  if (type === 'connection') {\r\n    this.drawConnection(visual, element);\r\n  } else {\r\n    throw new Error('unknown type: ' + type);\r\n  }\r\n\r\n  if (element.hidden) {\r\n    svgAttr(gfx, 'display', 'none');\r\n  } else {\r\n    svgAttr(gfx, 'display', 'block');\r\n  }\r\n};\r\n\r\nGraphicsFactory.prototype.remove = function(element) {\r\n  var gfx = this._elementRegistry.getGraphics(element);\r\n\r\n  // remove\r\n  svgRemove(gfx.parentNode);\r\n};\r\n\r\n\r\n// helpers //////////\r\n\r\nfunction prependTo(newNode, parentNode, siblingNode) {\r\n  var node = siblingNode || parentNode.firstChild;\r\n\r\n  // do not prepend node to itself to prevent IE from crashing\r\n  // https://github.com/bpmn-io/bpmn-js/issues/746\r\n  if (newNode === node) {\r\n    return;\r\n  }\r\n\r\n  parentNode.insertBefore(newNode, node);\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}