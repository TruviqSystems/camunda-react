{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\n/**\r\n * A divider visually segments content into groups.\r\n */\n\nfunction Divider(props) {\n  var children = props.children,\n    className = props.className,\n    clearing = props.clearing,\n    content = props.content,\n    fitted = props.fitted,\n    hidden = props.hidden,\n    horizontal = props.horizontal,\n    inverted = props.inverted,\n    section = props.section,\n    vertical = props.vertical;\n  var classes = cx('ui', useKeyOnly(clearing, 'clearing'), useKeyOnly(fitted, 'fitted'), useKeyOnly(hidden, 'hidden'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useKeyOnly(section, 'section'), useKeyOnly(vertical, 'vertical'), 'divider', className);\n  var rest = getUnhandledProps(Divider, props);\n  var ElementType = getElementType(Divider, props);\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), childrenUtils.isNil(children) ? content : children);\n}\nDivider.handledProps = [\"as\", \"children\", \"className\", \"clearing\", \"content\", \"fitted\", \"hidden\", \"horizontal\", \"inverted\", \"section\", \"vertical\"];\nDivider.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Divider can clear the content above it. */\n  clearing: PropTypes.bool,\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n  /** Divider can be fitted without any space above or below it. */\n  fitted: PropTypes.bool,\n  /** Divider can divide content without creating a dividing line. */\n  hidden: PropTypes.bool,\n  /** Divider can segment content horizontally. */\n  horizontal: PropTypes.bool,\n  /** Divider can have its colours inverted. */\n  inverted: PropTypes.bool,\n  /** Divider can provide greater margins to divide sections of content. */\n  section: PropTypes.bool,\n  /** Divider can segment content vertically. */\n  vertical: PropTypes.bool\n} : {};\nexport default Divider;","map":{"version":3,"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","useKeyOnly","Divider","props","children","className","clearing","content","fitted","hidden","horizontal","inverted","section","vertical","classes","rest","ElementType","createElement","isNil","handledProps","propTypes","process","env","NODE_ENV","as","elementType","node","string","bool","contentShorthand"],"sources":["C:/Users/sam/final/camunda-react/node_modules/semantic-ui-react/dist/es/elements/Divider/Divider.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport cx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, useKeyOnly } from '../../lib';\r\n/**\r\n * A divider visually segments content into groups.\r\n */\r\n\r\nfunction Divider(props) {\r\n  var children = props.children,\r\n      className = props.className,\r\n      clearing = props.clearing,\r\n      content = props.content,\r\n      fitted = props.fitted,\r\n      hidden = props.hidden,\r\n      horizontal = props.horizontal,\r\n      inverted = props.inverted,\r\n      section = props.section,\r\n      vertical = props.vertical;\r\n  var classes = cx('ui', useKeyOnly(clearing, 'clearing'), useKeyOnly(fitted, 'fitted'), useKeyOnly(hidden, 'hidden'), useKeyOnly(horizontal, 'horizontal'), useKeyOnly(inverted, 'inverted'), useKeyOnly(section, 'section'), useKeyOnly(vertical, 'vertical'), 'divider', className);\r\n  var rest = getUnhandledProps(Divider, props);\r\n  var ElementType = getElementType(Divider, props);\r\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\r\n    className: classes\r\n  }), childrenUtils.isNil(children) ? content : children);\r\n}\r\n\r\nDivider.handledProps = [\"as\", \"children\", \"className\", \"clearing\", \"content\", \"fitted\", \"hidden\", \"horizontal\", \"inverted\", \"section\", \"vertical\"];\r\nDivider.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: PropTypes.elementType,\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** Divider can clear the content above it. */\r\n  clearing: PropTypes.bool,\r\n\r\n  /** Shorthand for primary content. */\r\n  content: customPropTypes.contentShorthand,\r\n\r\n  /** Divider can be fitted without any space above or below it. */\r\n  fitted: PropTypes.bool,\r\n\r\n  /** Divider can divide content without creating a dividing line. */\r\n  hidden: PropTypes.bool,\r\n\r\n  /** Divider can segment content horizontally. */\r\n  horizontal: PropTypes.bool,\r\n\r\n  /** Divider can have its colours inverted. */\r\n  inverted: PropTypes.bool,\r\n\r\n  /** Divider can provide greater margins to divide sections of content. */\r\n  section: PropTypes.bool,\r\n\r\n  /** Divider can segment content vertically. */\r\n  vertical: PropTypes.bool\r\n} : {};\r\nexport default Divider;"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAOC,EAAE,MAAM,MAAM;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,eAAe,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,UAAU,QAAQ,WAAW;AACzG;AACA;AACA;;AAEA,SAASC,OAAOA,CAACC,KAAK,EAAE;EACtB,IAAIC,QAAQ,GAAGD,KAAK,CAACC,QAAQ;IACzBC,SAAS,GAAGF,KAAK,CAACE,SAAS;IAC3BC,QAAQ,GAAGH,KAAK,CAACG,QAAQ;IACzBC,OAAO,GAAGJ,KAAK,CAACI,OAAO;IACvBC,MAAM,GAAGL,KAAK,CAACK,MAAM;IACrBC,MAAM,GAAGN,KAAK,CAACM,MAAM;IACrBC,UAAU,GAAGP,KAAK,CAACO,UAAU;IAC7BC,QAAQ,GAAGR,KAAK,CAACQ,QAAQ;IACzBC,OAAO,GAAGT,KAAK,CAACS,OAAO;IACvBC,QAAQ,GAAGV,KAAK,CAACU,QAAQ;EAC7B,IAAIC,OAAO,GAAGpB,EAAE,CAAC,IAAI,EAAEO,UAAU,CAACK,QAAQ,EAAE,UAAU,CAAC,EAAEL,UAAU,CAACO,MAAM,EAAE,QAAQ,CAAC,EAAEP,UAAU,CAACQ,MAAM,EAAE,QAAQ,CAAC,EAAER,UAAU,CAACS,UAAU,EAAE,YAAY,CAAC,EAAET,UAAU,CAACU,QAAQ,EAAE,UAAU,CAAC,EAAEV,UAAU,CAACW,OAAO,EAAE,SAAS,CAAC,EAAEX,UAAU,CAACY,QAAQ,EAAE,UAAU,CAAC,EAAE,SAAS,EAAER,SAAS,CAAC;EACpR,IAAIU,IAAI,GAAGf,iBAAiB,CAACE,OAAO,EAAEC,KAAK,CAAC;EAC5C,IAAIa,WAAW,GAAGjB,cAAc,CAACG,OAAO,EAAEC,KAAK,CAAC;EAChD,OAAO,aAAaP,KAAK,CAACqB,aAAa,CAACD,WAAW,EAAEvB,QAAQ,CAAC,CAAC,CAAC,EAAEsB,IAAI,EAAE;IACtEV,SAAS,EAAES;EACb,CAAC,CAAC,EAAEjB,aAAa,CAACqB,KAAK,CAACd,QAAQ,CAAC,GAAGG,OAAO,GAAGH,QAAQ,CAAC;AACzD;AAEAF,OAAO,CAACiB,YAAY,GAAG,CAAC,IAAI,EAAE,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,YAAY,EAAE,UAAU,EAAE,SAAS,EAAE,UAAU,CAAC;AAClJjB,OAAO,CAACkB,SAAS,GAAGC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,GAAG;EAC1D;EACAC,EAAE,EAAE7B,SAAS,CAAC8B,WAAW;EAEzB;EACArB,QAAQ,EAAET,SAAS,CAAC+B,IAAI;EAExB;EACArB,SAAS,EAAEV,SAAS,CAACgC,MAAM;EAE3B;EACArB,QAAQ,EAAEX,SAAS,CAACiC,IAAI;EAExB;EACArB,OAAO,EAAET,eAAe,CAAC+B,gBAAgB;EAEzC;EACArB,MAAM,EAAEb,SAAS,CAACiC,IAAI;EAEtB;EACAnB,MAAM,EAAEd,SAAS,CAACiC,IAAI;EAEtB;EACAlB,UAAU,EAAEf,SAAS,CAACiC,IAAI;EAE1B;EACAjB,QAAQ,EAAEhB,SAAS,CAACiC,IAAI;EAExB;EACAhB,OAAO,EAAEjB,SAAS,CAACiC,IAAI;EAEvB;EACAf,QAAQ,EAAElB,SAAS,CAACiC;AACtB,CAAC,GAAG,CAAC,CAAC;AACN,eAAe1B,OAAO"},"metadata":{},"sourceType":"module"}