{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useVerticalAlignProp } from '../../lib';\nimport ItemHeader from './ItemHeader';\nimport ItemDescription from './ItemDescription';\nimport ItemExtra from './ItemExtra';\nimport ItemMeta from './ItemMeta';\n/**\r\n * An item can contain content.\r\n */\n\nfunction ItemContent(props) {\n  var children = props.children,\n    className = props.className,\n    content = props.content,\n    description = props.description,\n    extra = props.extra,\n    header = props.header,\n    meta = props.meta,\n    verticalAlign = props.verticalAlign;\n  var classes = cx(useVerticalAlignProp(verticalAlign), 'content', className);\n  var rest = getUnhandledProps(ItemContent, props);\n  var ElementType = getElementType(ItemContent, props);\n  if (!childrenUtils.isNil(children)) {\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), children);\n  }\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n    className: classes\n  }), ItemHeader.create(header, {\n    autoGenerateKey: false\n  }), ItemMeta.create(meta, {\n    autoGenerateKey: false\n  }), ItemDescription.create(description, {\n    autoGenerateKey: false\n  }), ItemExtra.create(extra, {\n    autoGenerateKey: false\n  }), content);\n}\nItemContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"verticalAlign\"];\nItemContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n  /** Shorthand for ItemDescription component. */\n  description: customPropTypes.itemShorthand,\n  /** Shorthand for ItemExtra component. */\n  extra: customPropTypes.itemShorthand,\n  /** Shorthand for ItemHeader component. */\n  header: customPropTypes.itemShorthand,\n  /** Shorthand for ItemMeta component. */\n  meta: customPropTypes.itemShorthand,\n  /** Content can specify its vertical alignment. */\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\n} : {};\nexport default ItemContent;","map":{"version":3,"names":["_extends","cx","PropTypes","React","childrenUtils","customPropTypes","getElementType","getUnhandledProps","SUI","useVerticalAlignProp","ItemHeader","ItemDescription","ItemExtra","ItemMeta","ItemContent","props","children","className","content","description","extra","header","meta","verticalAlign","classes","rest","ElementType","isNil","createElement","create","autoGenerateKey","handledProps","propTypes","process","env","NODE_ENV","as","elementType","node","string","contentShorthand","itemShorthand","oneOf","VERTICAL_ALIGNMENTS"],"sources":["C:/Users/sam/final/camunda-react/node_modules/semantic-ui-react/dist/es/views/Item/ItemContent.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport cx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { childrenUtils, customPropTypes, getElementType, getUnhandledProps, SUI, useVerticalAlignProp } from '../../lib';\r\nimport ItemHeader from './ItemHeader';\r\nimport ItemDescription from './ItemDescription';\r\nimport ItemExtra from './ItemExtra';\r\nimport ItemMeta from './ItemMeta';\r\n/**\r\n * An item can contain content.\r\n */\r\n\r\nfunction ItemContent(props) {\r\n  var children = props.children,\r\n      className = props.className,\r\n      content = props.content,\r\n      description = props.description,\r\n      extra = props.extra,\r\n      header = props.header,\r\n      meta = props.meta,\r\n      verticalAlign = props.verticalAlign;\r\n  var classes = cx(useVerticalAlignProp(verticalAlign), 'content', className);\r\n  var rest = getUnhandledProps(ItemContent, props);\r\n  var ElementType = getElementType(ItemContent, props);\r\n\r\n  if (!childrenUtils.isNil(children)) {\r\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\r\n      className: classes\r\n    }), children);\r\n  }\r\n\r\n  return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\r\n    className: classes\r\n  }), ItemHeader.create(header, {\r\n    autoGenerateKey: false\r\n  }), ItemMeta.create(meta, {\r\n    autoGenerateKey: false\r\n  }), ItemDescription.create(description, {\r\n    autoGenerateKey: false\r\n  }), ItemExtra.create(extra, {\r\n    autoGenerateKey: false\r\n  }), content);\r\n}\r\n\r\nItemContent.handledProps = [\"as\", \"children\", \"className\", \"content\", \"description\", \"extra\", \"header\", \"meta\", \"verticalAlign\"];\r\nItemContent.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: PropTypes.elementType,\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** Shorthand for primary content. */\r\n  content: customPropTypes.contentShorthand,\r\n\r\n  /** Shorthand for ItemDescription component. */\r\n  description: customPropTypes.itemShorthand,\r\n\r\n  /** Shorthand for ItemExtra component. */\r\n  extra: customPropTypes.itemShorthand,\r\n\r\n  /** Shorthand for ItemHeader component. */\r\n  header: customPropTypes.itemShorthand,\r\n\r\n  /** Shorthand for ItemMeta component. */\r\n  meta: customPropTypes.itemShorthand,\r\n\r\n  /** Content can specify its vertical alignment. */\r\n  verticalAlign: PropTypes.oneOf(SUI.VERTICAL_ALIGNMENTS)\r\n} : {};\r\nexport default ItemContent;"],"mappings":"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"},"metadata":{},"sourceType":"module"}