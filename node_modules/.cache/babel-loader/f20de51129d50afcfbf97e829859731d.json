{"ast":null,"code":"import { forEach, assign } from 'min-dash';\nimport { delegate as domDelegate, query as domQuery, queryAll as domQueryAll } from 'min-dom';\nimport { isPrimaryButton, isAuxiliaryButton } from '../../util/Mouse';\nimport { append as svgAppend, attr as svgAttr, create as svgCreate, remove as svgRemove } from 'tiny-svg';\nimport { createLine, updateLine } from '../../util/RenderUtil';\nfunction allowAll(event) {\n  return true;\n}\nfunction allowPrimaryAndAuxiliary(event) {\n  return isPrimaryButton(event) || isAuxiliaryButton(event);\n}\nvar LOW_PRIORITY = 500;\n\n/**\n * A plugin that provides interaction events for diagram elements.\n *\n * It emits the following events:\n *\n *   * element.click\n *   * element.contextmenu\n *   * element.dblclick\n *   * element.hover\n *   * element.mousedown\n *   * element.mousemove\n *   * element.mouseup\n *   * element.out\n *\n * Each event is a tuple { element, gfx, originalEvent }.\n *\n * Canceling the event via Event#preventDefault()\n * prevents the original DOM operation.\n *\n * @param {EventBus} eventBus\n */\nexport default function InteractionEvents(eventBus, elementRegistry, styles) {\n  var self = this;\n\n  /**\n   * Fire an interaction event.\n   *\n   * @param {string} type local event name, e.g. element.click.\n   * @param {DOMEvent} event native event\n   * @param {djs.model.Base} [element] the diagram element to emit the event on;\n   *                                   defaults to the event target\n   */\n  function fire(type, event, element) {\n    if (isIgnored(type, event)) {\n      return;\n    }\n    var target, gfx, returnValue;\n    if (!element) {\n      target = event.delegateTarget || event.target;\n      if (target) {\n        gfx = target;\n        element = elementRegistry.get(gfx);\n      }\n    } else {\n      gfx = elementRegistry.getGraphics(element);\n    }\n    if (!gfx || !element) {\n      return;\n    }\n    returnValue = eventBus.fire(type, {\n      element: element,\n      gfx: gfx,\n      originalEvent: event\n    });\n    if (returnValue === false) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n\n  // TODO(nikku): document this\n  var handlers = {};\n  function mouseHandler(localEventName) {\n    return handlers[localEventName];\n  }\n  function isIgnored(localEventName, event) {\n    var filter = ignoredFilters[localEventName] || isPrimaryButton;\n\n    // only react on left mouse button interactions\n    // except for interaction events that are enabled\n    // for secundary mouse button\n    return !filter(event);\n  }\n  var bindings = {\n    click: 'element.click',\n    contextmenu: 'element.contextmenu',\n    dblclick: 'element.dblclick',\n    mousedown: 'element.mousedown',\n    mousemove: 'element.mousemove',\n    mouseover: 'element.hover',\n    mouseout: 'element.out',\n    mouseup: 'element.mouseup'\n  };\n  var ignoredFilters = {\n    'element.contextmenu': allowAll,\n    'element.mousedown': allowPrimaryAndAuxiliary,\n    'element.mouseup': allowPrimaryAndAuxiliary,\n    'element.click': allowPrimaryAndAuxiliary,\n    'element.dblclick': allowPrimaryAndAuxiliary\n  };\n\n  // manual event trigger //////////\n\n  /**\n   * Trigger an interaction event (based on a native dom event)\n   * on the target shape or connection.\n   *\n   * @param {string} eventName the name of the triggered DOM event\n   * @param {MouseEvent} event\n   * @param {djs.model.Base} targetElement\n   */\n  function triggerMouseEvent(eventName, event, targetElement) {\n    // i.e. element.mousedown...\n    var localEventName = bindings[eventName];\n    if (!localEventName) {\n      throw new Error('unmapped DOM event name <' + eventName + '>');\n    }\n    return fire(localEventName, event, targetElement);\n  }\n  var ELEMENT_SELECTOR = 'svg, .djs-element';\n\n  // event handling ///////\n\n  function registerEvent(node, event, localEvent, ignoredFilter) {\n    var handler = handlers[localEvent] = function (event) {\n      fire(localEvent, event);\n    };\n    if (ignoredFilter) {\n      ignoredFilters[localEvent] = ignoredFilter;\n    }\n    handler.$delegate = domDelegate.bind(node, ELEMENT_SELECTOR, event, handler);\n  }\n  function unregisterEvent(node, event, localEvent) {\n    var handler = mouseHandler(localEvent);\n    if (!handler) {\n      return;\n    }\n    domDelegate.unbind(node, event, handler.$delegate);\n  }\n  function registerEvents(svg) {\n    forEach(bindings, function (val, key) {\n      registerEvent(svg, key, val);\n    });\n  }\n  function unregisterEvents(svg) {\n    forEach(bindings, function (val, key) {\n      unregisterEvent(svg, key, val);\n    });\n  }\n  eventBus.on('canvas.destroy', function (event) {\n    unregisterEvents(event.svg);\n  });\n  eventBus.on('canvas.init', function (event) {\n    registerEvents(event.svg);\n  });\n\n  // hit box updating ////////////////\n\n  eventBus.on(['shape.added', 'connection.added'], function (event) {\n    var element = event.element,\n      gfx = event.gfx;\n    eventBus.fire('interactionEvents.createHit', {\n      element: element,\n      gfx: gfx\n    });\n  });\n\n  // Update djs-hit on change.\n  // A low priortity is necessary, because djs-hit of labels has to be updated\n  // after the label bounds have been updated in the renderer.\n  eventBus.on(['shape.changed', 'connection.changed'], LOW_PRIORITY, function (event) {\n    var element = event.element,\n      gfx = event.gfx;\n    eventBus.fire('interactionEvents.updateHit', {\n      element: element,\n      gfx: gfx\n    });\n  });\n  eventBus.on('interactionEvents.createHit', LOW_PRIORITY, function (event) {\n    var element = event.element,\n      gfx = event.gfx;\n    self.createDefaultHit(element, gfx);\n  });\n  eventBus.on('interactionEvents.updateHit', function (event) {\n    var element = event.element,\n      gfx = event.gfx;\n    self.updateDefaultHit(element, gfx);\n  });\n\n  // hit styles ////////////\n\n  var STROKE_HIT_STYLE = createHitStyle('djs-hit djs-hit-stroke');\n  var CLICK_STROKE_HIT_STYLE = createHitStyle('djs-hit djs-hit-click-stroke');\n  var ALL_HIT_STYLE = createHitStyle('djs-hit djs-hit-all');\n  var HIT_TYPES = {\n    'all': ALL_HIT_STYLE,\n    'click-stroke': CLICK_STROKE_HIT_STYLE,\n    'stroke': STROKE_HIT_STYLE\n  };\n  function createHitStyle(classNames, attrs) {\n    attrs = assign({\n      stroke: 'white',\n      strokeWidth: 15\n    }, attrs || {});\n    return styles.cls(classNames, ['no-fill', 'no-border'], attrs);\n  }\n\n  // style helpers ///////////////\n\n  function applyStyle(hit, type) {\n    var attrs = HIT_TYPES[type];\n    if (!attrs) {\n      throw new Error('invalid hit type <' + type + '>');\n    }\n    svgAttr(hit, attrs);\n    return hit;\n  }\n  function appendHit(gfx, hit) {\n    svgAppend(gfx, hit);\n  }\n\n  // API\n\n  /**\n   * Remove hints on the given graphics.\n   *\n   * @param {SVGElement} gfx\n   */\n  this.removeHits = function (gfx) {\n    var hits = domQueryAll('.djs-hit', gfx);\n    forEach(hits, svgRemove);\n  };\n\n  /**\n   * Create default hit for the given element.\n   *\n   * @param {djs.model.Base} element\n   * @param {SVGElement} gfx\n   *\n   * @return {SVGElement} created hit\n   */\n  this.createDefaultHit = function (element, gfx) {\n    var waypoints = element.waypoints,\n      isFrame = element.isFrame,\n      boxType;\n    if (waypoints) {\n      return this.createWaypointsHit(gfx, waypoints);\n    } else {\n      boxType = isFrame ? 'stroke' : 'all';\n      return this.createBoxHit(gfx, boxType, {\n        width: element.width,\n        height: element.height\n      });\n    }\n  };\n\n  /**\n   * Create hits for the given waypoints.\n   *\n   * @param {SVGElement} gfx\n   * @param {Array<Point>} waypoints\n   *\n   * @return {SVGElement}\n   */\n  this.createWaypointsHit = function (gfx, waypoints) {\n    var hit = createLine(waypoints);\n    applyStyle(hit, 'stroke');\n    appendHit(gfx, hit);\n    return hit;\n  };\n\n  /**\n   * Create hits for a box.\n   *\n   * @param {SVGElement} gfx\n   * @param {string} hitType\n   * @param {Object} attrs\n   *\n   * @return {SVGElement}\n   */\n  this.createBoxHit = function (gfx, type, attrs) {\n    attrs = assign({\n      x: 0,\n      y: 0\n    }, attrs);\n    var hit = svgCreate('rect');\n    applyStyle(hit, type);\n    svgAttr(hit, attrs);\n    appendHit(gfx, hit);\n    return hit;\n  };\n\n  /**\n   * Update default hit of the element.\n   *\n   * @param  {djs.model.Base} element\n   * @param  {SVGElement} gfx\n   *\n   * @return {SVGElement} updated hit\n   */\n  this.updateDefaultHit = function (element, gfx) {\n    var hit = domQuery('.djs-hit', gfx);\n    if (!hit) {\n      return;\n    }\n    if (element.waypoints) {\n      updateLine(hit, element.waypoints);\n    } else {\n      svgAttr(hit, {\n        width: element.width,\n        height: element.height\n      });\n    }\n    return hit;\n  };\n  this.fire = fire;\n  this.triggerMouseEvent = triggerMouseEvent;\n  this.mouseHandler = mouseHandler;\n  this.registerEvent = registerEvent;\n  this.unregisterEvent = unregisterEvent;\n}\nInteractionEvents.$inject = ['eventBus', 'elementRegistry', 'styles'];\n\n/**\n * An event indicating that the mouse hovered over an element\n *\n * @event element.hover\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has left an element\n *\n * @event element.out\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has clicked an element\n *\n * @event element.click\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has double clicked an element\n *\n * @event element.dblclick\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has gone down on an element.\n *\n * @event element.mousedown\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has gone up on an element.\n *\n * @event element.mouseup\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the context menu action is triggered\n * via mouse or touch controls.\n *\n * @event element.contextmenu\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */","map":{"version":3,"names":["forEach","assign","delegate","domDelegate","query","domQuery","queryAll","domQueryAll","isPrimaryButton","isAuxiliaryButton","append","svgAppend","attr","svgAttr","create","svgCreate","remove","svgRemove","createLine","updateLine","allowAll","event","allowPrimaryAndAuxiliary","LOW_PRIORITY","InteractionEvents","eventBus","elementRegistry","styles","self","fire","type","element","isIgnored","target","gfx","returnValue","delegateTarget","get","getGraphics","originalEvent","stopPropagation","preventDefault","handlers","mouseHandler","localEventName","filter","ignoredFilters","bindings","click","contextmenu","dblclick","mousedown","mousemove","mouseover","mouseout","mouseup","triggerMouseEvent","eventName","targetElement","Error","ELEMENT_SELECTOR","registerEvent","node","localEvent","ignoredFilter","handler","$delegate","bind","unregisterEvent","unbind","registerEvents","svg","val","key","unregisterEvents","on","createDefaultHit","updateDefaultHit","STROKE_HIT_STYLE","createHitStyle","CLICK_STROKE_HIT_STYLE","ALL_HIT_STYLE","HIT_TYPES","classNames","attrs","stroke","strokeWidth","cls","applyStyle","hit","appendHit","removeHits","hits","waypoints","isFrame","boxType","createWaypointsHit","createBoxHit","width","height","x","y","$inject"],"sources":["C:/Users/KondalaRaoThota/Truviq_Camunda/camunda-react/node_modules/diagram-js/lib/features/interaction-events/InteractionEvents.js"],"sourcesContent":["import {\n  forEach,\n  assign\n} from 'min-dash';\n\nimport {\n  delegate as domDelegate,\n  query as domQuery,\n  queryAll as domQueryAll\n} from 'min-dom';\n\nimport {\n  isPrimaryButton,\n  isAuxiliaryButton\n} from '../../util/Mouse';\n\nimport {\n  append as svgAppend,\n  attr as svgAttr,\n  create as svgCreate,\n  remove as svgRemove\n} from 'tiny-svg';\n\nimport {\n  createLine,\n  updateLine\n} from '../../util/RenderUtil';\n\nfunction allowAll(event) { return true; }\n\nfunction allowPrimaryAndAuxiliary(event) {\n  return isPrimaryButton(event) || isAuxiliaryButton(event);\n}\n\nvar LOW_PRIORITY = 500;\n\n\n/**\n * A plugin that provides interaction events for diagram elements.\n *\n * It emits the following events:\n *\n *   * element.click\n *   * element.contextmenu\n *   * element.dblclick\n *   * element.hover\n *   * element.mousedown\n *   * element.mousemove\n *   * element.mouseup\n *   * element.out\n *\n * Each event is a tuple { element, gfx, originalEvent }.\n *\n * Canceling the event via Event#preventDefault()\n * prevents the original DOM operation.\n *\n * @param {EventBus} eventBus\n */\nexport default function InteractionEvents(eventBus, elementRegistry, styles) {\n\n  var self = this;\n\n  /**\n   * Fire an interaction event.\n   *\n   * @param {string} type local event name, e.g. element.click.\n   * @param {DOMEvent} event native event\n   * @param {djs.model.Base} [element] the diagram element to emit the event on;\n   *                                   defaults to the event target\n   */\n  function fire(type, event, element) {\n\n    if (isIgnored(type, event)) {\n      return;\n    }\n\n    var target, gfx, returnValue;\n\n    if (!element) {\n      target = event.delegateTarget || event.target;\n\n      if (target) {\n        gfx = target;\n        element = elementRegistry.get(gfx);\n      }\n    } else {\n      gfx = elementRegistry.getGraphics(element);\n    }\n\n    if (!gfx || !element) {\n      return;\n    }\n\n    returnValue = eventBus.fire(type, {\n      element: element,\n      gfx: gfx,\n      originalEvent: event\n    });\n\n    if (returnValue === false) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n\n  // TODO(nikku): document this\n  var handlers = {};\n\n  function mouseHandler(localEventName) {\n    return handlers[localEventName];\n  }\n\n  function isIgnored(localEventName, event) {\n\n    var filter = ignoredFilters[localEventName] || isPrimaryButton;\n\n    // only react on left mouse button interactions\n    // except for interaction events that are enabled\n    // for secundary mouse button\n    return !filter(event);\n  }\n\n  var bindings = {\n    click: 'element.click',\n    contextmenu: 'element.contextmenu',\n    dblclick: 'element.dblclick',\n    mousedown: 'element.mousedown',\n    mousemove: 'element.mousemove',\n    mouseover: 'element.hover',\n    mouseout: 'element.out',\n    mouseup: 'element.mouseup',\n  };\n\n  var ignoredFilters = {\n    'element.contextmenu': allowAll,\n    'element.mousedown': allowPrimaryAndAuxiliary,\n    'element.mouseup': allowPrimaryAndAuxiliary,\n    'element.click': allowPrimaryAndAuxiliary,\n    'element.dblclick': allowPrimaryAndAuxiliary\n  };\n\n\n  // manual event trigger //////////\n\n  /**\n   * Trigger an interaction event (based on a native dom event)\n   * on the target shape or connection.\n   *\n   * @param {string} eventName the name of the triggered DOM event\n   * @param {MouseEvent} event\n   * @param {djs.model.Base} targetElement\n   */\n  function triggerMouseEvent(eventName, event, targetElement) {\n\n    // i.e. element.mousedown...\n    var localEventName = bindings[eventName];\n\n    if (!localEventName) {\n      throw new Error('unmapped DOM event name <' + eventName + '>');\n    }\n\n    return fire(localEventName, event, targetElement);\n  }\n\n\n  var ELEMENT_SELECTOR = 'svg, .djs-element';\n\n  // event handling ///////\n\n  function registerEvent(node, event, localEvent, ignoredFilter) {\n\n    var handler = handlers[localEvent] = function(event) {\n      fire(localEvent, event);\n    };\n\n    if (ignoredFilter) {\n      ignoredFilters[localEvent] = ignoredFilter;\n    }\n\n    handler.$delegate = domDelegate.bind(node, ELEMENT_SELECTOR, event, handler);\n  }\n\n  function unregisterEvent(node, event, localEvent) {\n\n    var handler = mouseHandler(localEvent);\n\n    if (!handler) {\n      return;\n    }\n\n    domDelegate.unbind(node, event, handler.$delegate);\n  }\n\n  function registerEvents(svg) {\n    forEach(bindings, function(val, key) {\n      registerEvent(svg, key, val);\n    });\n  }\n\n  function unregisterEvents(svg) {\n    forEach(bindings, function(val, key) {\n      unregisterEvent(svg, key, val);\n    });\n  }\n\n  eventBus.on('canvas.destroy', function(event) {\n    unregisterEvents(event.svg);\n  });\n\n  eventBus.on('canvas.init', function(event) {\n    registerEvents(event.svg);\n  });\n\n\n  // hit box updating ////////////////\n\n  eventBus.on([ 'shape.added', 'connection.added' ], function(event) {\n    var element = event.element,\n        gfx = event.gfx;\n\n    eventBus.fire('interactionEvents.createHit', { element: element, gfx: gfx });\n  });\n\n  // Update djs-hit on change.\n  // A low priortity is necessary, because djs-hit of labels has to be updated\n  // after the label bounds have been updated in the renderer.\n  eventBus.on([\n    'shape.changed',\n    'connection.changed'\n  ], LOW_PRIORITY, function(event) {\n\n    var element = event.element,\n        gfx = event.gfx;\n\n    eventBus.fire('interactionEvents.updateHit', { element: element, gfx: gfx });\n  });\n\n  eventBus.on('interactionEvents.createHit', LOW_PRIORITY, function(event) {\n    var element = event.element,\n        gfx = event.gfx;\n\n    self.createDefaultHit(element, gfx);\n  });\n\n  eventBus.on('interactionEvents.updateHit', function(event) {\n    var element = event.element,\n        gfx = event.gfx;\n\n    self.updateDefaultHit(element, gfx);\n  });\n\n\n  // hit styles ////////////\n\n  var STROKE_HIT_STYLE = createHitStyle('djs-hit djs-hit-stroke');\n\n  var CLICK_STROKE_HIT_STYLE = createHitStyle('djs-hit djs-hit-click-stroke');\n\n  var ALL_HIT_STYLE = createHitStyle('djs-hit djs-hit-all');\n\n  var HIT_TYPES = {\n    'all': ALL_HIT_STYLE,\n    'click-stroke': CLICK_STROKE_HIT_STYLE,\n    'stroke': STROKE_HIT_STYLE\n  };\n\n  function createHitStyle(classNames, attrs) {\n\n    attrs = assign({\n      stroke: 'white',\n      strokeWidth: 15\n    }, attrs || {});\n\n    return styles.cls(classNames, [ 'no-fill', 'no-border' ], attrs);\n  }\n\n\n  // style helpers ///////////////\n\n  function applyStyle(hit, type) {\n\n    var attrs = HIT_TYPES[type];\n\n    if (!attrs) {\n      throw new Error('invalid hit type <' + type + '>');\n    }\n\n    svgAttr(hit, attrs);\n\n    return hit;\n  }\n\n  function appendHit(gfx, hit) {\n    svgAppend(gfx, hit);\n  }\n\n\n  // API\n\n  /**\n   * Remove hints on the given graphics.\n   *\n   * @param {SVGElement} gfx\n   */\n  this.removeHits = function(gfx) {\n    var hits = domQueryAll('.djs-hit', gfx);\n\n    forEach(hits, svgRemove);\n  };\n\n  /**\n   * Create default hit for the given element.\n   *\n   * @param {djs.model.Base} element\n   * @param {SVGElement} gfx\n   *\n   * @return {SVGElement} created hit\n   */\n  this.createDefaultHit = function(element, gfx) {\n    var waypoints = element.waypoints,\n        isFrame = element.isFrame,\n        boxType;\n\n    if (waypoints) {\n      return this.createWaypointsHit(gfx, waypoints);\n    } else {\n\n      boxType = isFrame ? 'stroke' : 'all';\n\n      return this.createBoxHit(gfx, boxType, {\n        width: element.width,\n        height: element.height\n      });\n    }\n  };\n\n  /**\n   * Create hits for the given waypoints.\n   *\n   * @param {SVGElement} gfx\n   * @param {Array<Point>} waypoints\n   *\n   * @return {SVGElement}\n   */\n  this.createWaypointsHit = function(gfx, waypoints) {\n\n    var hit = createLine(waypoints);\n\n    applyStyle(hit, 'stroke');\n\n    appendHit(gfx, hit);\n\n    return hit;\n  };\n\n  /**\n   * Create hits for a box.\n   *\n   * @param {SVGElement} gfx\n   * @param {string} hitType\n   * @param {Object} attrs\n   *\n   * @return {SVGElement}\n   */\n  this.createBoxHit = function(gfx, type, attrs) {\n\n    attrs = assign({\n      x: 0,\n      y: 0\n    }, attrs);\n\n    var hit = svgCreate('rect');\n\n    applyStyle(hit, type);\n\n    svgAttr(hit, attrs);\n\n    appendHit(gfx, hit);\n\n    return hit;\n  };\n\n  /**\n   * Update default hit of the element.\n   *\n   * @param  {djs.model.Base} element\n   * @param  {SVGElement} gfx\n   *\n   * @return {SVGElement} updated hit\n   */\n  this.updateDefaultHit = function(element, gfx) {\n\n    var hit = domQuery('.djs-hit', gfx);\n\n    if (!hit) {\n      return;\n    }\n\n    if (element.waypoints) {\n      updateLine(hit, element.waypoints);\n    } else {\n      svgAttr(hit, {\n        width: element.width,\n        height: element.height\n      });\n    }\n\n    return hit;\n  };\n\n  this.fire = fire;\n\n  this.triggerMouseEvent = triggerMouseEvent;\n\n  this.mouseHandler = mouseHandler;\n\n  this.registerEvent = registerEvent;\n  this.unregisterEvent = unregisterEvent;\n}\n\n\nInteractionEvents.$inject = [\n  'eventBus',\n  'elementRegistry',\n  'styles'\n];\n\n\n/**\n * An event indicating that the mouse hovered over an element\n *\n * @event element.hover\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has left an element\n *\n * @event element.out\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has clicked an element\n *\n * @event element.click\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has double clicked an element\n *\n * @event element.dblclick\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has gone down on an element.\n *\n * @event element.mousedown\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the mouse has gone up on an element.\n *\n * @event element.mouseup\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */\n\n/**\n * An event indicating that the context menu action is triggered\n * via mouse or touch controls.\n *\n * @event element.contextmenu\n *\n * @type {Object}\n * @property {djs.model.Base} element\n * @property {SVGElement} gfx\n * @property {Event} originalEvent\n */"],"mappings":"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"},"metadata":{},"sourceType":"module"}