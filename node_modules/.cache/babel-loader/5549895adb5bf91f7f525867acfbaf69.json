{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _get from 'lodash/get';\nimport _isNil from 'lodash/isNil';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { createElement } from 'react';\nimport { childrenUtils, createHTMLLabel, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useWidthProp } from '../../lib';\nimport Checkbox from '../../modules/Checkbox';\nimport Radio from '../../addons/Radio';\n\n/**\r\n * A field is a form element containing a label and an input.\r\n * @see Form\r\n * @see Button\r\n * @see Checkbox\r\n * @see Dropdown\r\n * @see Input\r\n * @see Radio\r\n * @see Select\r\n * @see Visibility\r\n */\nfunction FormField(props) {\n  var children = props.children,\n    className = props.className,\n    content = props.content,\n    control = props.control,\n    disabled = props.disabled,\n    error = props.error,\n    inline = props.inline,\n    label = props.label,\n    required = props.required,\n    type = props.type,\n    width = props.width;\n  var classes = cx(useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(inline, 'inline'), useKeyOnly(required, 'required'), useWidthProp(width, 'wide'), 'field', className);\n  var rest = getUnhandledProps(FormField, props);\n  var ElementType = getElementType(FormField, props);\n\n  // ----------------------------------------\n  // No Control\n  // ----------------------------------------\n\n  if (_isNil(control)) {\n    if (_isNil(label)) {\n      return React.createElement(ElementType, _extends({}, rest, {\n        className: classes\n      }), childrenUtils.isNil(children) ? content : children);\n    }\n    return React.createElement(ElementType, _extends({}, rest, {\n      className: classes\n    }), createHTMLLabel(label));\n  }\n\n  // ----------------------------------------\n  // Checkbox/Radio Control\n  // ----------------------------------------\n  var controlProps = _extends({}, rest, {\n    content: content,\n    children: children,\n    disabled: disabled,\n    required: required,\n    type: type\n\n    // wrap HTML checkboxes/radios in the label\n  });\n  if (control === 'input' && (type === 'checkbox' || type === 'radio')) {\n    return React.createElement(ElementType, {\n      className: classes\n    }, React.createElement('label', null, createElement(control, controlProps), ' ', label));\n  }\n\n  // pass label prop to controls that support it\n  if (control === Checkbox || control === Radio) {\n    return React.createElement(ElementType, {\n      className: classes\n    }, createElement(control, _extends({}, controlProps, {\n      label: label\n    })));\n  }\n\n  // ----------------------------------------\n  // Other Control\n  // ----------------------------------------\n\n  return React.createElement(ElementType, {\n    className: classes\n  }, createHTMLLabel(label, {\n    defaultProps: {\n      htmlFor: _get(controlProps, 'id')\n    }\n  }), createElement(control, controlProps));\n}\nFormField.handledProps = ['as', 'children', 'className', 'content', 'control', 'disabled', 'error', 'inline', 'label', 'required', 'type', 'width'];\nFormField._meta = {\n  name: 'FormField',\n  parent: 'Form',\n  type: META.TYPES.COLLECTION\n};\nFormField.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: customPropTypes.as,\n  /** Primary content. */\n  children: PropTypes.node,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** Shorthand for primary content. */\n  content: customPropTypes.contentShorthand,\n  /**\r\n   * A form control component (i.e. Dropdown) or HTML tagName (i.e. 'input').\r\n   * Extra FormField props are passed to the control component.\r\n   * Mutually exclusive with children.\r\n   */\n  control: customPropTypes.some([PropTypes.func, PropTypes.oneOf(['button', 'input', 'select', 'textarea'])]),\n  /** Individual fields may be disabled. */\n  disabled: PropTypes.bool,\n  /** Individual fields may display an error state. */\n  error: PropTypes.bool,\n  /** A field can have its label next to instead of above it. */\n  inline: PropTypes.bool,\n  // Heads Up!\n  // Do not disallow children with `label` shorthand\n  // The `control` might accept a `label` prop and `children`\n  /** Mutually exclusive with children. */\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.object]),\n  /** A field can show that input is mandatory. */\n  required: PropTypes.bool,\n  /** Passed to the control component (i.e. <input type='password' />) */\n  type: customPropTypes.every([customPropTypes.demand(['control'])]\n  // don't strictly validate HTML types\n  // a control might be passed that uses a `type` prop with unknown values\n  // let the control validate if for us\n  ),\n\n  /** A field can specify its width in grid columns */\n  width: PropTypes.oneOf(SUI.WIDTHS)\n} : {};\nexport default FormField;","map":{"version":3,"names":["_extends","_get","_isNil","cx","PropTypes","React","createElement","childrenUtils","createHTMLLabel","customPropTypes","getElementType","getUnhandledProps","META","SUI","useKeyOnly","useWidthProp","Checkbox","Radio","FormField","props","children","className","content","control","disabled","error","inline","label","required","type","width","classes","rest","ElementType","isNil","controlProps","defaultProps","htmlFor","handledProps","_meta","name","parent","TYPES","COLLECTION","propTypes","process","env","NODE_ENV","as","node","string","contentShorthand","some","func","oneOf","bool","oneOfType","object","every","demand","WIDTHS"],"sources":["C:/Users/sam/final/camunda-react/node_modules/react-semantic-redux-form/node_modules/semantic-ui-react/dist/es/collections/Form/FormField.js"],"sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\r\nimport _get from 'lodash/get';\r\nimport _isNil from 'lodash/isNil';\r\nimport cx from 'classnames';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport React, { createElement } from 'react';\r\n\r\nimport { childrenUtils, createHTMLLabel, customPropTypes, getElementType, getUnhandledProps, META, SUI, useKeyOnly, useWidthProp } from '../../lib';\r\nimport Checkbox from '../../modules/Checkbox';\r\nimport Radio from '../../addons/Radio';\r\n\r\n/**\r\n * A field is a form element containing a label and an input.\r\n * @see Form\r\n * @see Button\r\n * @see Checkbox\r\n * @see Dropdown\r\n * @see Input\r\n * @see Radio\r\n * @see Select\r\n * @see Visibility\r\n */\r\nfunction FormField(props) {\r\n  var children = props.children,\r\n      className = props.className,\r\n      content = props.content,\r\n      control = props.control,\r\n      disabled = props.disabled,\r\n      error = props.error,\r\n      inline = props.inline,\r\n      label = props.label,\r\n      required = props.required,\r\n      type = props.type,\r\n      width = props.width;\r\n\r\n\r\n  var classes = cx(useKeyOnly(disabled, 'disabled'), useKeyOnly(error, 'error'), useKeyOnly(inline, 'inline'), useKeyOnly(required, 'required'), useWidthProp(width, 'wide'), 'field', className);\r\n  var rest = getUnhandledProps(FormField, props);\r\n  var ElementType = getElementType(FormField, props);\r\n\r\n  // ----------------------------------------\r\n  // No Control\r\n  // ----------------------------------------\r\n\r\n  if (_isNil(control)) {\r\n    if (_isNil(label)) {\r\n      return React.createElement(\r\n        ElementType,\r\n        _extends({}, rest, { className: classes }),\r\n        childrenUtils.isNil(children) ? content : children\r\n      );\r\n    }\r\n\r\n    return React.createElement(\r\n      ElementType,\r\n      _extends({}, rest, { className: classes }),\r\n      createHTMLLabel(label)\r\n    );\r\n  }\r\n\r\n  // ----------------------------------------\r\n  // Checkbox/Radio Control\r\n  // ----------------------------------------\r\n  var controlProps = _extends({}, rest, { content: content, children: children, disabled: disabled, required: required, type: type\r\n\r\n    // wrap HTML checkboxes/radios in the label\r\n  });if (control === 'input' && (type === 'checkbox' || type === 'radio')) {\r\n    return React.createElement(\r\n      ElementType,\r\n      { className: classes },\r\n      React.createElement(\r\n        'label',\r\n        null,\r\n        createElement(control, controlProps),\r\n        ' ',\r\n        label\r\n      )\r\n    );\r\n  }\r\n\r\n  // pass label prop to controls that support it\r\n  if (control === Checkbox || control === Radio) {\r\n    return React.createElement(\r\n      ElementType,\r\n      { className: classes },\r\n      createElement(control, _extends({}, controlProps, { label: label }))\r\n    );\r\n  }\r\n\r\n  // ----------------------------------------\r\n  // Other Control\r\n  // ----------------------------------------\r\n\r\n  return React.createElement(\r\n    ElementType,\r\n    { className: classes },\r\n    createHTMLLabel(label, { defaultProps: {\r\n        htmlFor: _get(controlProps, 'id') }\r\n    }),\r\n    createElement(control, controlProps)\r\n  );\r\n}\r\n\r\nFormField.handledProps = ['as', 'children', 'className', 'content', 'control', 'disabled', 'error', 'inline', 'label', 'required', 'type', 'width'];\r\nFormField._meta = {\r\n  name: 'FormField',\r\n  parent: 'Form',\r\n  type: META.TYPES.COLLECTION\r\n};\r\n\r\nFormField.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: customPropTypes.as,\r\n\r\n  /** Primary content. */\r\n  children: PropTypes.node,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** Shorthand for primary content. */\r\n  content: customPropTypes.contentShorthand,\r\n\r\n  /**\r\n   * A form control component (i.e. Dropdown) or HTML tagName (i.e. 'input').\r\n   * Extra FormField props are passed to the control component.\r\n   * Mutually exclusive with children.\r\n   */\r\n  control: customPropTypes.some([PropTypes.func, PropTypes.oneOf(['button', 'input', 'select', 'textarea'])]),\r\n\r\n  /** Individual fields may be disabled. */\r\n  disabled: PropTypes.bool,\r\n\r\n  /** Individual fields may display an error state. */\r\n  error: PropTypes.bool,\r\n\r\n  /** A field can have its label next to instead of above it. */\r\n  inline: PropTypes.bool,\r\n\r\n  // Heads Up!\r\n  // Do not disallow children with `label` shorthand\r\n  // The `control` might accept a `label` prop and `children`\r\n  /** Mutually exclusive with children. */\r\n  label: PropTypes.oneOfType([PropTypes.node, PropTypes.object]),\r\n\r\n  /** A field can show that input is mandatory. */\r\n  required: PropTypes.bool,\r\n\r\n  /** Passed to the control component (i.e. <input type='password' />) */\r\n  type: customPropTypes.every([customPropTypes.demand(['control'])]\r\n  // don't strictly validate HTML types\r\n  // a control might be passed that uses a `type` prop with unknown values\r\n  // let the control validate if for us\r\n  ),\r\n\r\n  /** A field can specify its width in grid columns */\r\n  width: PropTypes.oneOf(SUI.WIDTHS)\r\n} : {};\r\n\r\nexport default FormField;"],"mappings":"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"},"metadata":{},"sourceType":"module"}