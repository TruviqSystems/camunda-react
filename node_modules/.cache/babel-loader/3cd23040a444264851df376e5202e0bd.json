{"ast":null,"code":"import { isCmd, isKey, isCopy, isPaste, isUndo, isRedo } from './KeyboardUtil';\nvar LOW_PRIORITY = 500;\nexport var KEYCODE_C = 67;\nexport var KEYCODE_V = 86;\nexport var KEYCODE_Y = 89;\nexport var KEYCODE_Z = 90;\nexport var KEYS_COPY = ['c', 'C', KEYCODE_C];\nexport var KEYS_PASTE = ['v', 'V', KEYCODE_V];\nexport var KEYS_REDO = ['y', 'Y', KEYCODE_Y];\nexport var KEYS_UNDO = ['z', 'Z', KEYCODE_Z];\n\n/**\n * Adds default keyboard bindings.\n *\n * This does not pull in any features will bind only actions that\n * have previously been registered against the editorActions component.\n *\n * @param {EventBus} eventBus\n * @param {Keyboard} keyboard\n */\nexport default function KeyboardBindings(eventBus, keyboard) {\n  var self = this;\n  eventBus.on('editorActions.init', LOW_PRIORITY, function (event) {\n    var editorActions = event.editorActions;\n    self.registerBindings(keyboard, editorActions);\n  });\n}\nKeyboardBindings.$inject = ['eventBus', 'keyboard'];\n\n/**\n * Register available keyboard bindings.\n *\n * @param {Keyboard} keyboard\n * @param {EditorActions} editorActions\n */\nKeyboardBindings.prototype.registerBindings = function (keyboard, editorActions) {\n  /**\n   * Add keyboard binding if respective editor action\n   * is registered.\n   *\n   * @param {string} action name\n   * @param {Function} fn that implements the key binding\n   */\n  function addListener(action, fn) {\n    if (editorActions.isRegistered(action)) {\n      keyboard.addListener(fn);\n    }\n  }\n\n  // undo\n  // (CTRL|CMD) + Z\n  addListener('undo', function (context) {\n    var event = context.keyEvent;\n    if (isUndo(event)) {\n      editorActions.trigger('undo');\n      return true;\n    }\n  });\n\n  // redo\n  // CTRL + Y\n  // CMD + SHIFT + Z\n  addListener('redo', function (context) {\n    var event = context.keyEvent;\n    if (isRedo(event)) {\n      editorActions.trigger('redo');\n      return true;\n    }\n  });\n\n  // copy\n  // CTRL/CMD + C\n  addListener('copy', function (context) {\n    var event = context.keyEvent;\n    if (isCopy(event)) {\n      editorActions.trigger('copy');\n      return true;\n    }\n  });\n\n  // paste\n  // CTRL/CMD + V\n  addListener('paste', function (context) {\n    var event = context.keyEvent;\n    if (isPaste(event)) {\n      editorActions.trigger('paste');\n      return true;\n    }\n  });\n\n  // zoom in one step\n  // CTRL/CMD + +\n  addListener('stepZoom', function (context) {\n    var event = context.keyEvent;\n\n    // quirk: it has to be triggered by `=` as well to work on international keyboard layout\n    // cf: https://github.com/bpmn-io/bpmn-js/issues/1362#issuecomment-722989754\n    if (isKey(['+', 'Add', '='], event) && isCmd(event)) {\n      editorActions.trigger('stepZoom', {\n        value: 1\n      });\n      return true;\n    }\n  });\n\n  // zoom out one step\n  // CTRL + -\n  addListener('stepZoom', function (context) {\n    var event = context.keyEvent;\n    if (isKey(['-', 'Subtract'], event) && isCmd(event)) {\n      editorActions.trigger('stepZoom', {\n        value: -1\n      });\n      return true;\n    }\n  });\n\n  // zoom to the default level\n  // CTRL + 0\n  addListener('zoom', function (context) {\n    var event = context.keyEvent;\n    if (isKey('0', event) && isCmd(event)) {\n      editorActions.trigger('zoom', {\n        value: 1\n      });\n      return true;\n    }\n  });\n\n  // delete selected element\n  // DEL\n  addListener('removeSelection', function (context) {\n    var event = context.keyEvent;\n    if (isKey(['Backspace', 'Delete', 'Del'], event)) {\n      editorActions.trigger('removeSelection');\n      return true;\n    }\n  });\n};","map":{"version":3,"names":["isCmd","isKey","isCopy","isPaste","isUndo","isRedo","LOW_PRIORITY","KEYCODE_C","KEYCODE_V","KEYCODE_Y","KEYCODE_Z","KEYS_COPY","KEYS_PASTE","KEYS_REDO","KEYS_UNDO","KeyboardBindings","eventBus","keyboard","self","on","event","editorActions","registerBindings","$inject","prototype","addListener","action","fn","isRegistered","context","keyEvent","trigger","value"],"sources":["C:/Users/KondalaRaoThota/Truviq_Camunda/camunda-react/node_modules/diagram-js/lib/features/keyboard/KeyboardBindings.js"],"sourcesContent":["import {\n  isCmd,\n  isKey,\n  isCopy,\n  isPaste,\n  isUndo,\n  isRedo\n} from './KeyboardUtil';\n\nvar LOW_PRIORITY = 500;\n\nexport var KEYCODE_C = 67;\nexport var KEYCODE_V = 86;\nexport var KEYCODE_Y = 89;\nexport var KEYCODE_Z = 90;\n\nexport var KEYS_COPY = ['c', 'C', KEYCODE_C ];\nexport var KEYS_PASTE = [ 'v', 'V', KEYCODE_V ];\nexport var KEYS_REDO = [ 'y', 'Y', KEYCODE_Y ];\nexport var KEYS_UNDO = [ 'z', 'Z', KEYCODE_Z ];\n\n\n/**\n * Adds default keyboard bindings.\n *\n * This does not pull in any features will bind only actions that\n * have previously been registered against the editorActions component.\n *\n * @param {EventBus} eventBus\n * @param {Keyboard} keyboard\n */\nexport default function KeyboardBindings(eventBus, keyboard) {\n\n  var self = this;\n\n  eventBus.on('editorActions.init', LOW_PRIORITY, function(event) {\n\n    var editorActions = event.editorActions;\n\n    self.registerBindings(keyboard, editorActions);\n  });\n}\n\nKeyboardBindings.$inject = [\n  'eventBus',\n  'keyboard'\n];\n\n\n/**\n * Register available keyboard bindings.\n *\n * @param {Keyboard} keyboard\n * @param {EditorActions} editorActions\n */\nKeyboardBindings.prototype.registerBindings = function(keyboard, editorActions) {\n\n  /**\n   * Add keyboard binding if respective editor action\n   * is registered.\n   *\n   * @param {string} action name\n   * @param {Function} fn that implements the key binding\n   */\n  function addListener(action, fn) {\n\n    if (editorActions.isRegistered(action)) {\n      keyboard.addListener(fn);\n    }\n  }\n\n\n  // undo\n  // (CTRL|CMD) + Z\n  addListener('undo', function(context) {\n\n    var event = context.keyEvent;\n\n    if (isUndo(event)) {\n      editorActions.trigger('undo');\n\n      return true;\n    }\n  });\n\n  // redo\n  // CTRL + Y\n  // CMD + SHIFT + Z\n  addListener('redo', function(context) {\n\n    var event = context.keyEvent;\n\n    if (isRedo(event)) {\n      editorActions.trigger('redo');\n\n      return true;\n    }\n  });\n\n  // copy\n  // CTRL/CMD + C\n  addListener('copy', function(context) {\n\n    var event = context.keyEvent;\n\n    if (isCopy(event)) {\n      editorActions.trigger('copy');\n\n      return true;\n    }\n  });\n\n  // paste\n  // CTRL/CMD + V\n  addListener('paste', function(context) {\n\n    var event = context.keyEvent;\n\n    if (isPaste(event)) {\n      editorActions.trigger('paste');\n\n      return true;\n    }\n  });\n\n  // zoom in one step\n  // CTRL/CMD + +\n  addListener('stepZoom', function(context) {\n\n    var event = context.keyEvent;\n\n    // quirk: it has to be triggered by `=` as well to work on international keyboard layout\n    // cf: https://github.com/bpmn-io/bpmn-js/issues/1362#issuecomment-722989754\n    if (isKey([ '+', 'Add', '=' ], event) && isCmd(event)) {\n      editorActions.trigger('stepZoom', { value: 1 });\n\n      return true;\n    }\n  });\n\n  // zoom out one step\n  // CTRL + -\n  addListener('stepZoom', function(context) {\n\n    var event = context.keyEvent;\n\n    if (isKey([ '-', 'Subtract' ], event) && isCmd(event)) {\n      editorActions.trigger('stepZoom', { value: -1 });\n\n      return true;\n    }\n  });\n\n  // zoom to the default level\n  // CTRL + 0\n  addListener('zoom', function(context) {\n\n    var event = context.keyEvent;\n\n    if (isKey('0', event) && isCmd(event)) {\n      editorActions.trigger('zoom', { value: 1 });\n\n      return true;\n    }\n  });\n\n  // delete selected element\n  // DEL\n  addListener('removeSelection', function(context) {\n\n    var event = context.keyEvent;\n\n    if (isKey(['Backspace', 'Delete', 'Del' ], event)) {\n      editorActions.trigger('removeSelection');\n\n      return true;\n    }\n  });\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}