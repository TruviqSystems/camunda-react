{"ast":null,"code":"function ensureImported(element, target) {\n  if (element.ownerDocument !== target.ownerDocument) {\n    try {\n      // may fail on webkit\n      return target.ownerDocument.importNode(element, true);\n    } catch (e) {\n      // ignore\n    }\n  }\n  return element;\n}\n\n/**\r\n * appendTo utility\r\n */\n\n/**\r\n * Append a node to a target element and return the appended node.\r\n *\r\n * @param  {SVGElement} element\r\n * @param  {SVGElement} target\r\n *\r\n * @return {SVGElement} the appended node\r\n */\nfunction appendTo(element, target) {\n  return target.appendChild(ensureImported(element, target));\n}\n\n/**\r\n * append utility\r\n */\n\n/**\r\n * Append a node to an element\r\n *\r\n * @param  {SVGElement} element\r\n * @param  {SVGElement} node\r\n *\r\n * @return {SVGElement} the element\r\n */\nfunction append(target, node) {\n  appendTo(node, target);\n  return target;\n}\n\n/**\r\n * attribute accessor utility\r\n */\n\nvar LENGTH_ATTR = 2;\nvar CSS_PROPERTIES = {\n  'alignment-baseline': 1,\n  'baseline-shift': 1,\n  'clip': 1,\n  'clip-path': 1,\n  'clip-rule': 1,\n  'color': 1,\n  'color-interpolation': 1,\n  'color-interpolation-filters': 1,\n  'color-profile': 1,\n  'color-rendering': 1,\n  'cursor': 1,\n  'direction': 1,\n  'display': 1,\n  'dominant-baseline': 1,\n  'enable-background': 1,\n  'fill': 1,\n  'fill-opacity': 1,\n  'fill-rule': 1,\n  'filter': 1,\n  'flood-color': 1,\n  'flood-opacity': 1,\n  'font': 1,\n  'font-family': 1,\n  'font-size': LENGTH_ATTR,\n  'font-size-adjust': 1,\n  'font-stretch': 1,\n  'font-style': 1,\n  'font-variant': 1,\n  'font-weight': 1,\n  'glyph-orientation-horizontal': 1,\n  'glyph-orientation-vertical': 1,\n  'image-rendering': 1,\n  'kerning': 1,\n  'letter-spacing': 1,\n  'lighting-color': 1,\n  'marker': 1,\n  'marker-end': 1,\n  'marker-mid': 1,\n  'marker-start': 1,\n  'mask': 1,\n  'opacity': 1,\n  'overflow': 1,\n  'pointer-events': 1,\n  'shape-rendering': 1,\n  'stop-color': 1,\n  'stop-opacity': 1,\n  'stroke': 1,\n  'stroke-dasharray': 1,\n  'stroke-dashoffset': 1,\n  'stroke-linecap': 1,\n  'stroke-linejoin': 1,\n  'stroke-miterlimit': 1,\n  'stroke-opacity': 1,\n  'stroke-width': LENGTH_ATTR,\n  'text-anchor': 1,\n  'text-decoration': 1,\n  'text-rendering': 1,\n  'unicode-bidi': 1,\n  'visibility': 1,\n  'word-spacing': 1,\n  'writing-mode': 1\n};\nfunction getAttribute(node, name) {\n  if (CSS_PROPERTIES[name]) {\n    return node.style[name];\n  } else {\n    return node.getAttributeNS(null, name);\n  }\n}\nfunction setAttribute(node, name, value) {\n  var hyphenated = name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n  var type = CSS_PROPERTIES[hyphenated];\n  if (type) {\n    // append pixel unit, unless present\n    if (type === LENGTH_ATTR && typeof value === 'number') {\n      value = String(value) + 'px';\n    }\n    node.style[hyphenated] = value;\n  } else {\n    node.setAttributeNS(null, name, value);\n  }\n}\nfunction setAttributes(node, attrs) {\n  var names = Object.keys(attrs),\n    i,\n    name;\n  for (i = 0, name; name = names[i]; i++) {\n    setAttribute(node, name, attrs[name]);\n  }\n}\n\n/**\r\n * Gets or sets raw attributes on a node.\r\n *\r\n * @param  {SVGElement} node\r\n * @param  {Object} [attrs]\r\n * @param  {String} [name]\r\n * @param  {String} [value]\r\n *\r\n * @return {String}\r\n */\nfunction attr(node, name, value) {\n  if (typeof name === 'string') {\n    if (value !== undefined) {\n      setAttribute(node, name, value);\n    } else {\n      return getAttribute(node, name);\n    }\n  } else {\n    setAttributes(node, name);\n  }\n  return node;\n}\n\n/**\r\n * Clear utility\r\n */\nfunction index(arr, obj) {\n  if (arr.indexOf) {\n    return arr.indexOf(obj);\n  }\n  for (var i = 0; i < arr.length; ++i) {\n    if (arr[i] === obj) {\n      return i;\n    }\n  }\n  return -1;\n}\nvar re = /\\s+/;\nvar toString = Object.prototype.toString;\nfunction defined(o) {\n  return typeof o !== 'undefined';\n}\n\n/**\r\n * Wrap `el` in a `ClassList`.\r\n *\r\n * @param {Element} el\r\n * @return {ClassList}\r\n * @api public\r\n */\n\nfunction classes(el) {\n  return new ClassList(el);\n}\nfunction ClassList(el) {\n  if (!el || !el.nodeType) {\n    throw new Error('A DOM element reference is required');\n  }\n  this.el = el;\n  this.list = el.classList;\n}\n\n/**\r\n * Add class `name` if not already present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\n\nClassList.prototype.add = function (name) {\n  // classList\n  if (this.list) {\n    this.list.add(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = index(arr, name);\n  if (!~i) {\n    arr.push(name);\n  }\n  if (defined(this.el.className.baseVal)) {\n    this.el.className.baseVal = arr.join(' ');\n  } else {\n    this.el.className = arr.join(' ');\n  }\n  return this;\n};\n\n/**\r\n * Remove class `name` when present, or\r\n * pass a regular expression to remove\r\n * any which match.\r\n *\r\n * @param {String|RegExp} name\r\n * @return {ClassList}\r\n * @api public\r\n */\n\nClassList.prototype.remove = function (name) {\n  if ('[object RegExp]' === toString.call(name)) {\n    return this.removeMatching(name);\n  }\n\n  // classList\n  if (this.list) {\n    this.list.remove(name);\n    return this;\n  }\n\n  // fallback\n  var arr = this.array();\n  var i = index(arr, name);\n  if (~i) {\n    arr.splice(i, 1);\n  }\n  this.el.className.baseVal = arr.join(' ');\n  return this;\n};\n\n/**\r\n * Remove all classes matching `re`.\r\n *\r\n * @param {RegExp} re\r\n * @return {ClassList}\r\n * @api private\r\n */\n\nClassList.prototype.removeMatching = function (re) {\n  var arr = this.array();\n  for (var i = 0; i < arr.length; i++) {\n    if (re.test(arr[i])) {\n      this.remove(arr[i]);\n    }\n  }\n  return this;\n};\n\n/**\r\n * Toggle class `name`, can force state via `force`.\r\n *\r\n * For browsers that support classList, but do not support `force` yet,\r\n * the mistake will be detected and corrected.\r\n *\r\n * @param {String} name\r\n * @param {Boolean} force\r\n * @return {ClassList}\r\n * @api public\r\n */\n\nClassList.prototype.toggle = function (name, force) {\n  // classList\n  if (this.list) {\n    if (defined(force)) {\n      if (force !== this.list.toggle(name, force)) {\n        this.list.toggle(name); // toggle again to correct\n      }\n    } else {\n      this.list.toggle(name);\n    }\n    return this;\n  }\n\n  // fallback\n  if (defined(force)) {\n    if (!force) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  } else {\n    if (this.has(name)) {\n      this.remove(name);\n    } else {\n      this.add(name);\n    }\n  }\n  return this;\n};\n\n/**\r\n * Return an array of classes.\r\n *\r\n * @return {Array}\r\n * @api public\r\n */\n\nClassList.prototype.array = function () {\n  var className = this.el.getAttribute('class') || '';\n  var str = className.replace(/^\\s+|\\s+$/g, '');\n  var arr = str.split(re);\n  if ('' === arr[0]) {\n    arr.shift();\n  }\n  return arr;\n};\n\n/**\r\n * Check if class `name` is present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\n\nClassList.prototype.has = ClassList.prototype.contains = function (name) {\n  return this.list ? this.list.contains(name) : !!~index(this.array(), name);\n};\nfunction remove(element) {\n  var parent = element.parentNode;\n  if (parent) {\n    parent.removeChild(element);\n  }\n  return element;\n}\n\n/**\r\n * Clear utility\r\n */\n\n/**\r\n * Removes all children from the given element\r\n *\r\n * @param  {DOMElement} element\r\n * @return {DOMElement} the element (for chaining)\r\n */\nfunction clear(element) {\n  var child;\n  while (child = element.firstChild) {\n    remove(child);\n  }\n  return element;\n}\nfunction clone(element) {\n  return element.cloneNode(true);\n}\nvar ns = {\n  svg: 'http://www.w3.org/2000/svg'\n};\n\n/**\r\n * DOM parsing utility\r\n */\n\nvar SVG_START = '<svg xmlns=\"' + ns.svg + '\"';\nfunction parse(svg) {\n  var unwrap = false;\n\n  // ensure we import a valid svg document\n  if (svg.substring(0, 4) === '<svg') {\n    if (svg.indexOf(ns.svg) === -1) {\n      svg = SVG_START + svg.substring(4);\n    }\n  } else {\n    // namespace svg\n    svg = SVG_START + '>' + svg + '</svg>';\n    unwrap = true;\n  }\n  var parsed = parseDocument(svg);\n  if (!unwrap) {\n    return parsed;\n  }\n  var fragment = document.createDocumentFragment();\n  var parent = parsed.firstChild;\n  while (parent.firstChild) {\n    fragment.appendChild(parent.firstChild);\n  }\n  return fragment;\n}\nfunction parseDocument(svg) {\n  var parser;\n\n  // parse\n  parser = new DOMParser();\n  parser.async = false;\n  return parser.parseFromString(svg, 'text/xml');\n}\n\n/**\r\n * Create utility for SVG elements\r\n */\n\n/**\r\n * Create a specific type from name or SVG markup.\r\n *\r\n * @param {String} name the name or markup of the element\r\n * @param {Object} [attrs] attributes to set on the element\r\n *\r\n * @returns {SVGElement}\r\n */\nfunction create(name, attrs) {\n  var element;\n  if (name.charAt(0) === '<') {\n    element = parse(name).firstChild;\n    element = document.importNode(element, true);\n  } else {\n    element = document.createElementNS(ns.svg, name);\n  }\n  if (attrs) {\n    attr(element, attrs);\n  }\n  return element;\n}\n\n/**\r\n * Events handling utility\r\n */\n\nfunction on(node, event, listener, useCapture) {\n  node.addEventListener(event, listener, useCapture);\n}\nfunction off(node, event, listener, useCapture) {\n  node.removeEventListener(event, listener, useCapture);\n}\n\n/**\r\n * Geometry helpers\r\n */\n\n// fake node used to instantiate svg geometry elements\nvar node = null;\nfunction getNode() {\n  if (node === null) {\n    node = create('svg');\n  }\n  return node;\n}\nfunction extend(object, props) {\n  var i,\n    k,\n    keys = Object.keys(props);\n  for (i = 0; k = keys[i]; i++) {\n    object[k] = props[k];\n  }\n  return object;\n}\nfunction createPoint(x, y) {\n  var point = getNode().createSVGPoint();\n  switch (arguments.length) {\n    case 0:\n      return point;\n    case 2:\n      x = {\n        x: x,\n        y: y\n      };\n      break;\n  }\n  return extend(point, x);\n}\n\n/**\r\n * Create matrix via args.\r\n *\r\n * @example\r\n *\r\n * createMatrix({ a: 1, b: 1 });\r\n * createMatrix();\r\n * createMatrix(1, 2, 0, 0, 30, 20);\r\n *\r\n * @return {SVGMatrix}\r\n */\nfunction createMatrix(a, b, c, d, e, f) {\n  var matrix = getNode().createSVGMatrix();\n  switch (arguments.length) {\n    case 0:\n      return matrix;\n    case 1:\n      return extend(matrix, a);\n    case 6:\n      return extend(matrix, {\n        a: a,\n        b: b,\n        c: c,\n        d: d,\n        e: e,\n        f: f\n      });\n  }\n}\nfunction createTransform(matrix) {\n  if (matrix) {\n    return getNode().createSVGTransformFromMatrix(matrix);\n  } else {\n    return getNode().createSVGTransform();\n  }\n}\n\n/**\r\n * Serialization util\r\n */\n\nvar TEXT_ENTITIES = /([&<>]{1})/g;\nvar ATTR_ENTITIES = /([\\n\\r\"]{1})/g;\nvar ENTITY_REPLACEMENT = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '\\''\n};\nfunction escape(str, pattern) {\n  function replaceFn(match, entity) {\n    return ENTITY_REPLACEMENT[entity] || entity;\n  }\n  return str.replace(pattern, replaceFn);\n}\nfunction serialize(node, output) {\n  var i, len, attrMap, attrNode, childNodes;\n  switch (node.nodeType) {\n    // TEXT\n    case 3:\n      // replace special XML characters\n      output.push(escape(node.textContent, TEXT_ENTITIES));\n      break;\n\n    // ELEMENT\n    case 1:\n      output.push('<', node.tagName);\n      if (node.hasAttributes()) {\n        attrMap = node.attributes;\n        for (i = 0, len = attrMap.length; i < len; ++i) {\n          attrNode = attrMap.item(i);\n          output.push(' ', attrNode.name, '=\"', escape(attrNode.value, ATTR_ENTITIES), '\"');\n        }\n      }\n      if (node.hasChildNodes()) {\n        output.push('>');\n        childNodes = node.childNodes;\n        for (i = 0, len = childNodes.length; i < len; ++i) {\n          serialize(childNodes.item(i), output);\n        }\n        output.push('</', node.tagName, '>');\n      } else {\n        output.push('/>');\n      }\n      break;\n\n    // COMMENT\n    case 8:\n      output.push('<!--', escape(node.nodeValue, TEXT_ENTITIES), '-->');\n      break;\n\n    // CDATA\n    case 4:\n      output.push('<![CDATA[', node.nodeValue, ']]>');\n      break;\n    default:\n      throw new Error('unable to handle node ' + node.nodeType);\n  }\n  return output;\n}\n\n/**\r\n * innerHTML like functionality for SVG elements.\r\n * based on innerSVG (https://code.google.com/p/innersvg)\r\n */\n\nfunction set(element, svg) {\n  var parsed = parse(svg);\n\n  // clear element contents\n  clear(element);\n  if (!svg) {\n    return;\n  }\n  if (!isFragment(parsed)) {\n    // extract <svg> from parsed document\n    parsed = parsed.documentElement;\n  }\n  var nodes = slice(parsed.childNodes);\n\n  // import + append each node\n  for (var i = 0; i < nodes.length; i++) {\n    appendTo(nodes[i], element);\n  }\n}\nfunction get(element) {\n  var child = element.firstChild,\n    output = [];\n  while (child) {\n    serialize(child, output);\n    child = child.nextSibling;\n  }\n  return output.join('');\n}\nfunction isFragment(node) {\n  return node.nodeName === '#document-fragment';\n}\nfunction innerSVG(element, svg) {\n  if (svg !== undefined) {\n    try {\n      set(element, svg);\n    } catch (e) {\n      throw new Error('error parsing SVG: ' + e.message);\n    }\n    return element;\n  } else {\n    return get(element);\n  }\n}\nfunction slice(arr) {\n  return Array.prototype.slice.call(arr);\n}\n\n/**\r\n * Selection utilities\r\n */\n\nfunction select(node, selector) {\n  return node.querySelector(selector);\n}\nfunction selectAll(node, selector) {\n  var nodes = node.querySelectorAll(selector);\n  return [].map.call(nodes, function (element) {\n    return element;\n  });\n}\n\n/**\r\n * prependTo utility\r\n */\n\n/**\r\n * Prepend a node to a target element and return the prepended node.\r\n *\r\n * @param  {SVGElement} node\r\n * @param  {SVGElement} target\r\n *\r\n * @return {SVGElement} the prepended node\r\n */\nfunction prependTo(node, target) {\n  return target.insertBefore(ensureImported(node, target), target.firstChild || null);\n}\n\n/**\r\n * prepend utility\r\n */\n\n/**\r\n * Prepend a node to a target element\r\n *\r\n * @param  {SVGElement} target\r\n * @param  {SVGElement} node\r\n *\r\n * @return {SVGElement} the target element\r\n */\nfunction prepend(target, node) {\n  prependTo(node, target);\n  return target;\n}\n\n/**\r\n * Replace utility\r\n */\n\nfunction replace(element, replacement) {\n  element.parentNode.replaceChild(ensureImported(replacement, element), element);\n  return replacement;\n}\n\n/**\r\n * transform accessor utility\r\n */\n\nfunction wrapMatrix(transformList, transform) {\n  if (transform instanceof SVGMatrix) {\n    return transformList.createSVGTransformFromMatrix(transform);\n  }\n  return transform;\n}\nfunction setTransforms(transformList, transforms) {\n  var i, t;\n  transformList.clear();\n  for (i = 0; t = transforms[i]; i++) {\n    transformList.appendItem(wrapMatrix(transformList, t));\n  }\n}\n\n/**\r\n * Get or set the transforms on the given node.\r\n *\r\n * @param {SVGElement} node\r\n * @param  {SVGTransform|SVGMatrix|Array<SVGTransform|SVGMatrix>} [transforms]\r\n *\r\n * @return {SVGTransform} the consolidated transform\r\n */\nfunction transform(node, transforms) {\n  var transformList = node.transform.baseVal;\n  if (transforms) {\n    if (!Array.isArray(transforms)) {\n      transforms = [transforms];\n    }\n    setTransforms(transformList, transforms);\n  }\n  return transformList.consolidate();\n}\nexport { append, appendTo, attr, classes, clear, clone, create, innerSVG, prepend, prependTo, remove, replace, transform, on, off, createPoint, createMatrix, createTransform, select, selectAll };","map":{"version":3,"names":["ensureImported","element","target","ownerDocument","importNode","e","appendTo","appendChild","append","node","LENGTH_ATTR","CSS_PROPERTIES","getAttribute","name","style","getAttributeNS","setAttribute","value","hyphenated","replace","toLowerCase","type","String","setAttributeNS","setAttributes","attrs","names","Object","keys","i","attr","undefined","index","arr","obj","indexOf","length","re","toString","prototype","defined","o","classes","el","ClassList","nodeType","Error","list","classList","add","array","push","className","baseVal","join","remove","call","removeMatching","splice","test","toggle","force","has","str","split","shift","contains","parent","parentNode","removeChild","clear","child","firstChild","clone","cloneNode","ns","svg","SVG_START","parse","unwrap","substring","parsed","parseDocument","fragment","document","createDocumentFragment","parser","DOMParser","async","parseFromString","create","charAt","createElementNS","on","event","listener","useCapture","addEventListener","off","removeEventListener","getNode","extend","object","props","k","createPoint","x","y","point","createSVGPoint","arguments","createMatrix","a","b","c","d","f","matrix","createSVGMatrix","createTransform","createSVGTransformFromMatrix","createSVGTransform","TEXT_ENTITIES","ATTR_ENTITIES","ENTITY_REPLACEMENT","escape","pattern","replaceFn","match","entity","serialize","output","len","attrMap","attrNode","childNodes","textContent","tagName","hasAttributes","attributes","item","hasChildNodes","nodeValue","set","isFragment","documentElement","nodes","slice","get","nextSibling","nodeName","innerSVG","message","Array","select","selector","querySelector","selectAll","querySelectorAll","map","prependTo","insertBefore","prepend","replacement","replaceChild","wrapMatrix","transformList","transform","SVGMatrix","setTransforms","transforms","t","appendItem","isArray","consolidate"],"sources":["C:/Users/sam/final/camunda-react/node_modules/tiny-svg/dist/index.esm.js"],"sourcesContent":["function ensureImported(element, target) {\r\n\r\n  if (element.ownerDocument !== target.ownerDocument) {\r\n    try {\r\n      // may fail on webkit\r\n      return target.ownerDocument.importNode(element, true);\r\n    } catch (e) {\r\n      // ignore\r\n    }\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\n/**\r\n * appendTo utility\r\n */\r\n\r\n/**\r\n * Append a node to a target element and return the appended node.\r\n *\r\n * @param  {SVGElement} element\r\n * @param  {SVGElement} target\r\n *\r\n * @return {SVGElement} the appended node\r\n */\r\nfunction appendTo(element, target) {\r\n  return target.appendChild(ensureImported(element, target));\r\n}\r\n\r\n/**\r\n * append utility\r\n */\r\n\r\n/**\r\n * Append a node to an element\r\n *\r\n * @param  {SVGElement} element\r\n * @param  {SVGElement} node\r\n *\r\n * @return {SVGElement} the element\r\n */\r\nfunction append(target, node) {\r\n  appendTo(node, target);\r\n  return target;\r\n}\r\n\r\n/**\r\n * attribute accessor utility\r\n */\r\n\r\nvar LENGTH_ATTR = 2;\r\n\r\nvar CSS_PROPERTIES = {\r\n  'alignment-baseline': 1,\r\n  'baseline-shift': 1,\r\n  'clip': 1,\r\n  'clip-path': 1,\r\n  'clip-rule': 1,\r\n  'color': 1,\r\n  'color-interpolation': 1,\r\n  'color-interpolation-filters': 1,\r\n  'color-profile': 1,\r\n  'color-rendering': 1,\r\n  'cursor': 1,\r\n  'direction': 1,\r\n  'display': 1,\r\n  'dominant-baseline': 1,\r\n  'enable-background': 1,\r\n  'fill': 1,\r\n  'fill-opacity': 1,\r\n  'fill-rule': 1,\r\n  'filter': 1,\r\n  'flood-color': 1,\r\n  'flood-opacity': 1,\r\n  'font': 1,\r\n  'font-family': 1,\r\n  'font-size': LENGTH_ATTR,\r\n  'font-size-adjust': 1,\r\n  'font-stretch': 1,\r\n  'font-style': 1,\r\n  'font-variant': 1,\r\n  'font-weight': 1,\r\n  'glyph-orientation-horizontal': 1,\r\n  'glyph-orientation-vertical': 1,\r\n  'image-rendering': 1,\r\n  'kerning': 1,\r\n  'letter-spacing': 1,\r\n  'lighting-color': 1,\r\n  'marker': 1,\r\n  'marker-end': 1,\r\n  'marker-mid': 1,\r\n  'marker-start': 1,\r\n  'mask': 1,\r\n  'opacity': 1,\r\n  'overflow': 1,\r\n  'pointer-events': 1,\r\n  'shape-rendering': 1,\r\n  'stop-color': 1,\r\n  'stop-opacity': 1,\r\n  'stroke': 1,\r\n  'stroke-dasharray': 1,\r\n  'stroke-dashoffset': 1,\r\n  'stroke-linecap': 1,\r\n  'stroke-linejoin': 1,\r\n  'stroke-miterlimit': 1,\r\n  'stroke-opacity': 1,\r\n  'stroke-width': LENGTH_ATTR,\r\n  'text-anchor': 1,\r\n  'text-decoration': 1,\r\n  'text-rendering': 1,\r\n  'unicode-bidi': 1,\r\n  'visibility': 1,\r\n  'word-spacing': 1,\r\n  'writing-mode': 1\r\n};\r\n\r\n\r\nfunction getAttribute(node, name) {\r\n  if (CSS_PROPERTIES[name]) {\r\n    return node.style[name];\r\n  } else {\r\n    return node.getAttributeNS(null, name);\r\n  }\r\n}\r\n\r\nfunction setAttribute(node, name, value) {\r\n  var hyphenated = name.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\r\n\r\n  var type = CSS_PROPERTIES[hyphenated];\r\n\r\n  if (type) {\r\n    // append pixel unit, unless present\r\n    if (type === LENGTH_ATTR && typeof value === 'number') {\r\n      value = String(value) + 'px';\r\n    }\r\n\r\n    node.style[hyphenated] = value;\r\n  } else {\r\n    node.setAttributeNS(null, name, value);\r\n  }\r\n}\r\n\r\nfunction setAttributes(node, attrs) {\r\n\r\n  var names = Object.keys(attrs), i, name;\r\n\r\n  for (i = 0, name; (name = names[i]); i++) {\r\n    setAttribute(node, name, attrs[name]);\r\n  }\r\n}\r\n\r\n/**\r\n * Gets or sets raw attributes on a node.\r\n *\r\n * @param  {SVGElement} node\r\n * @param  {Object} [attrs]\r\n * @param  {String} [name]\r\n * @param  {String} [value]\r\n *\r\n * @return {String}\r\n */\r\nfunction attr(node, name, value) {\r\n  if (typeof name === 'string') {\r\n    if (value !== undefined) {\r\n      setAttribute(node, name, value);\r\n    } else {\r\n      return getAttribute(node, name);\r\n    }\r\n  } else {\r\n    setAttributes(node, name);\r\n  }\r\n\r\n  return node;\r\n}\r\n\r\n/**\r\n * Clear utility\r\n */\r\nfunction index(arr, obj) {\r\n  if (arr.indexOf) {\r\n    return arr.indexOf(obj);\r\n  }\r\n\r\n\r\n  for (var i = 0; i < arr.length; ++i) {\r\n    if (arr[i] === obj) {\r\n      return i;\r\n    }\r\n  }\r\n\r\n  return -1;\r\n}\r\n\r\nvar re = /\\s+/;\r\n\r\nvar toString = Object.prototype.toString;\r\n\r\nfunction defined(o) {\r\n  return typeof o !== 'undefined';\r\n}\r\n\r\n/**\r\n * Wrap `el` in a `ClassList`.\r\n *\r\n * @param {Element} el\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nfunction classes(el) {\r\n  return new ClassList(el);\r\n}\r\n\r\nfunction ClassList(el) {\r\n  if (!el || !el.nodeType) {\r\n    throw new Error('A DOM element reference is required');\r\n  }\r\n  this.el = el;\r\n  this.list = el.classList;\r\n}\r\n\r\n/**\r\n * Add class `name` if not already present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.add = function(name) {\r\n\r\n  // classList\r\n  if (this.list) {\r\n    this.list.add(name);\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  var arr = this.array();\r\n  var i = index(arr, name);\r\n  if (!~i) {\r\n    arr.push(name);\r\n  }\r\n\r\n  if (defined(this.el.className.baseVal)) {\r\n    this.el.className.baseVal = arr.join(' ');\r\n  } else {\r\n    this.el.className = arr.join(' ');\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove class `name` when present, or\r\n * pass a regular expression to remove\r\n * any which match.\r\n *\r\n * @param {String|RegExp} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.remove = function(name) {\r\n  if ('[object RegExp]' === toString.call(name)) {\r\n    return this.removeMatching(name);\r\n  }\r\n\r\n  // classList\r\n  if (this.list) {\r\n    this.list.remove(name);\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  var arr = this.array();\r\n  var i = index(arr, name);\r\n  if (~i) {\r\n    arr.splice(i, 1);\r\n  }\r\n  this.el.className.baseVal = arr.join(' ');\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove all classes matching `re`.\r\n *\r\n * @param {RegExp} re\r\n * @return {ClassList}\r\n * @api private\r\n */\r\n\r\nClassList.prototype.removeMatching = function(re) {\r\n  var arr = this.array();\r\n  for (var i = 0; i < arr.length; i++) {\r\n    if (re.test(arr[i])) {\r\n      this.remove(arr[i]);\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Toggle class `name`, can force state via `force`.\r\n *\r\n * For browsers that support classList, but do not support `force` yet,\r\n * the mistake will be detected and corrected.\r\n *\r\n * @param {String} name\r\n * @param {Boolean} force\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.toggle = function(name, force) {\r\n  // classList\r\n  if (this.list) {\r\n    if (defined(force)) {\r\n      if (force !== this.list.toggle(name, force)) {\r\n        this.list.toggle(name); // toggle again to correct\r\n      }\r\n    } else {\r\n      this.list.toggle(name);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  // fallback\r\n  if (defined(force)) {\r\n    if (!force) {\r\n      this.remove(name);\r\n    } else {\r\n      this.add(name);\r\n    }\r\n  } else {\r\n    if (this.has(name)) {\r\n      this.remove(name);\r\n    } else {\r\n      this.add(name);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return an array of classes.\r\n *\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.array = function() {\r\n  var className = this.el.getAttribute('class') || '';\r\n  var str = className.replace(/^\\s+|\\s+$/g, '');\r\n  var arr = str.split(re);\r\n  if ('' === arr[0]) {\r\n    arr.shift();\r\n  }\r\n  return arr;\r\n};\r\n\r\n/**\r\n * Check if class `name` is present.\r\n *\r\n * @param {String} name\r\n * @return {ClassList}\r\n * @api public\r\n */\r\n\r\nClassList.prototype.has =\r\nClassList.prototype.contains = function(name) {\r\n  return (\r\n    this.list ?\r\n      this.list.contains(name) :\r\n      !! ~index(this.array(), name)\r\n  );\r\n};\r\n\r\nfunction remove(element) {\r\n  var parent = element.parentNode;\r\n\r\n  if (parent) {\r\n    parent.removeChild(element);\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\n/**\r\n * Clear utility\r\n */\r\n\r\n/**\r\n * Removes all children from the given element\r\n *\r\n * @param  {DOMElement} element\r\n * @return {DOMElement} the element (for chaining)\r\n */\r\nfunction clear(element) {\r\n  var child;\r\n\r\n  while ((child = element.firstChild)) {\r\n    remove(child);\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\nfunction clone(element) {\r\n  return element.cloneNode(true);\r\n}\r\n\r\nvar ns = {\r\n  svg: 'http://www.w3.org/2000/svg'\r\n};\r\n\r\n/**\r\n * DOM parsing utility\r\n */\r\n\r\nvar SVG_START = '<svg xmlns=\"' + ns.svg + '\"';\r\n\r\nfunction parse(svg) {\r\n\r\n  var unwrap = false;\r\n\r\n  // ensure we import a valid svg document\r\n  if (svg.substring(0, 4) === '<svg') {\r\n    if (svg.indexOf(ns.svg) === -1) {\r\n      svg = SVG_START + svg.substring(4);\r\n    }\r\n  } else {\r\n    // namespace svg\r\n    svg = SVG_START + '>' + svg + '</svg>';\r\n    unwrap = true;\r\n  }\r\n\r\n  var parsed = parseDocument(svg);\r\n\r\n  if (!unwrap) {\r\n    return parsed;\r\n  }\r\n\r\n  var fragment = document.createDocumentFragment();\r\n\r\n  var parent = parsed.firstChild;\r\n\r\n  while (parent.firstChild) {\r\n    fragment.appendChild(parent.firstChild);\r\n  }\r\n\r\n  return fragment;\r\n}\r\n\r\nfunction parseDocument(svg) {\r\n\r\n  var parser;\r\n\r\n  // parse\r\n  parser = new DOMParser();\r\n  parser.async = false;\r\n\r\n  return parser.parseFromString(svg, 'text/xml');\r\n}\r\n\r\n/**\r\n * Create utility for SVG elements\r\n */\r\n\r\n\r\n/**\r\n * Create a specific type from name or SVG markup.\r\n *\r\n * @param {String} name the name or markup of the element\r\n * @param {Object} [attrs] attributes to set on the element\r\n *\r\n * @returns {SVGElement}\r\n */\r\nfunction create(name, attrs) {\r\n  var element;\r\n\r\n  if (name.charAt(0) === '<') {\r\n    element = parse(name).firstChild;\r\n    element = document.importNode(element, true);\r\n  } else {\r\n    element = document.createElementNS(ns.svg, name);\r\n  }\r\n\r\n  if (attrs) {\r\n    attr(element, attrs);\r\n  }\r\n\r\n  return element;\r\n}\r\n\r\n/**\r\n * Events handling utility\r\n */\r\n\r\nfunction on(node, event, listener, useCapture) {\r\n  node.addEventListener(event, listener, useCapture);\r\n}\r\n\r\nfunction off(node, event, listener, useCapture) {\r\n  node.removeEventListener(event, listener, useCapture);\r\n}\r\n\r\n/**\r\n * Geometry helpers\r\n */\r\n\r\n// fake node used to instantiate svg geometry elements\r\nvar node = null;\r\n\r\nfunction getNode() {\r\n  if (node === null) {\r\n    node = create('svg');\r\n  }\r\n\r\n  return node;\r\n}\r\n\r\nfunction extend(object, props) {\r\n  var i, k, keys = Object.keys(props);\r\n\r\n  for (i = 0; (k = keys[i]); i++) {\r\n    object[k] = props[k];\r\n  }\r\n\r\n  return object;\r\n}\r\n\r\n\r\nfunction createPoint(x, y) {\r\n  var point = getNode().createSVGPoint();\r\n\r\n  switch (arguments.length) {\r\n  case 0:\r\n    return point;\r\n  case 2:\r\n    x = {\r\n      x: x,\r\n      y: y\r\n    };\r\n    break;\r\n  }\r\n\r\n  return extend(point, x);\r\n}\r\n\r\n/**\r\n * Create matrix via args.\r\n *\r\n * @example\r\n *\r\n * createMatrix({ a: 1, b: 1 });\r\n * createMatrix();\r\n * createMatrix(1, 2, 0, 0, 30, 20);\r\n *\r\n * @return {SVGMatrix}\r\n */\r\nfunction createMatrix(a, b, c, d, e, f) {\r\n  var matrix = getNode().createSVGMatrix();\r\n\r\n  switch (arguments.length) {\r\n  case 0:\r\n    return matrix;\r\n  case 1:\r\n    return extend(matrix, a);\r\n  case 6:\r\n    return extend(matrix, {\r\n      a: a,\r\n      b: b,\r\n      c: c,\r\n      d: d,\r\n      e: e,\r\n      f: f\r\n    });\r\n  }\r\n}\r\n\r\nfunction createTransform(matrix) {\r\n  if (matrix) {\r\n    return getNode().createSVGTransformFromMatrix(matrix);\r\n  } else {\r\n    return getNode().createSVGTransform();\r\n  }\r\n}\r\n\r\n/**\r\n * Serialization util\r\n */\r\n\r\nvar TEXT_ENTITIES = /([&<>]{1})/g;\r\nvar ATTR_ENTITIES = /([\\n\\r\"]{1})/g;\r\n\r\nvar ENTITY_REPLACEMENT = {\r\n  '&': '&amp;',\r\n  '<': '&lt;',\r\n  '>': '&gt;',\r\n  '\"': '\\''\r\n};\r\n\r\nfunction escape(str, pattern) {\r\n\r\n  function replaceFn(match, entity) {\r\n    return ENTITY_REPLACEMENT[entity] || entity;\r\n  }\r\n\r\n  return str.replace(pattern, replaceFn);\r\n}\r\n\r\nfunction serialize(node, output) {\r\n\r\n  var i, len, attrMap, attrNode, childNodes;\r\n\r\n  switch (node.nodeType) {\r\n  // TEXT\r\n  case 3:\r\n    // replace special XML characters\r\n    output.push(escape(node.textContent, TEXT_ENTITIES));\r\n    break;\r\n\r\n  // ELEMENT\r\n  case 1:\r\n    output.push('<', node.tagName);\r\n\r\n    if (node.hasAttributes()) {\r\n      attrMap = node.attributes;\r\n      for (i = 0, len = attrMap.length; i < len; ++i) {\r\n        attrNode = attrMap.item(i);\r\n        output.push(' ', attrNode.name, '=\"', escape(attrNode.value, ATTR_ENTITIES), '\"');\r\n      }\r\n    }\r\n\r\n    if (node.hasChildNodes()) {\r\n      output.push('>');\r\n      childNodes = node.childNodes;\r\n      for (i = 0, len = childNodes.length; i < len; ++i) {\r\n        serialize(childNodes.item(i), output);\r\n      }\r\n      output.push('</', node.tagName, '>');\r\n    } else {\r\n      output.push('/>');\r\n    }\r\n    break;\r\n\r\n  // COMMENT\r\n  case 8:\r\n    output.push('<!--', escape(node.nodeValue, TEXT_ENTITIES), '-->');\r\n    break;\r\n\r\n  // CDATA\r\n  case 4:\r\n    output.push('<![CDATA[', node.nodeValue, ']]>');\r\n    break;\r\n\r\n  default:\r\n    throw new Error('unable to handle node ' + node.nodeType);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\n/**\r\n * innerHTML like functionality for SVG elements.\r\n * based on innerSVG (https://code.google.com/p/innersvg)\r\n */\r\n\r\n\r\nfunction set(element, svg) {\r\n\r\n  var parsed = parse(svg);\r\n\r\n  // clear element contents\r\n  clear(element);\r\n\r\n  if (!svg) {\r\n    return;\r\n  }\r\n\r\n  if (!isFragment(parsed)) {\r\n    // extract <svg> from parsed document\r\n    parsed = parsed.documentElement;\r\n  }\r\n\r\n  var nodes = slice(parsed.childNodes);\r\n\r\n  // import + append each node\r\n  for (var i = 0; i < nodes.length; i++) {\r\n    appendTo(nodes[i], element);\r\n  }\r\n\r\n}\r\n\r\nfunction get(element) {\r\n  var child = element.firstChild,\r\n      output = [];\r\n\r\n  while (child) {\r\n    serialize(child, output);\r\n    child = child.nextSibling;\r\n  }\r\n\r\n  return output.join('');\r\n}\r\n\r\nfunction isFragment(node) {\r\n  return node.nodeName === '#document-fragment';\r\n}\r\n\r\nfunction innerSVG(element, svg) {\r\n\r\n  if (svg !== undefined) {\r\n\r\n    try {\r\n      set(element, svg);\r\n    } catch (e) {\r\n      throw new Error('error parsing SVG: ' + e.message);\r\n    }\r\n\r\n    return element;\r\n  } else {\r\n    return get(element);\r\n  }\r\n}\r\n\r\n\r\nfunction slice(arr) {\r\n  return Array.prototype.slice.call(arr);\r\n}\r\n\r\n/**\r\n * Selection utilities\r\n */\r\n\r\nfunction select(node, selector) {\r\n  return node.querySelector(selector);\r\n}\r\n\r\nfunction selectAll(node, selector) {\r\n  var nodes = node.querySelectorAll(selector);\r\n\r\n  return [].map.call(nodes, function(element) {\r\n    return element;\r\n  });\r\n}\r\n\r\n/**\r\n * prependTo utility\r\n */\r\n\r\n/**\r\n * Prepend a node to a target element and return the prepended node.\r\n *\r\n * @param  {SVGElement} node\r\n * @param  {SVGElement} target\r\n *\r\n * @return {SVGElement} the prepended node\r\n */\r\nfunction prependTo(node, target) {\r\n  return target.insertBefore(ensureImported(node, target), target.firstChild || null);\r\n}\r\n\r\n/**\r\n * prepend utility\r\n */\r\n\r\n/**\r\n * Prepend a node to a target element\r\n *\r\n * @param  {SVGElement} target\r\n * @param  {SVGElement} node\r\n *\r\n * @return {SVGElement} the target element\r\n */\r\nfunction prepend(target, node) {\r\n  prependTo(node, target);\r\n  return target;\r\n}\r\n\r\n/**\r\n * Replace utility\r\n */\r\n\r\nfunction replace(element, replacement) {\r\n  element.parentNode.replaceChild(ensureImported(replacement, element), element);\r\n  return replacement;\r\n}\r\n\r\n/**\r\n * transform accessor utility\r\n */\r\n\r\nfunction wrapMatrix(transformList, transform) {\r\n  if (transform instanceof SVGMatrix) {\r\n    return transformList.createSVGTransformFromMatrix(transform);\r\n  }\r\n\r\n  return transform;\r\n}\r\n\r\n\r\nfunction setTransforms(transformList, transforms) {\r\n  var i, t;\r\n\r\n  transformList.clear();\r\n\r\n  for (i = 0; (t = transforms[i]); i++) {\r\n    transformList.appendItem(wrapMatrix(transformList, t));\r\n  }\r\n}\r\n\r\n/**\r\n * Get or set the transforms on the given node.\r\n *\r\n * @param {SVGElement} node\r\n * @param  {SVGTransform|SVGMatrix|Array<SVGTransform|SVGMatrix>} [transforms]\r\n *\r\n * @return {SVGTransform} the consolidated transform\r\n */\r\nfunction transform(node, transforms) {\r\n  var transformList = node.transform.baseVal;\r\n\r\n  if (transforms) {\r\n\r\n    if (!Array.isArray(transforms)) {\r\n      transforms = [ transforms ];\r\n    }\r\n\r\n    setTransforms(transformList, transforms);\r\n  }\r\n\r\n  return transformList.consolidate();\r\n}\r\n\r\nexport { append, appendTo, attr, classes, clear, clone, create, innerSVG, prepend, prependTo, remove, replace, transform, on, off, createPoint, createMatrix, createTransform, select, selectAll };\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}