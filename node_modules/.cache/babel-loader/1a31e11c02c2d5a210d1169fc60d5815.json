{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _set from \"lodash-es/set\";\nimport _invoke from \"lodash-es/invoke\";\nimport _get from \"lodash-es/get\";\nimport _isNil from \"lodash-es/isNil\";\nimport { Ref } from '@fluentui/react-component-ref';\nimport cx from 'clsx';\nimport PropTypes from 'prop-types';\nimport React, { createRef } from 'react';\nimport { ModernAutoControlledComponent as Component, createHTMLLabel, customPropTypes, getElementType, getUnhandledProps, htmlInputAttrs, partitionHTMLProps, useKeyOnly } from '../../lib';\n\n/**\r\n * A checkbox allows a user to select a value from a small set of options, often binary.\r\n * @see Form\r\n * @see Radio\r\n */\nvar Checkbox = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Checkbox, _Component);\n  function Checkbox() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\n    _this.inputRef = /*#__PURE__*/createRef();\n    _this.labelRef = /*#__PURE__*/createRef();\n    _this.canToggle = function () {\n      var _this$props = _this.props,\n        disabled = _this$props.disabled,\n        radio = _this$props.radio,\n        readOnly = _this$props.readOnly;\n      var checked = _this.state.checked;\n      return !disabled && !readOnly && !(radio && checked);\n    };\n    _this.computeTabIndex = function () {\n      var _this$props2 = _this.props,\n        disabled = _this$props2.disabled,\n        tabIndex = _this$props2.tabIndex;\n      if (!_isNil(tabIndex)) return tabIndex;\n      return disabled ? -1 : 0;\n    };\n    _this.handleClick = function (e) {\n      var id = _this.props.id;\n      var _this$state = _this.state,\n        checked = _this$state.checked,\n        indeterminate = _this$state.indeterminate;\n      var isInputClick = _invoke(_this.inputRef.current, 'contains', e.target);\n      var isLabelClick = _invoke(_this.labelRef.current, 'contains', e.target);\n      var isRootClick = !isLabelClick && !isInputClick;\n      var hasId = !_isNil(id);\n      var isLabelClickAndForwardedToInput = isLabelClick && hasId; // https://github.com/Semantic-Org/Semantic-UI-React/pull/3351\n\n      if (!isLabelClickAndForwardedToInput) {\n        _invoke(_this.props, 'onClick', e, _extends({}, _this.props, {\n          checked: !checked,\n          indeterminate: !!indeterminate\n        }));\n      }\n      if (_this.isClickFromMouse) {\n        _this.isClickFromMouse = false;\n        if (isLabelClick && !hasId) {\n          _this.handleChange(e);\n        } // Changes should be triggered for the slider variation\n\n        if (isRootClick) {\n          _this.handleChange(e);\n        }\n        if (isLabelClick && hasId) {\n          // To prevent two clicks from being fired from the component we have to stop the propagation\n          // from the \"input\" click: https://github.com/Semantic-Org/Semantic-UI-React/issues/3433\n          e.stopPropagation();\n        }\n      }\n    };\n    _this.handleChange = function (e) {\n      var checked = _this.state.checked;\n      if (!_this.canToggle()) return;\n      _invoke(_this.props, 'onChange', e, _extends({}, _this.props, {\n        checked: !checked,\n        indeterminate: false\n      }));\n      _this.setState({\n        checked: !checked,\n        indeterminate: false\n      });\n    };\n    _this.handleMouseDown = function (e) {\n      var _this$state2 = _this.state,\n        checked = _this$state2.checked,\n        indeterminate = _this$state2.indeterminate;\n      _invoke(_this.props, 'onMouseDown', e, _extends({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n      if (!e.defaultPrevented) {\n        _invoke(_this.inputRef.current, 'focus');\n      } // Heads up!\n      // We need to call \"preventDefault\" to keep element focused.\n\n      e.preventDefault();\n    };\n    _this.handleMouseUp = function (e) {\n      var _this$state3 = _this.state,\n        checked = _this$state3.checked,\n        indeterminate = _this$state3.indeterminate;\n      _this.isClickFromMouse = true;\n      _invoke(_this.props, 'onMouseUp', e, _extends({}, _this.props, {\n        checked: !!checked,\n        indeterminate: !!indeterminate\n      }));\n    };\n    _this.setIndeterminate = function () {\n      var indeterminate = _this.state.indeterminate;\n      _set(_this.inputRef, 'current.indeterminate', !!indeterminate);\n    };\n    return _this;\n  }\n  var _proto = Checkbox.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    this.setIndeterminate();\n  };\n  _proto.componentDidUpdate = function componentDidUpdate() {\n    this.setIndeterminate();\n  };\n  _proto.render = function render() {\n    var _this$props3 = this.props,\n      className = _this$props3.className,\n      disabled = _this$props3.disabled,\n      label = _this$props3.label,\n      id = _this$props3.id,\n      name = _this$props3.name,\n      radio = _this$props3.radio,\n      readOnly = _this$props3.readOnly,\n      slider = _this$props3.slider,\n      toggle = _this$props3.toggle,\n      type = _this$props3.type,\n      value = _this$props3.value;\n    var _this$state4 = this.state,\n      checked = _this$state4.checked,\n      indeterminate = _this$state4.indeterminate;\n    var classes = cx('ui', useKeyOnly(checked, 'checked'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'),\n    // auto apply fitted class to compact white space when there is no label\n    // https://semantic-ui.com/modules/checkbox.html#fitted\n    useKeyOnly(_isNil(label), 'fitted'), useKeyOnly(radio, 'radio'), useKeyOnly(readOnly, 'read-only'), useKeyOnly(slider, 'slider'), useKeyOnly(toggle, 'toggle'), 'checkbox', className);\n    var unhandled = getUnhandledProps(Checkbox, this.props);\n    var ElementType = getElementType(Checkbox, this.props);\n    var _partitionHTMLProps = partitionHTMLProps(unhandled, {\n        htmlProps: htmlInputAttrs\n      }),\n      htmlInputProps = _partitionHTMLProps[0],\n      rest = _partitionHTMLProps[1]; // Heads Up!\n    // Do not remove empty labels, they are required by SUI CSS\n\n    var labelElement = createHTMLLabel(label, {\n      defaultProps: {\n        htmlFor: id\n      },\n      autoGenerateKey: false\n    }) || /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: id\n    });\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\n      className: classes,\n      onClick: this.handleClick,\n      onChange: this.handleChange,\n      onMouseDown: this.handleMouseDown,\n      onMouseUp: this.handleMouseUp\n    }), /*#__PURE__*/React.createElement(Ref, {\n      innerRef: this.inputRef\n    }, /*#__PURE__*/React.createElement(\"input\", _extends({}, htmlInputProps, {\n      checked: checked,\n      className: \"hidden\",\n      disabled: disabled,\n      id: id,\n      name: name,\n      readOnly: true,\n      tabIndex: this.computeTabIndex(),\n      type: type,\n      value: value\n    }))), /*#__PURE__*/React.createElement(Ref, {\n      innerRef: this.labelRef\n    }, labelElement));\n  };\n  return Checkbox;\n}(Component);\nCheckbox.handledProps = [\"as\", \"checked\", \"className\", \"defaultChecked\", \"defaultIndeterminate\", \"disabled\", \"fitted\", \"id\", \"indeterminate\", \"label\", \"name\", \"onChange\", \"onClick\", \"onMouseDown\", \"onMouseUp\", \"radio\", \"readOnly\", \"slider\", \"tabIndex\", \"toggle\", \"type\", \"value\"];\nexport { Checkbox as default };\nCheckbox.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** An element type to render as (string or function). */\n  as: PropTypes.elementType,\n  /** Whether or not checkbox is checked. */\n  checked: PropTypes.bool,\n  /** Additional classes. */\n  className: PropTypes.string,\n  /** The initial value of checked. */\n  defaultChecked: PropTypes.bool,\n  /** Whether or not checkbox is indeterminate. */\n  defaultIndeterminate: PropTypes.bool,\n  /** A checkbox can appear disabled and be unable to change states */\n  disabled: PropTypes.bool,\n  /** Removes padding for a label. Auto applied when there is no label. */\n  fitted: PropTypes.bool,\n  /** A unique identifier. */\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /** Whether or not checkbox is indeterminate. */\n  indeterminate: PropTypes.bool,\n  /** The text of the associated label element. */\n  label: customPropTypes.itemShorthand,\n  /** The HTML input name. */\n  name: PropTypes.string,\n  /**\r\n   * Called when the user attempts to change the checked state.\r\n   *\r\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\r\n   * @param {object} data - All props and proposed checked/indeterminate state.\r\n   */\n  onChange: PropTypes.func,\n  /**\r\n   * Called when the checkbox or label is clicked.\r\n   *\r\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\r\n   * @param {object} data - All props and current checked/indeterminate state.\r\n   */\n  onClick: PropTypes.func,\n  /**\r\n   * Called when the user presses down on the mouse.\r\n   *\r\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\r\n   * @param {object} data - All props and current checked/indeterminate state.\r\n   */\n  onMouseDown: PropTypes.func,\n  /**\r\n   * Called when the user releases the mouse.\r\n   *\r\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\r\n   * @param {object} data - All props and current checked/indeterminate state.\r\n   */\n  onMouseUp: PropTypes.func,\n  /** Format as a radio element. This means it is an exclusive option. */\n  radio: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['slider', 'toggle'])]),\n  /** A checkbox can be read-only and unable to change states. */\n  readOnly: PropTypes.bool,\n  /** Format to emphasize the current selection state. */\n  slider: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'toggle'])]),\n  /** A checkbox can receive focus. */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /** Format to show an on or off choice. */\n  toggle: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'slider'])]),\n  /** HTML input type, either checkbox or radio. */\n  type: PropTypes.oneOf(['checkbox', 'radio']),\n  /** The HTML input value. */\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n} : {};\nCheckbox.defaultProps = {\n  type: 'checkbox'\n};\nCheckbox.autoControlledProps = ['checked', 'indeterminate'];","map":{"version":3,"names":["_extends","_inheritsLoose","_set","_invoke","_get","_isNil","Ref","cx","PropTypes","React","createRef","ModernAutoControlledComponent","Component","createHTMLLabel","customPropTypes","getElementType","getUnhandledProps","htmlInputAttrs","partitionHTMLProps","useKeyOnly","Checkbox","_Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","inputRef","labelRef","canToggle","_this$props","props","disabled","radio","readOnly","checked","state","computeTabIndex","_this$props2","tabIndex","handleClick","e","id","_this$state","indeterminate","isInputClick","current","target","isLabelClick","isRootClick","hasId","isLabelClickAndForwardedToInput","isClickFromMouse","handleChange","stopPropagation","setState","handleMouseDown","_this$state2","defaultPrevented","preventDefault","handleMouseUp","_this$state3","setIndeterminate","_proto","prototype","componentDidMount","componentDidUpdate","render","_this$props3","className","label","name","slider","toggle","type","value","_this$state4","classes","unhandled","ElementType","_partitionHTMLProps","htmlProps","htmlInputProps","rest","labelElement","defaultProps","htmlFor","autoGenerateKey","createElement","onClick","onChange","onMouseDown","onMouseUp","innerRef","handledProps","default","propTypes","process","env","NODE_ENV","as","elementType","bool","string","defaultChecked","defaultIndeterminate","fitted","oneOfType","number","itemShorthand","func","every","disallow","oneOf","autoControlledProps"],"sources":["C:/Users/sam/final/camunda-react/node_modules/semantic-ui-react/dist/es/modules/Checkbox/Checkbox.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\r\nimport _set from \"lodash-es/set\";\r\nimport _invoke from \"lodash-es/invoke\";\r\nimport _get from \"lodash-es/get\";\r\nimport _isNil from \"lodash-es/isNil\";\r\nimport { Ref } from '@fluentui/react-component-ref';\r\nimport cx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport React, { createRef } from 'react';\r\nimport { ModernAutoControlledComponent as Component, createHTMLLabel, customPropTypes, getElementType, getUnhandledProps, htmlInputAttrs, partitionHTMLProps, useKeyOnly } from '../../lib';\r\n\r\n/**\r\n * A checkbox allows a user to select a value from a small set of options, often binary.\r\n * @see Form\r\n * @see Radio\r\n */\r\nvar Checkbox = /*#__PURE__*/function (_Component) {\r\n  _inheritsLoose(Checkbox, _Component);\r\n\r\n  function Checkbox() {\r\n    var _this;\r\n\r\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\r\n      args[_key] = arguments[_key];\r\n    }\r\n\r\n    _this = _Component.call.apply(_Component, [this].concat(args)) || this;\r\n    _this.inputRef = /*#__PURE__*/createRef();\r\n    _this.labelRef = /*#__PURE__*/createRef();\r\n\r\n    _this.canToggle = function () {\r\n      var _this$props = _this.props,\r\n          disabled = _this$props.disabled,\r\n          radio = _this$props.radio,\r\n          readOnly = _this$props.readOnly;\r\n      var checked = _this.state.checked;\r\n      return !disabled && !readOnly && !(radio && checked);\r\n    };\r\n\r\n    _this.computeTabIndex = function () {\r\n      var _this$props2 = _this.props,\r\n          disabled = _this$props2.disabled,\r\n          tabIndex = _this$props2.tabIndex;\r\n      if (!_isNil(tabIndex)) return tabIndex;\r\n      return disabled ? -1 : 0;\r\n    };\r\n\r\n    _this.handleClick = function (e) {\r\n      var id = _this.props.id;\r\n      var _this$state = _this.state,\r\n          checked = _this$state.checked,\r\n          indeterminate = _this$state.indeterminate;\r\n\r\n      var isInputClick = _invoke(_this.inputRef.current, 'contains', e.target);\r\n\r\n      var isLabelClick = _invoke(_this.labelRef.current, 'contains', e.target);\r\n\r\n      var isRootClick = !isLabelClick && !isInputClick;\r\n      var hasId = !_isNil(id);\r\n      var isLabelClickAndForwardedToInput = isLabelClick && hasId; // https://github.com/Semantic-Org/Semantic-UI-React/pull/3351\r\n\r\n      if (!isLabelClickAndForwardedToInput) {\r\n        _invoke(_this.props, 'onClick', e, _extends({}, _this.props, {\r\n          checked: !checked,\r\n          indeterminate: !!indeterminate\r\n        }));\r\n      }\r\n\r\n      if (_this.isClickFromMouse) {\r\n        _this.isClickFromMouse = false;\r\n\r\n        if (isLabelClick && !hasId) {\r\n          _this.handleChange(e);\r\n        } // Changes should be triggered for the slider variation\r\n\r\n\r\n        if (isRootClick) {\r\n          _this.handleChange(e);\r\n        }\r\n\r\n        if (isLabelClick && hasId) {\r\n          // To prevent two clicks from being fired from the component we have to stop the propagation\r\n          // from the \"input\" click: https://github.com/Semantic-Org/Semantic-UI-React/issues/3433\r\n          e.stopPropagation();\r\n        }\r\n      }\r\n    };\r\n\r\n    _this.handleChange = function (e) {\r\n      var checked = _this.state.checked;\r\n      if (!_this.canToggle()) return;\r\n\r\n      _invoke(_this.props, 'onChange', e, _extends({}, _this.props, {\r\n        checked: !checked,\r\n        indeterminate: false\r\n      }));\r\n\r\n      _this.setState({\r\n        checked: !checked,\r\n        indeterminate: false\r\n      });\r\n    };\r\n\r\n    _this.handleMouseDown = function (e) {\r\n      var _this$state2 = _this.state,\r\n          checked = _this$state2.checked,\r\n          indeterminate = _this$state2.indeterminate;\r\n\r\n      _invoke(_this.props, 'onMouseDown', e, _extends({}, _this.props, {\r\n        checked: !!checked,\r\n        indeterminate: !!indeterminate\r\n      }));\r\n\r\n      if (!e.defaultPrevented) {\r\n        _invoke(_this.inputRef.current, 'focus');\r\n      } // Heads up!\r\n      // We need to call \"preventDefault\" to keep element focused.\r\n\r\n\r\n      e.preventDefault();\r\n    };\r\n\r\n    _this.handleMouseUp = function (e) {\r\n      var _this$state3 = _this.state,\r\n          checked = _this$state3.checked,\r\n          indeterminate = _this$state3.indeterminate;\r\n      _this.isClickFromMouse = true;\r\n\r\n      _invoke(_this.props, 'onMouseUp', e, _extends({}, _this.props, {\r\n        checked: !!checked,\r\n        indeterminate: !!indeterminate\r\n      }));\r\n    };\r\n\r\n    _this.setIndeterminate = function () {\r\n      var indeterminate = _this.state.indeterminate;\r\n\r\n      _set(_this.inputRef, 'current.indeterminate', !!indeterminate);\r\n    };\r\n\r\n    return _this;\r\n  }\r\n\r\n  var _proto = Checkbox.prototype;\r\n\r\n  _proto.componentDidMount = function componentDidMount() {\r\n    this.setIndeterminate();\r\n  };\r\n\r\n  _proto.componentDidUpdate = function componentDidUpdate() {\r\n    this.setIndeterminate();\r\n  };\r\n\r\n  _proto.render = function render() {\r\n    var _this$props3 = this.props,\r\n        className = _this$props3.className,\r\n        disabled = _this$props3.disabled,\r\n        label = _this$props3.label,\r\n        id = _this$props3.id,\r\n        name = _this$props3.name,\r\n        radio = _this$props3.radio,\r\n        readOnly = _this$props3.readOnly,\r\n        slider = _this$props3.slider,\r\n        toggle = _this$props3.toggle,\r\n        type = _this$props3.type,\r\n        value = _this$props3.value;\r\n    var _this$state4 = this.state,\r\n        checked = _this$state4.checked,\r\n        indeterminate = _this$state4.indeterminate;\r\n    var classes = cx('ui', useKeyOnly(checked, 'checked'), useKeyOnly(disabled, 'disabled'), useKeyOnly(indeterminate, 'indeterminate'), // auto apply fitted class to compact white space when there is no label\r\n    // https://semantic-ui.com/modules/checkbox.html#fitted\r\n    useKeyOnly(_isNil(label), 'fitted'), useKeyOnly(radio, 'radio'), useKeyOnly(readOnly, 'read-only'), useKeyOnly(slider, 'slider'), useKeyOnly(toggle, 'toggle'), 'checkbox', className);\r\n    var unhandled = getUnhandledProps(Checkbox, this.props);\r\n    var ElementType = getElementType(Checkbox, this.props);\r\n\r\n    var _partitionHTMLProps = partitionHTMLProps(unhandled, {\r\n      htmlProps: htmlInputAttrs\r\n    }),\r\n        htmlInputProps = _partitionHTMLProps[0],\r\n        rest = _partitionHTMLProps[1]; // Heads Up!\r\n    // Do not remove empty labels, they are required by SUI CSS\r\n\r\n\r\n    var labelElement = createHTMLLabel(label, {\r\n      defaultProps: {\r\n        htmlFor: id\r\n      },\r\n      autoGenerateKey: false\r\n    }) || /*#__PURE__*/React.createElement(\"label\", {\r\n      htmlFor: id\r\n    });\r\n    return /*#__PURE__*/React.createElement(ElementType, _extends({}, rest, {\r\n      className: classes,\r\n      onClick: this.handleClick,\r\n      onChange: this.handleChange,\r\n      onMouseDown: this.handleMouseDown,\r\n      onMouseUp: this.handleMouseUp\r\n    }), /*#__PURE__*/React.createElement(Ref, {\r\n      innerRef: this.inputRef\r\n    }, /*#__PURE__*/React.createElement(\"input\", _extends({}, htmlInputProps, {\r\n      checked: checked,\r\n      className: \"hidden\",\r\n      disabled: disabled,\r\n      id: id,\r\n      name: name,\r\n      readOnly: true,\r\n      tabIndex: this.computeTabIndex(),\r\n      type: type,\r\n      value: value\r\n    }))), /*#__PURE__*/React.createElement(Ref, {\r\n      innerRef: this.labelRef\r\n    }, labelElement));\r\n  };\r\n\r\n  return Checkbox;\r\n}(Component);\r\n\r\nCheckbox.handledProps = [\"as\", \"checked\", \"className\", \"defaultChecked\", \"defaultIndeterminate\", \"disabled\", \"fitted\", \"id\", \"indeterminate\", \"label\", \"name\", \"onChange\", \"onClick\", \"onMouseDown\", \"onMouseUp\", \"radio\", \"readOnly\", \"slider\", \"tabIndex\", \"toggle\", \"type\", \"value\"];\r\nexport { Checkbox as default };\r\nCheckbox.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** An element type to render as (string or function). */\r\n  as: PropTypes.elementType,\r\n\r\n  /** Whether or not checkbox is checked. */\r\n  checked: PropTypes.bool,\r\n\r\n  /** Additional classes. */\r\n  className: PropTypes.string,\r\n\r\n  /** The initial value of checked. */\r\n  defaultChecked: PropTypes.bool,\r\n\r\n  /** Whether or not checkbox is indeterminate. */\r\n  defaultIndeterminate: PropTypes.bool,\r\n\r\n  /** A checkbox can appear disabled and be unable to change states */\r\n  disabled: PropTypes.bool,\r\n\r\n  /** Removes padding for a label. Auto applied when there is no label. */\r\n  fitted: PropTypes.bool,\r\n\r\n  /** A unique identifier. */\r\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n\r\n  /** Whether or not checkbox is indeterminate. */\r\n  indeterminate: PropTypes.bool,\r\n\r\n  /** The text of the associated label element. */\r\n  label: customPropTypes.itemShorthand,\r\n\r\n  /** The HTML input name. */\r\n  name: PropTypes.string,\r\n\r\n  /**\r\n   * Called when the user attempts to change the checked state.\r\n   *\r\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\r\n   * @param {object} data - All props and proposed checked/indeterminate state.\r\n   */\r\n  onChange: PropTypes.func,\r\n\r\n  /**\r\n   * Called when the checkbox or label is clicked.\r\n   *\r\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\r\n   * @param {object} data - All props and current checked/indeterminate state.\r\n   */\r\n  onClick: PropTypes.func,\r\n\r\n  /**\r\n   * Called when the user presses down on the mouse.\r\n   *\r\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\r\n   * @param {object} data - All props and current checked/indeterminate state.\r\n   */\r\n  onMouseDown: PropTypes.func,\r\n\r\n  /**\r\n   * Called when the user releases the mouse.\r\n   *\r\n   * @param {SyntheticEvent} event - React's original SyntheticEvent.\r\n   * @param {object} data - All props and current checked/indeterminate state.\r\n   */\r\n  onMouseUp: PropTypes.func,\r\n\r\n  /** Format as a radio element. This means it is an exclusive option. */\r\n  radio: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['slider', 'toggle'])]),\r\n\r\n  /** A checkbox can be read-only and unable to change states. */\r\n  readOnly: PropTypes.bool,\r\n\r\n  /** Format to emphasize the current selection state. */\r\n  slider: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'toggle'])]),\r\n\r\n  /** A checkbox can receive focus. */\r\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n\r\n  /** Format to show an on or off choice. */\r\n  toggle: customPropTypes.every([PropTypes.bool, customPropTypes.disallow(['radio', 'slider'])]),\r\n\r\n  /** HTML input type, either checkbox or radio. */\r\n  type: PropTypes.oneOf(['checkbox', 'radio']),\r\n\r\n  /** The HTML input value. */\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n} : {};\r\nCheckbox.defaultProps = {\r\n  type: 'checkbox'\r\n};\r\nCheckbox.autoControlledProps = ['checked', 'indeterminate'];"],"mappings":"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"},"metadata":{},"sourceType":"module"}