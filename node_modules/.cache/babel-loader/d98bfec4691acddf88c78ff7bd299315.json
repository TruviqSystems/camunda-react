{"ast":null,"code":"var copyArray = require('./_copyArray'),\n  isIndex = require('./_isIndex');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\r\n * Reorder `array` according to the specified indexes where the element at\r\n * the first index is assigned as the first element, the element at\r\n * the second index is assigned as the second element, and so on.\r\n *\r\n * @private\r\n * @param {Array} array The array to reorder.\r\n * @param {Array} indexes The arranged array indexes.\r\n * @returns {Array} Returns `array`.\r\n */\nfunction reorder(array, indexes) {\n  var arrLength = array.length,\n    length = nativeMin(indexes.length, arrLength),\n    oldArray = copyArray(array);\n  while (length--) {\n    var index = indexes[length];\n    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n  }\n  return array;\n}\nmodule.exports = reorder;","map":{"version":3,"names":["copyArray","require","isIndex","nativeMin","Math","min","reorder","array","indexes","arrLength","length","oldArray","index","undefined","module","exports"],"sources":["C:/Users/sam/final/camunda-react/node_modules/lodash/_reorder.js"],"sourcesContent":["var copyArray = require('./_copyArray'),\r\n    isIndex = require('./_isIndex');\r\n\r\n/* Built-in method references for those with the same name as other `lodash` methods. */\r\nvar nativeMin = Math.min;\r\n\r\n/**\r\n * Reorder `array` according to the specified indexes where the element at\r\n * the first index is assigned as the first element, the element at\r\n * the second index is assigned as the second element, and so on.\r\n *\r\n * @private\r\n * @param {Array} array The array to reorder.\r\n * @param {Array} indexes The arranged array indexes.\r\n * @returns {Array} Returns `array`.\r\n */\r\nfunction reorder(array, indexes) {\r\n  var arrLength = array.length,\r\n      length = nativeMin(indexes.length, arrLength),\r\n      oldArray = copyArray(array);\r\n\r\n  while (length--) {\r\n    var index = indexes[length];\r\n    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\r\n  }\r\n  return array;\r\n}\r\n\r\nmodule.exports = reorder;\r\n"],"mappings":"AAAA,IAAIA,SAAS,GAAGC,OAAO,CAAC,cAAc,CAAC;EACnCC,OAAO,GAAGD,OAAO,CAAC,YAAY,CAAC;;AAEnC;AACA,IAAIE,SAAS,GAAGC,IAAI,CAACC,GAAG;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,OAAOA,CAACC,KAAK,EAAEC,OAAO,EAAE;EAC/B,IAAIC,SAAS,GAAGF,KAAK,CAACG,MAAM;IACxBA,MAAM,GAAGP,SAAS,CAACK,OAAO,CAACE,MAAM,EAAED,SAAS,CAAC;IAC7CE,QAAQ,GAAGX,SAAS,CAACO,KAAK,CAAC;EAE/B,OAAOG,MAAM,EAAE,EAAE;IACf,IAAIE,KAAK,GAAGJ,OAAO,CAACE,MAAM,CAAC;IAC3BH,KAAK,CAACG,MAAM,CAAC,GAAGR,OAAO,CAACU,KAAK,EAAEH,SAAS,CAAC,GAAGE,QAAQ,CAACC,KAAK,CAAC,GAAGC,SAAS;EACzE;EACA,OAAON,KAAK;AACd;AAEAO,MAAM,CAACC,OAAO,GAAGT,OAAO"},"metadata":{},"sourceType":"script"}