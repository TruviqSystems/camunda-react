{"ast":null,"code":"import { assign } from 'min-dash';\nimport TextUtil from 'diagram-js/lib/util/Text';\nvar DEFAULT_FONT_SIZE = 12;\nvar LINE_HEIGHT_RATIO = 1.2;\nvar MIN_TEXT_ANNOTATION_HEIGHT = 30;\nexport default function TextRenderer(config) {\n  var defaultStyle = assign({\n    fontFamily: 'Arial, sans-serif',\n    fontSize: DEFAULT_FONT_SIZE,\n    fontWeight: 'normal',\n    lineHeight: LINE_HEIGHT_RATIO\n  }, config && config.defaultStyle || {});\n  var fontSize = parseInt(defaultStyle.fontSize, 10) - 1;\n  var externalStyle = assign({}, defaultStyle, {\n    fontSize: fontSize\n  }, config && config.externalStyle || {});\n  var textUtil = new TextUtil({\n    style: defaultStyle\n  });\n\n  /**\n   * Get the new bounds of an externally rendered,\n   * layouted label.\n   *\n   * @param  {Bounds} bounds\n   * @param  {string} text\n   *\n   * @return {Bounds}\n   */\n  this.getExternalLabelBounds = function (bounds, text) {\n    var layoutedDimensions = textUtil.getDimensions(text, {\n      box: {\n        width: 90,\n        height: 30,\n        x: bounds.width / 2 + bounds.x,\n        y: bounds.height / 2 + bounds.y\n      },\n      style: externalStyle\n    });\n\n    // resize label shape to fit label text\n    return {\n      x: Math.round(bounds.x + bounds.width / 2 - layoutedDimensions.width / 2),\n      y: Math.round(bounds.y),\n      width: Math.ceil(layoutedDimensions.width),\n      height: Math.ceil(layoutedDimensions.height)\n    };\n  };\n\n  /**\n   * Get the new bounds of text annotation.\n   *\n   * @param  {Bounds} bounds\n   * @param  {string} text\n   *\n   * @return {Bounds}\n   */\n  this.getTextAnnotationBounds = function (bounds, text) {\n    var layoutedDimensions = textUtil.getDimensions(text, {\n      box: bounds,\n      style: defaultStyle,\n      align: 'left-top',\n      padding: 5\n    });\n    return {\n      x: bounds.x,\n      y: bounds.y,\n      width: bounds.width,\n      height: Math.max(MIN_TEXT_ANNOTATION_HEIGHT, Math.round(layoutedDimensions.height))\n    };\n  };\n\n  /**\n   * Create a layouted text element.\n   *\n   * @param {string} text\n   * @param {Object} [options]\n   *\n   * @return {SVGElement} rendered text\n   */\n  this.createText = function (text, options) {\n    return textUtil.createText(text, options || {});\n  };\n\n  /**\n   * Get default text style.\n   */\n  this.getDefaultStyle = function () {\n    return defaultStyle;\n  };\n\n  /**\n   * Get the external text style.\n   */\n  this.getExternalStyle = function () {\n    return externalStyle;\n  };\n}\nTextRenderer.$inject = ['config.textRenderer'];","map":{"version":3,"names":["assign","TextUtil","DEFAULT_FONT_SIZE","LINE_HEIGHT_RATIO","MIN_TEXT_ANNOTATION_HEIGHT","TextRenderer","config","defaultStyle","fontFamily","fontSize","fontWeight","lineHeight","parseInt","externalStyle","textUtil","style","getExternalLabelBounds","bounds","text","layoutedDimensions","getDimensions","box","width","height","x","y","Math","round","ceil","getTextAnnotationBounds","align","padding","max","createText","options","getDefaultStyle","getExternalStyle","$inject"],"sources":["C:/Users/KondalaRaoThota/Truviq_Camunda/camunda-react/node_modules/bpmn-js/lib/draw/TextRenderer.js"],"sourcesContent":["import { assign } from 'min-dash';\n\nimport TextUtil from 'diagram-js/lib/util/Text';\n\nvar DEFAULT_FONT_SIZE = 12;\nvar LINE_HEIGHT_RATIO = 1.2;\n\nvar MIN_TEXT_ANNOTATION_HEIGHT = 30;\n\n\nexport default function TextRenderer(config) {\n\n  var defaultStyle = assign({\n    fontFamily: 'Arial, sans-serif',\n    fontSize: DEFAULT_FONT_SIZE,\n    fontWeight: 'normal',\n    lineHeight: LINE_HEIGHT_RATIO\n  }, config && config.defaultStyle || {});\n\n  var fontSize = parseInt(defaultStyle.fontSize, 10) - 1;\n\n  var externalStyle = assign({}, defaultStyle, {\n    fontSize: fontSize\n  }, config && config.externalStyle || {});\n\n  var textUtil = new TextUtil({\n    style: defaultStyle\n  });\n\n  /**\n   * Get the new bounds of an externally rendered,\n   * layouted label.\n   *\n   * @param  {Bounds} bounds\n   * @param  {string} text\n   *\n   * @return {Bounds}\n   */\n  this.getExternalLabelBounds = function(bounds, text) {\n\n    var layoutedDimensions = textUtil.getDimensions(text, {\n      box: {\n        width: 90,\n        height: 30,\n        x: bounds.width / 2 + bounds.x,\n        y: bounds.height / 2 + bounds.y\n      },\n      style: externalStyle\n    });\n\n    // resize label shape to fit label text\n    return {\n      x: Math.round(bounds.x + bounds.width / 2 - layoutedDimensions.width / 2),\n      y: Math.round(bounds.y),\n      width: Math.ceil(layoutedDimensions.width),\n      height: Math.ceil(layoutedDimensions.height)\n    };\n\n  };\n\n  /**\n   * Get the new bounds of text annotation.\n   *\n   * @param  {Bounds} bounds\n   * @param  {string} text\n   *\n   * @return {Bounds}\n   */\n  this.getTextAnnotationBounds = function(bounds, text) {\n\n    var layoutedDimensions = textUtil.getDimensions(text, {\n      box: bounds,\n      style: defaultStyle,\n      align: 'left-top',\n      padding: 5\n    });\n\n    return {\n      x: bounds.x,\n      y: bounds.y,\n      width: bounds.width,\n      height: Math.max(MIN_TEXT_ANNOTATION_HEIGHT, Math.round(layoutedDimensions.height))\n    };\n  };\n\n  /**\n   * Create a layouted text element.\n   *\n   * @param {string} text\n   * @param {Object} [options]\n   *\n   * @return {SVGElement} rendered text\n   */\n  this.createText = function(text, options) {\n    return textUtil.createText(text, options || {});\n  };\n\n  /**\n   * Get default text style.\n   */\n  this.getDefaultStyle = function() {\n    return defaultStyle;\n  };\n\n  /**\n   * Get the external text style.\n   */\n  this.getExternalStyle = function() {\n    return externalStyle;\n  };\n\n}\n\nTextRenderer.$inject = [\n  'config.textRenderer'\n];"],"mappings":"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"},"metadata":{},"sourceType":"module"}