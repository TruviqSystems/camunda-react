{"ast":null,"code":"var baseGetTag = require('./_baseGetTag'),\n  isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/**\r\n * The base implementation of `_.isRegExp` without Node.js optimizations.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\r\n */\nfunction baseIsRegExp(value) {\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\n}\nmodule.exports = baseIsRegExp;","map":{"version":3,"names":["baseGetTag","require","isObjectLike","regexpTag","baseIsRegExp","value","module","exports"],"sources":["C:/Users/sam/final/camunda-react/node_modules/lodash/_baseIsRegExp.js"],"sourcesContent":["var baseGetTag = require('./_baseGetTag'),\r\n    isObjectLike = require('./isObjectLike');\r\n\r\n/** `Object#toString` result references. */\r\nvar regexpTag = '[object RegExp]';\r\n\r\n/**\r\n * The base implementation of `_.isRegExp` without Node.js optimizations.\r\n *\r\n * @private\r\n * @param {*} value The value to check.\r\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\r\n */\r\nfunction baseIsRegExp(value) {\r\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\r\n}\r\n\r\nmodule.exports = baseIsRegExp;\r\n"],"mappings":"AAAA,IAAIA,UAAU,GAAGC,OAAO,CAAC,eAAe,CAAC;EACrCC,YAAY,GAAGD,OAAO,CAAC,gBAAgB,CAAC;;AAE5C;AACA,IAAIE,SAAS,GAAG,iBAAiB;;AAEjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,YAAYA,CAACC,KAAK,EAAE;EAC3B,OAAOH,YAAY,CAACG,KAAK,CAAC,IAAIL,UAAU,CAACK,KAAK,CAAC,IAAIF,SAAS;AAC9D;AAEAG,MAAM,CAACC,OAAO,GAAGH,YAAY"},"metadata":{},"sourceType":"script"}